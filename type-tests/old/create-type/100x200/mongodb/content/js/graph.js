/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1735.0, "minX": 0.0, "maxY": 61483.0, "series": [{"data": [[0.0, 1735.0], [0.1, 4151.0], [0.2, 6430.0], [0.3, 8566.0], [0.4, 10734.0], [0.5, 12098.0], [0.6, 12237.0], [0.7, 12318.0], [0.8, 12377.0], [0.9, 12407.0], [1.0, 12441.0], [1.1, 12499.0], [1.2, 12528.0], [1.3, 12556.0], [1.4, 12599.0], [1.5, 12632.0], [1.6, 12659.0], [1.7, 12706.0], [1.8, 12727.0], [1.9, 12755.0], [2.0, 12826.0], [2.1, 12866.0], [2.2, 12903.0], [2.3, 12944.0], [2.4, 12975.0], [2.5, 13013.0], [2.6, 13040.0], [2.7, 13077.0], [2.8, 13102.0], [2.9, 13140.0], [3.0, 13197.0], [3.1, 13230.0], [3.2, 13279.0], [3.3, 13335.0], [3.4, 13371.0], [3.5, 13425.0], [3.6, 13484.0], [3.7, 13543.0], [3.8, 13588.0], [3.9, 13656.0], [4.0, 13705.0], [4.1, 13763.0], [4.2, 13846.0], [4.3, 13942.0], [4.4, 13975.0], [4.5, 14049.0], [4.6, 14093.0], [4.7, 14116.0], [4.8, 14141.0], [4.9, 14191.0], [5.0, 14231.0], [5.1, 14299.0], [5.2, 14354.0], [5.3, 14389.0], [5.4, 14436.0], [5.5, 14484.0], [5.6, 14522.0], [5.7, 14581.0], [5.8, 14632.0], [5.9, 14667.0], [6.0, 14733.0], [6.1, 14787.0], [6.2, 14840.0], [6.3, 14906.0], [6.4, 14958.0], [6.5, 15018.0], [6.6, 15042.0], [6.7, 15065.0], [6.8, 15086.0], [6.9, 15121.0], [7.0, 15167.0], [7.1, 15207.0], [7.2, 15274.0], [7.3, 15324.0], [7.4, 15372.0], [7.5, 15416.0], [7.6, 15514.0], [7.7, 15549.0], [7.8, 15671.0], [7.9, 15715.0], [8.0, 15763.0], [8.1, 15827.0], [8.2, 15886.0], [8.3, 15941.0], [8.4, 15975.0], [8.5, 16030.0], [8.6, 16088.0], [8.7, 16145.0], [8.8, 16194.0], [8.9, 16303.0], [9.0, 16352.0], [9.1, 16391.0], [9.2, 16432.0], [9.3, 16472.0], [9.4, 16515.0], [9.5, 16579.0], [9.6, 16647.0], [9.7, 16733.0], [9.8, 16794.0], [9.9, 16853.0], [10.0, 17051.0], [10.1, 17161.0], [10.2, 17344.0], [10.3, 17491.0], [10.4, 17586.0], [10.5, 17751.0], [10.6, 17849.0], [10.7, 17906.0], [10.8, 18041.0], [10.9, 18118.0], [11.0, 18207.0], [11.1, 18291.0], [11.2, 18374.0], [11.3, 18437.0], [11.4, 18537.0], [11.5, 18613.0], [11.6, 18672.0], [11.7, 18738.0], [11.8, 18792.0], [11.9, 18845.0], [12.0, 18939.0], [12.1, 19026.0], [12.2, 19086.0], [12.3, 19147.0], [12.4, 19194.0], [12.5, 19252.0], [12.6, 19316.0], [12.7, 19437.0], [12.8, 19511.0], [12.9, 19605.0], [13.0, 19672.0], [13.1, 19719.0], [13.2, 19780.0], [13.3, 19828.0], [13.4, 19912.0], [13.5, 19961.0], [13.6, 20031.0], [13.7, 20087.0], [13.8, 20236.0], [13.9, 20357.0], [14.0, 20561.0], [14.1, 20912.0], [14.2, 21130.0], [14.3, 21332.0], [14.4, 21461.0], [14.5, 21579.0], [14.6, 21630.0], [14.7, 21708.0], [14.8, 21753.0], [14.9, 21868.0], [15.0, 21955.0], [15.1, 22111.0], [15.2, 22174.0], [15.3, 22278.0], [15.4, 22372.0], [15.5, 22492.0], [15.6, 22638.0], [15.7, 22733.0], [15.8, 22805.0], [15.9, 23006.0], [16.0, 23096.0], [16.1, 23248.0], [16.2, 23440.0], [16.3, 23543.0], [16.4, 23656.0], [16.5, 23757.0], [16.6, 23809.0], [16.7, 23860.0], [16.8, 23939.0], [16.9, 24030.0], [17.0, 24140.0], [17.1, 24191.0], [17.2, 24257.0], [17.3, 24332.0], [17.4, 24405.0], [17.5, 24496.0], [17.6, 24584.0], [17.7, 24614.0], [17.8, 24671.0], [17.9, 24773.0], [18.0, 24889.0], [18.1, 25058.0], [18.2, 25264.0], [18.3, 25462.0], [18.4, 25631.0], [18.5, 25713.0], [18.6, 25861.0], [18.7, 25921.0], [18.8, 26018.0], [18.9, 26080.0], [19.0, 26139.0], [19.1, 26199.0], [19.2, 26265.0], [19.3, 26343.0], [19.4, 26415.0], [19.5, 26465.0], [19.6, 26514.0], [19.7, 26553.0], [19.8, 26630.0], [19.9, 26690.0], [20.0, 26745.0], [20.1, 26793.0], [20.2, 26862.0], [20.3, 26933.0], [20.4, 27087.0], [20.5, 27262.0], [20.6, 27522.0], [20.7, 27703.0], [20.8, 27828.0], [20.9, 27973.0], [21.0, 28115.0], [21.1, 28358.0], [21.2, 28517.0], [21.3, 28657.0], [21.4, 28772.0], [21.5, 28894.0], [21.6, 28988.0], [21.7, 29132.0], [21.8, 29215.0], [21.9, 29354.0], [22.0, 29486.0], [22.1, 29613.0], [22.2, 29742.0], [22.3, 29776.0], [22.4, 29832.0], [22.5, 29909.0], [22.6, 29972.0], [22.7, 30031.0], [22.8, 30088.0], [22.9, 30124.0], [23.0, 30158.0], [23.1, 30209.0], [23.2, 30248.0], [23.3, 30283.0], [23.4, 30309.0], [23.5, 30366.0], [23.6, 30393.0], [23.7, 30425.0], [23.8, 30457.0], [23.9, 30480.0], [24.0, 30501.0], [24.1, 30539.0], [24.2, 30582.0], [24.3, 30598.0], [24.4, 30624.0], [24.5, 30662.0], [24.6, 30684.0], [24.7, 30705.0], [24.8, 30727.0], [24.9, 30750.0], [25.0, 30786.0], [25.1, 30821.0], [25.2, 30840.0], [25.3, 30869.0], [25.4, 30899.0], [25.5, 30921.0], [25.6, 30944.0], [25.7, 30963.0], [25.8, 30985.0], [25.9, 31001.0], [26.0, 31021.0], [26.1, 31058.0], [26.2, 31095.0], [26.3, 31112.0], [26.4, 31138.0], [26.5, 31160.0], [26.6, 31178.0], [26.7, 31194.0], [26.8, 31217.0], [26.9, 31234.0], [27.0, 31246.0], [27.1, 31261.0], [27.2, 31284.0], [27.3, 31311.0], [27.4, 31325.0], [27.5, 31339.0], [27.6, 31360.0], [27.7, 31381.0], [27.8, 31395.0], [27.9, 31417.0], [28.0, 31431.0], [28.1, 31452.0], [28.2, 31467.0], [28.3, 31490.0], [28.4, 31511.0], [28.5, 31530.0], [28.6, 31542.0], [28.7, 31555.0], [28.8, 31573.0], [28.9, 31590.0], [29.0, 31613.0], [29.1, 31642.0], [29.2, 31659.0], [29.3, 31672.0], [29.4, 31692.0], [29.5, 31714.0], [29.6, 31727.0], [29.7, 31742.0], [29.8, 31756.0], [29.9, 31776.0], [30.0, 31791.0], [30.1, 31810.0], [30.2, 31835.0], [30.3, 31859.0], [30.4, 31878.0], [30.5, 31894.0], [30.6, 31909.0], [30.7, 31927.0], [30.8, 31946.0], [30.9, 31966.0], [31.0, 31980.0], [31.1, 31993.0], [31.2, 32008.0], [31.3, 32020.0], [31.4, 32039.0], [31.5, 32052.0], [31.6, 32065.0], [31.7, 32083.0], [31.8, 32100.0], [31.9, 32118.0], [32.0, 32132.0], [32.1, 32149.0], [32.2, 32168.0], [32.3, 32191.0], [32.4, 32213.0], [32.5, 32230.0], [32.6, 32253.0], [32.7, 32273.0], [32.8, 32287.0], [32.9, 32298.0], [33.0, 32313.0], [33.1, 32327.0], [33.2, 32343.0], [33.3, 32357.0], [33.4, 32373.0], [33.5, 32391.0], [33.6, 32406.0], [33.7, 32429.0], [33.8, 32448.0], [33.9, 32481.0], [34.0, 32498.0], [34.1, 32514.0], [34.2, 32534.0], [34.3, 32553.0], [34.4, 32568.0], [34.5, 32581.0], [34.6, 32595.0], [34.7, 32621.0], [34.8, 32642.0], [34.9, 32660.0], [35.0, 32682.0], [35.1, 32700.0], [35.2, 32716.0], [35.3, 32744.0], [35.4, 32771.0], [35.5, 32796.0], [35.6, 32821.0], [35.7, 32861.0], [35.8, 32911.0], [35.9, 32937.0], [36.0, 32968.0], [36.1, 32987.0], [36.2, 33006.0], [36.3, 33024.0], [36.4, 33043.0], [36.5, 33064.0], [36.6, 33088.0], [36.7, 33103.0], [36.8, 33126.0], [36.9, 33154.0], [37.0, 33181.0], [37.1, 33203.0], [37.2, 33230.0], [37.3, 33264.0], [37.4, 33279.0], [37.5, 33297.0], [37.6, 33320.0], [37.7, 33338.0], [37.8, 33363.0], [37.9, 33385.0], [38.0, 33398.0], [38.1, 33420.0], [38.2, 33432.0], [38.3, 33442.0], [38.4, 33464.0], [38.5, 33475.0], [38.6, 33489.0], [38.7, 33506.0], [38.8, 33518.0], [38.9, 33532.0], [39.0, 33552.0], [39.1, 33575.0], [39.2, 33597.0], [39.3, 33612.0], [39.4, 33643.0], [39.5, 33675.0], [39.6, 33701.0], [39.7, 33719.0], [39.8, 33742.0], [39.9, 33756.0], [40.0, 33773.0], [40.1, 33785.0], [40.2, 33802.0], [40.3, 33819.0], [40.4, 33845.0], [40.5, 33872.0], [40.6, 33889.0], [40.7, 33912.0], [40.8, 33930.0], [40.9, 33942.0], [41.0, 33978.0], [41.1, 33996.0], [41.2, 34017.0], [41.3, 34037.0], [41.4, 34057.0], [41.5, 34082.0], [41.6, 34093.0], [41.7, 34111.0], [41.8, 34128.0], [41.9, 34146.0], [42.0, 34167.0], [42.1, 34182.0], [42.2, 34198.0], [42.3, 34218.0], [42.4, 34234.0], [42.5, 34250.0], [42.6, 34264.0], [42.7, 34294.0], [42.8, 34322.0], [42.9, 34337.0], [43.0, 34354.0], [43.1, 34380.0], [43.2, 34400.0], [43.3, 34416.0], [43.4, 34434.0], [43.5, 34450.0], [43.6, 34464.0], [43.7, 34484.0], [43.8, 34503.0], [43.9, 34519.0], [44.0, 34536.0], [44.1, 34565.0], [44.2, 34592.0], [44.3, 34611.0], [44.4, 34638.0], [44.5, 34657.0], [44.6, 34687.0], [44.7, 34712.0], [44.8, 34738.0], [44.9, 34760.0], [45.0, 34777.0], [45.1, 34791.0], [45.2, 34808.0], [45.3, 34824.0], [45.4, 34852.0], [45.5, 34876.0], [45.6, 34901.0], [45.7, 34931.0], [45.8, 34954.0], [45.9, 34984.0], [46.0, 35028.0], [46.1, 35066.0], [46.2, 35079.0], [46.3, 35096.0], [46.4, 35115.0], [46.5, 35127.0], [46.6, 35150.0], [46.7, 35166.0], [46.8, 35191.0], [46.9, 35207.0], [47.0, 35229.0], [47.1, 35250.0], [47.2, 35278.0], [47.3, 35332.0], [47.4, 35370.0], [47.5, 35409.0], [47.6, 35441.0], [47.7, 35471.0], [47.8, 35502.0], [47.9, 35533.0], [48.0, 35560.0], [48.1, 35585.0], [48.2, 35635.0], [48.3, 35675.0], [48.4, 35740.0], [48.5, 35774.0], [48.6, 35815.0], [48.7, 35854.0], [48.8, 35892.0], [48.9, 35938.0], [49.0, 36000.0], [49.1, 36070.0], [49.2, 36108.0], [49.3, 36168.0], [49.4, 36229.0], [49.5, 36291.0], [49.6, 36328.0], [49.7, 36394.0], [49.8, 36441.0], [49.9, 36480.0], [50.0, 36530.0], [50.1, 36593.0], [50.2, 36624.0], [50.3, 36669.0], [50.4, 36707.0], [50.5, 36781.0], [50.6, 36826.0], [50.7, 36884.0], [50.8, 36933.0], [50.9, 36974.0], [51.0, 37020.0], [51.1, 37088.0], [51.2, 37132.0], [51.3, 37175.0], [51.4, 37226.0], [51.5, 37272.0], [51.6, 37323.0], [51.7, 37362.0], [51.8, 37429.0], [51.9, 37470.0], [52.0, 37498.0], [52.1, 37519.0], [52.2, 37559.0], [52.3, 37597.0], [52.4, 37643.0], [52.5, 37680.0], [52.6, 37734.0], [52.7, 37759.0], [52.8, 37795.0], [52.9, 37825.0], [53.0, 37870.0], [53.1, 37921.0], [53.2, 37967.0], [53.3, 38021.0], [53.4, 38073.0], [53.5, 38124.0], [53.6, 38170.0], [53.7, 38203.0], [53.8, 38238.0], [53.9, 38295.0], [54.0, 38355.0], [54.1, 38410.0], [54.2, 38452.0], [54.3, 38490.0], [54.4, 38586.0], [54.5, 38642.0], [54.6, 38714.0], [54.7, 38762.0], [54.8, 38824.0], [54.9, 38893.0], [55.0, 38959.0], [55.1, 39033.0], [55.2, 39078.0], [55.3, 39116.0], [55.4, 39179.0], [55.5, 39223.0], [55.6, 39287.0], [55.7, 39324.0], [55.8, 39402.0], [55.9, 39441.0], [56.0, 39501.0], [56.1, 39573.0], [56.2, 39634.0], [56.3, 39679.0], [56.4, 39728.0], [56.5, 39822.0], [56.6, 39870.0], [56.7, 39919.0], [56.8, 39970.0], [56.9, 40029.0], [57.0, 40071.0], [57.1, 40148.0], [57.2, 40192.0], [57.3, 40239.0], [57.4, 40287.0], [57.5, 40325.0], [57.6, 40371.0], [57.7, 40431.0], [57.8, 40485.0], [57.9, 40531.0], [58.0, 40590.0], [58.1, 40647.0], [58.2, 40738.0], [58.3, 40758.0], [58.4, 40805.0], [58.5, 40841.0], [58.6, 40885.0], [58.7, 40935.0], [58.8, 40976.0], [58.9, 41029.0], [59.0, 41083.0], [59.1, 41139.0], [59.2, 41175.0], [59.3, 41203.0], [59.4, 41254.0], [59.5, 41299.0], [59.6, 41349.0], [59.7, 41375.0], [59.8, 41415.0], [59.9, 41437.0], [60.0, 41486.0], [60.1, 41531.0], [60.2, 41559.0], [60.3, 41604.0], [60.4, 41646.0], [60.5, 41711.0], [60.6, 41753.0], [60.7, 41814.0], [60.8, 41860.0], [60.9, 41887.0], [61.0, 41930.0], [61.1, 41972.0], [61.2, 42021.0], [61.3, 42068.0], [61.4, 42119.0], [61.5, 42166.0], [61.6, 42197.0], [61.7, 42228.0], [61.8, 42272.0], [61.9, 42316.0], [62.0, 42342.0], [62.1, 42366.0], [62.2, 42404.0], [62.3, 42449.0], [62.4, 42480.0], [62.5, 42525.0], [62.6, 42559.0], [62.7, 42606.0], [62.8, 42654.0], [62.9, 42694.0], [63.0, 42739.0], [63.1, 42775.0], [63.2, 42801.0], [63.3, 42844.0], [63.4, 42880.0], [63.5, 42910.0], [63.6, 42941.0], [63.7, 42978.0], [63.8, 43016.0], [63.9, 43055.0], [64.0, 43088.0], [64.1, 43136.0], [64.2, 43162.0], [64.3, 43199.0], [64.4, 43218.0], [64.5, 43254.0], [64.6, 43297.0], [64.7, 43343.0], [64.8, 43372.0], [64.9, 43394.0], [65.0, 43436.0], [65.1, 43474.0], [65.2, 43494.0], [65.3, 43536.0], [65.4, 43571.0], [65.5, 43612.0], [65.6, 43643.0], [65.7, 43676.0], [65.8, 43719.0], [65.9, 43760.0], [66.0, 43829.0], [66.1, 43872.0], [66.2, 43918.0], [66.3, 43952.0], [66.4, 43990.0], [66.5, 44022.0], [66.6, 44073.0], [66.7, 44107.0], [66.8, 44137.0], [66.9, 44185.0], [67.0, 44254.0], [67.1, 44303.0], [67.2, 44369.0], [67.3, 44426.0], [67.4, 44467.0], [67.5, 44503.0], [67.6, 44559.0], [67.7, 44647.0], [67.8, 44703.0], [67.9, 44740.0], [68.0, 44785.0], [68.1, 44836.0], [68.2, 44887.0], [68.3, 44932.0], [68.4, 44974.0], [68.5, 45025.0], [68.6, 45072.0], [68.7, 45126.0], [68.8, 45184.0], [68.9, 45225.0], [69.0, 45276.0], [69.1, 45334.0], [69.2, 45386.0], [69.3, 45453.0], [69.4, 45493.0], [69.5, 45522.0], [69.6, 45581.0], [69.7, 45619.0], [69.8, 45653.0], [69.9, 45689.0], [70.0, 45744.0], [70.1, 45804.0], [70.2, 45843.0], [70.3, 45884.0], [70.4, 45920.0], [70.5, 45983.0], [70.6, 46044.0], [70.7, 46120.0], [70.8, 46164.0], [70.9, 46223.0], [71.0, 46268.0], [71.1, 46308.0], [71.2, 46364.0], [71.3, 46430.0], [71.4, 46500.0], [71.5, 46552.0], [71.6, 46589.0], [71.7, 46644.0], [71.8, 46703.0], [71.9, 46761.0], [72.0, 46835.0], [72.1, 46886.0], [72.2, 46938.0], [72.3, 47016.0], [72.4, 47073.0], [72.5, 47123.0], [72.6, 47187.0], [72.7, 47224.0], [72.8, 47267.0], [72.9, 47346.0], [73.0, 47376.0], [73.1, 47442.0], [73.2, 47489.0], [73.3, 47548.0], [73.4, 47611.0], [73.5, 47677.0], [73.6, 47732.0], [73.7, 47773.0], [73.8, 47840.0], [73.9, 47894.0], [74.0, 47940.0], [74.1, 47984.0], [74.2, 48049.0], [74.3, 48095.0], [74.4, 48138.0], [74.5, 48182.0], [74.6, 48241.0], [74.7, 48281.0], [74.8, 48344.0], [74.9, 48387.0], [75.0, 48430.0], [75.1, 48468.0], [75.2, 48535.0], [75.3, 48599.0], [75.4, 48642.0], [75.5, 48688.0], [75.6, 48725.0], [75.7, 48762.0], [75.8, 48792.0], [75.9, 48822.0], [76.0, 48872.0], [76.1, 48915.0], [76.2, 48957.0], [76.3, 49002.0], [76.4, 49075.0], [76.5, 49106.0], [76.6, 49135.0], [76.7, 49167.0], [76.8, 49215.0], [76.9, 49270.0], [77.0, 49310.0], [77.1, 49339.0], [77.2, 49373.0], [77.3, 49420.0], [77.4, 49472.0], [77.5, 49526.0], [77.6, 49567.0], [77.7, 49620.0], [77.8, 49671.0], [77.9, 49697.0], [78.0, 49734.0], [78.1, 49765.0], [78.2, 49797.0], [78.3, 49825.0], [78.4, 49866.0], [78.5, 49917.0], [78.6, 49943.0], [78.7, 49985.0], [78.8, 50017.0], [78.9, 50057.0], [79.0, 50090.0], [79.1, 50133.0], [79.2, 50178.0], [79.3, 50226.0], [79.4, 50254.0], [79.5, 50285.0], [79.6, 50342.0], [79.7, 50373.0], [79.8, 50398.0], [79.9, 50422.0], [80.0, 50435.0], [80.1, 50458.0], [80.2, 50485.0], [80.3, 50505.0], [80.4, 50529.0], [80.5, 50560.0], [80.6, 50583.0], [80.7, 50607.0], [80.8, 50630.0], [80.9, 50659.0], [81.0, 50697.0], [81.1, 50723.0], [81.2, 50760.0], [81.3, 50800.0], [81.4, 50823.0], [81.5, 50852.0], [81.6, 50884.0], [81.7, 50911.0], [81.8, 50941.0], [81.9, 50977.0], [82.0, 50990.0], [82.1, 51005.0], [82.2, 51035.0], [82.3, 51065.0], [82.4, 51097.0], [82.5, 51118.0], [82.6, 51141.0], [82.7, 51162.0], [82.8, 51183.0], [82.9, 51211.0], [83.0, 51250.0], [83.1, 51268.0], [83.2, 51293.0], [83.3, 51311.0], [83.4, 51340.0], [83.5, 51361.0], [83.6, 51391.0], [83.7, 51415.0], [83.8, 51440.0], [83.9, 51461.0], [84.0, 51485.0], [84.1, 51513.0], [84.2, 51533.0], [84.3, 51557.0], [84.4, 51584.0], [84.5, 51612.0], [84.6, 51627.0], [84.7, 51660.0], [84.8, 51698.0], [84.9, 51719.0], [85.0, 51737.0], [85.1, 51760.0], [85.2, 51781.0], [85.3, 51801.0], [85.4, 51832.0], [85.5, 51865.0], [85.6, 51884.0], [85.7, 51909.0], [85.8, 51933.0], [85.9, 51956.0], [86.0, 51988.0], [86.1, 52010.0], [86.2, 52035.0], [86.3, 52058.0], [86.4, 52074.0], [86.5, 52088.0], [86.6, 52110.0], [86.7, 52130.0], [86.8, 52161.0], [86.9, 52192.0], [87.0, 52224.0], [87.1, 52258.0], [87.2, 52286.0], [87.3, 52314.0], [87.4, 52333.0], [87.5, 52368.0], [87.6, 52382.0], [87.7, 52415.0], [87.8, 52441.0], [87.9, 52472.0], [88.0, 52506.0], [88.1, 52527.0], [88.2, 52542.0], [88.3, 52573.0], [88.4, 52595.0], [88.5, 52617.0], [88.6, 52641.0], [88.7, 52667.0], [88.8, 52678.0], [88.9, 52699.0], [89.0, 52727.0], [89.1, 52755.0], [89.2, 52784.0], [89.3, 52812.0], [89.4, 52836.0], [89.5, 52854.0], [89.6, 52879.0], [89.7, 52907.0], [89.8, 52936.0], [89.9, 52957.0], [90.0, 52979.0], [90.1, 53004.0], [90.2, 53032.0], [90.3, 53059.0], [90.4, 53092.0], [90.5, 53115.0], [90.6, 53139.0], [90.7, 53171.0], [90.8, 53186.0], [90.9, 53223.0], [91.0, 53257.0], [91.1, 53280.0], [91.2, 53317.0], [91.3, 53351.0], [91.4, 53371.0], [91.5, 53404.0], [91.6, 53434.0], [91.7, 53474.0], [91.8, 53504.0], [91.9, 53531.0], [92.0, 53590.0], [92.1, 53630.0], [92.2, 53671.0], [92.3, 53690.0], [92.4, 53717.0], [92.5, 53744.0], [92.6, 53772.0], [92.7, 53807.0], [92.8, 53832.0], [92.9, 53869.0], [93.0, 53930.0], [93.1, 53957.0], [93.2, 53977.0], [93.3, 54013.0], [93.4, 54036.0], [93.5, 54064.0], [93.6, 54088.0], [93.7, 54122.0], [93.8, 54159.0], [93.9, 54178.0], [94.0, 54215.0], [94.1, 54246.0], [94.2, 54278.0], [94.3, 54310.0], [94.4, 54343.0], [94.5, 54371.0], [94.6, 54412.0], [94.7, 54435.0], [94.8, 54466.0], [94.9, 54505.0], [95.0, 54544.0], [95.1, 54586.0], [95.2, 54640.0], [95.3, 54671.0], [95.4, 54742.0], [95.5, 54778.0], [95.6, 54840.0], [95.7, 54888.0], [95.8, 54951.0], [95.9, 54990.0], [96.0, 55038.0], [96.1, 55082.0], [96.2, 55126.0], [96.3, 55183.0], [96.4, 55239.0], [96.5, 55290.0], [96.6, 55349.0], [96.7, 55407.0], [96.8, 55468.0], [96.9, 55517.0], [97.0, 55592.0], [97.1, 55666.0], [97.2, 55729.0], [97.3, 55790.0], [97.4, 55853.0], [97.5, 55939.0], [97.6, 56046.0], [97.7, 56111.0], [97.8, 56176.0], [97.9, 56261.0], [98.0, 56312.0], [98.1, 56443.0], [98.2, 56525.0], [98.3, 56624.0], [98.4, 56722.0], [98.5, 56849.0], [98.6, 56946.0], [98.7, 57063.0], [98.8, 57190.0], [98.9, 57337.0], [99.0, 57540.0], [99.1, 57711.0], [99.2, 57904.0], [99.3, 58165.0], [99.4, 58493.0], [99.5, 58690.0], [99.6, 58887.0], [99.7, 59170.0], [99.8, 59277.0], [99.9, 59700.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 1700.0, "maxY": 131.0, "series": [{"data": [[32900.0, 78.0], [34500.0, 88.0], [33700.0, 121.0], [35300.0, 47.0], [36100.0, 36.0], [38500.0, 26.0], [36900.0, 42.0], [37700.0, 58.0], [40100.0, 35.0], [40900.0, 44.0], [39300.0, 34.0], [42500.0, 42.0], [41700.0, 36.0], [44100.0, 50.0], [43300.0, 58.0], [44900.0, 42.0], [46500.0, 45.0], [45700.0, 34.0], [48900.0, 51.0], [47300.0, 37.0], [48100.0, 44.0], [49700.0, 62.0], [50500.0, 78.0], [52100.0, 78.0], [52900.0, 84.0], [51300.0, 83.0], [54500.0, 51.0], [53700.0, 63.0], [55300.0, 34.0], [56100.0, 29.0], [56900.0, 16.0], [58500.0, 14.0], [59300.0, 3.0], [57700.0, 14.0], [60100.0, 2.0], [1700.0, 2.0], [1900.0, 1.0], [2100.0, 1.0], [2700.0, 2.0], [2800.0, 2.0], [2900.0, 1.0], [3000.0, 2.0], [3200.0, 1.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3900.0, 2.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 2.0], [4400.0, 1.0], [4500.0, 1.0], [4600.0, 2.0], [4800.0, 2.0], [5400.0, 3.0], [5500.0, 1.0], [5700.0, 3.0], [5800.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6300.0, 1.0], [6400.0, 3.0], [6600.0, 3.0], [6900.0, 1.0], [6800.0, 1.0], [7100.0, 2.0], [7300.0, 2.0], [7500.0, 1.0], [7900.0, 1.0], [7800.0, 1.0], [8000.0, 3.0], [8200.0, 1.0], [9000.0, 2.0], [9200.0, 3.0], [9400.0, 1.0], [9600.0, 1.0], [9800.0, 1.0], [10000.0, 1.0], [10200.0, 2.0], [10600.0, 1.0], [10800.0, 1.0], [11000.0, 1.0], [11200.0, 1.0], [11400.0, 1.0], [11600.0, 1.0], [11800.0, 1.0], [12000.0, 6.0], [12200.0, 19.0], [12600.0, 55.0], [12400.0, 46.0], [12800.0, 42.0], [13000.0, 65.0], [13200.0, 44.0], [13600.0, 36.0], [13400.0, 37.0], [13800.0, 25.0], [14000.0, 31.0], [14200.0, 35.0], [14600.0, 47.0], [14400.0, 38.0], [14800.0, 33.0], [15000.0, 75.0], [15200.0, 34.0], [15400.0, 23.0], [15600.0, 25.0], [15800.0, 36.0], [16200.0, 15.0], [16000.0, 35.0], [16400.0, 49.0], [16800.0, 24.0], [17200.0, 12.0], [18000.0, 21.0], [18400.0, 23.0], [17600.0, 12.0], [19200.0, 30.0], [18800.0, 28.0], [19600.0, 34.0], [20000.0, 31.0], [20400.0, 8.0], [21200.0, 8.0], [20800.0, 3.0], [21600.0, 30.0], [22400.0, 19.0], [22000.0, 12.0], [22800.0, 11.0], [23200.0, 13.0], [23600.0, 19.0], [24400.0, 24.0], [24000.0, 18.0], [24800.0, 18.0], [25200.0, 10.0], [25600.0, 17.0], [26000.0, 31.0], [26400.0, 40.0], [26800.0, 30.0], [27600.0, 10.0], [27200.0, 13.0], [28000.0, 7.0], [28400.0, 16.0], [28800.0, 21.0], [29200.0, 16.0], [29600.0, 16.0], [30000.0, 37.0], [30400.0, 73.0], [30800.0, 73.0], [31600.0, 96.0], [31200.0, 105.0], [32000.0, 128.0], [32400.0, 89.0], [34400.0, 120.0], [32800.0, 53.0], [33600.0, 74.0], [35200.0, 74.0], [36800.0, 42.0], [36000.0, 36.0], [38400.0, 48.0], [37600.0, 44.0], [40800.0, 47.0], [39200.0, 39.0], [40000.0, 40.0], [42400.0, 57.0], [41600.0, 39.0], [43200.0, 62.0], [44000.0, 47.0], [44800.0, 40.0], [46400.0, 33.0], [45600.0, 54.0], [47200.0, 39.0], [48000.0, 35.0], [48800.0, 39.0], [49600.0, 53.0], [50400.0, 93.0], [52000.0, 101.0], [51200.0, 74.0], [52800.0, 77.0], [54400.0, 61.0], [53600.0, 66.0], [55200.0, 39.0], [56000.0, 23.0], [56800.0, 19.0], [59200.0, 12.0], [58400.0, 8.0], [57600.0, 11.0], [60000.0, 2.0], [33100.0, 83.0], [33900.0, 102.0], [34700.0, 98.0], [35500.0, 69.0], [36300.0, 36.0], [38700.0, 36.0], [37900.0, 41.0], [37100.0, 43.0], [40300.0, 46.0], [39500.0, 29.0], [42700.0, 56.0], [41100.0, 57.0], [41900.0, 47.0], [44300.0, 36.0], [43500.0, 50.0], [46700.0, 34.0], [45900.0, 37.0], [45100.0, 39.0], [47500.0, 31.0], [49100.0, 56.0], [48300.0, 44.0], [50700.0, 59.0], [49900.0, 54.0], [52300.0, 86.0], [53100.0, 82.0], [51500.0, 82.0], [53900.0, 60.0], [54700.0, 39.0], [55500.0, 28.0], [57100.0, 16.0], [56300.0, 15.0], [58700.0, 4.0], [57900.0, 11.0], [59500.0, 8.0], [16500.0, 29.0], [16900.0, 9.0], [17300.0, 11.0], [17700.0, 12.0], [18100.0, 24.0], [18500.0, 22.0], [19300.0, 16.0], [18900.0, 24.0], [19700.0, 33.0], [20100.0, 15.0], [20500.0, 8.0], [20900.0, 8.0], [21300.0, 21.0], [21700.0, 29.0], [22500.0, 15.0], [22100.0, 30.0], [23300.0, 12.0], [22900.0, 9.0], [24100.0, 31.0], [24500.0, 30.0], [23700.0, 26.0], [24900.0, 13.0], [25300.0, 5.0], [25700.0, 19.0], [26100.0, 31.0], [26500.0, 33.0], [27300.0, 5.0], [26900.0, 18.0], [28100.0, 14.0], [27700.0, 15.0], [28500.0, 15.0], [28900.0, 18.0], [29300.0, 19.0], [30100.0, 51.0], [29700.0, 34.0], [30500.0, 64.0], [30900.0, 98.0], [31300.0, 115.0], [31700.0, 126.0], [32100.0, 108.0], [32500.0, 124.0], [33000.0, 100.0], [33800.0, 87.0], [34600.0, 85.0], [35400.0, 63.0], [36200.0, 34.0], [37800.0, 46.0], [38600.0, 29.0], [37000.0, 36.0], [39400.0, 40.0], [40200.0, 42.0], [41000.0, 33.0], [41800.0, 52.0], [42600.0, 49.0], [43400.0, 61.0], [45000.0, 43.0], [44200.0, 33.0], [45800.0, 53.0], [46600.0, 33.0], [48200.0, 39.0], [47400.0, 40.0], [49000.0, 34.0], [49800.0, 50.0], [50600.0, 67.0], [52200.0, 59.0], [53000.0, 71.0], [51400.0, 78.0], [54600.0, 42.0], [53800.0, 56.0], [55400.0, 36.0], [57000.0, 17.0], [56200.0, 29.0], [57800.0, 8.0], [58600.0, 7.0], [59400.0, 5.0], [61000.0, 1.0], [33300.0, 101.0], [34100.0, 112.0], [34900.0, 70.0], [36500.0, 37.0], [35700.0, 48.0], [38100.0, 49.0], [38900.0, 33.0], [37300.0, 40.0], [39700.0, 24.0], [40500.0, 33.0], [42100.0, 51.0], [41300.0, 55.0], [42900.0, 64.0], [43700.0, 41.0], [44500.0, 29.0], [45300.0, 34.0], [46900.0, 29.0], [46100.0, 37.0], [47700.0, 42.0], [48500.0, 33.0], [49300.0, 60.0], [50100.0, 41.0], [50900.0, 89.0], [51700.0, 95.0], [52500.0, 90.0], [54100.0, 66.0], [53300.0, 70.0], [54900.0, 38.0], [55700.0, 32.0], [56500.0, 18.0], [57300.0, 16.0], [58900.0, 10.0], [58100.0, 10.0], [61300.0, 1.0], [59700.0, 2.0], [60500.0, 2.0], [8500.0, 2.0], [8700.0, 1.0], [8900.0, 1.0], [9300.0, 1.0], [9900.0, 1.0], [10100.0, 2.0], [10300.0, 1.0], [10700.0, 1.0], [10900.0, 2.0], [11100.0, 1.0], [11300.0, 1.0], [11500.0, 1.0], [11700.0, 1.0], [11900.0, 2.0], [12100.0, 12.0], [12500.0, 60.0], [12300.0, 44.0], [12700.0, 59.0], [13300.0, 42.0], [12900.0, 58.0], [13100.0, 43.0], [13700.0, 29.0], [13500.0, 37.0], [13900.0, 39.0], [14100.0, 63.0], [14300.0, 46.0], [14500.0, 41.0], [14700.0, 33.0], [15100.0, 51.0], [14900.0, 31.0], [15300.0, 43.0], [15500.0, 35.0], [15700.0, 37.0], [15900.0, 39.0], [16100.0, 38.0], [16300.0, 48.0], [16600.0, 29.0], [17000.0, 11.0], [17400.0, 13.0], [17800.0, 34.0], [18200.0, 22.0], [18600.0, 32.0], [19400.0, 25.0], [19000.0, 33.0], [19800.0, 29.0], [20200.0, 21.0], [21000.0, 11.0], [20600.0, 8.0], [21400.0, 6.0], [21800.0, 22.0], [22200.0, 15.0], [22600.0, 16.0], [23000.0, 23.0], [23400.0, 13.0], [23800.0, 38.0], [24200.0, 27.0], [24600.0, 37.0], [25000.0, 9.0], [25400.0, 15.0], [26600.0, 33.0], [25800.0, 15.0], [26200.0, 24.0], [27400.0, 7.0], [27000.0, 12.0], [27800.0, 16.0], [28600.0, 11.0], [28200.0, 6.0], [29000.0, 10.0], [29400.0, 11.0], [30200.0, 53.0], [29800.0, 29.0], [30600.0, 75.0], [31000.0, 70.0], [31400.0, 101.0], [32200.0, 115.0], [32600.0, 94.0], [31800.0, 91.0], [34800.0, 89.0], [33200.0, 85.0], [34000.0, 102.0], [35600.0, 40.0], [36400.0, 46.0], [38800.0, 27.0], [38000.0, 37.0], [37200.0, 42.0], [39600.0, 43.0], [40400.0, 38.0], [42800.0, 52.0], [42000.0, 41.0], [41200.0, 41.0], [43600.0, 59.0], [44400.0, 45.0], [46000.0, 25.0], [46800.0, 36.0], [45200.0, 40.0], [47600.0, 31.0], [48400.0, 39.0], [50800.0, 68.0], [49200.0, 41.0], [50000.0, 60.0], [53200.0, 58.0], [52400.0, 62.0], [51600.0, 71.0], [54000.0, 74.0], [54800.0, 38.0], [55600.0, 29.0], [57200.0, 12.0], [56400.0, 27.0], [58800.0, 17.0], [58000.0, 3.0], [59600.0, 2.0], [60400.0, 3.0], [33500.0, 109.0], [34300.0, 97.0], [35100.0, 109.0], [36700.0, 30.0], [35900.0, 33.0], [37500.0, 59.0], [38300.0, 35.0], [40700.0, 45.0], [39100.0, 33.0], [39900.0, 37.0], [41500.0, 54.0], [42300.0, 67.0], [43900.0, 56.0], [43100.0, 53.0], [44700.0, 47.0], [47100.0, 40.0], [45500.0, 46.0], [46300.0, 30.0], [47900.0, 44.0], [48700.0, 59.0], [50300.0, 58.0], [51100.0, 91.0], [49500.0, 42.0], [51900.0, 77.0], [52700.0, 74.0], [54300.0, 59.0], [55100.0, 38.0], [53500.0, 51.0], [55900.0, 21.0], [56700.0, 17.0], [59100.0, 12.0], [57500.0, 10.0], [58300.0, 2.0], [59900.0, 1.0], [60700.0, 2.0], [16700.0, 31.0], [17100.0, 19.0], [17500.0, 19.0], [18300.0, 31.0], [17900.0, 16.0], [18700.0, 34.0], [19100.0, 35.0], [19500.0, 25.0], [20300.0, 9.0], [19900.0, 34.0], [20700.0, 6.0], [21100.0, 9.0], [21500.0, 25.0], [22300.0, 19.0], [21900.0, 19.0], [22700.0, 26.0], [23100.0, 12.0], [23500.0, 18.0], [24300.0, 27.0], [23900.0, 23.0], [25100.0, 12.0], [24700.0, 15.0], [25500.0, 11.0], [25900.0, 30.0], [26300.0, 33.0], [26700.0, 37.0], [27500.0, 14.0], [27100.0, 10.0], [27900.0, 18.0], [28300.0, 8.0], [29100.0, 26.0], [28700.0, 17.0], [29500.0, 15.0], [29900.0, 33.0], [30300.0, 54.0], [30700.0, 72.0], [31100.0, 97.0], [31500.0, 125.0], [31900.0, 125.0], [32300.0, 130.0], [32700.0, 84.0], [34200.0, 101.0], [33400.0, 131.0], [35000.0, 75.0], [35800.0, 52.0], [36600.0, 52.0], [38200.0, 44.0], [37400.0, 51.0], [39000.0, 39.0], [39800.0, 36.0], [40600.0, 31.0], [42200.0, 45.0], [41400.0, 48.0], [43000.0, 52.0], [44600.0, 31.0], [43800.0, 40.0], [47000.0, 32.0], [46200.0, 47.0], [45400.0, 40.0], [47800.0, 34.0], [48600.0, 50.0], [50200.0, 56.0], [49400.0, 37.0], [51000.0, 66.0], [51800.0, 75.0], [52600.0, 96.0], [54200.0, 64.0], [55000.0, 43.0], [53400.0, 59.0], [55800.0, 30.0], [56600.0, 21.0], [57400.0, 8.0], [58200.0, 8.0], [59000.0, 4.0], [59800.0, 2.0], [60600.0, 1.0], [61400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 61400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 20000.0, "minX": 2.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 20000.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 20000.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 10.5, "minX": 1.66093956E12, "maxY": 100.0, "series": [{"data": [[1.66094148E12, 100.0], [1.6609449E12, 100.0], [1.6609437E12, 100.0], [1.66094028E12, 100.0], [1.6609461E12, 100.0], [1.6609425E12, 100.0], [1.66094508E12, 100.0], [1.6609413E12, 100.0], [1.66094352E12, 100.0], [1.6609401E12, 100.0], [1.66094334E12, 100.0], [1.66094628E12, 100.0], [1.66094232E12, 100.0], [1.66094214E12, 100.0], [1.66094436E12, 100.0], [1.66094112E12, 100.0], [1.66094526E12, 100.0], [1.66094544E12, 100.0], [1.66094094E12, 100.0], [1.66094316E12, 100.0], [1.66093992E12, 100.0], [1.66094646E12, 100.0], [1.66094196E12, 100.0], [1.66094442E12, 100.0], [1.66094664E12, 100.0], [1.66093974E12, 100.0], [1.66094418E12, 100.0], [1.66094076E12, 100.0], [1.66094562E12, 100.0], [1.66094298E12, 100.0], [1.66094682E12, 100.0], [1.6609446E12, 100.0], [1.66093956E12, 100.0], [1.66094178E12, 100.0], [1.660944E12, 100.0], [1.66094382E12, 100.0], [1.6609458E12, 100.0], [1.66094058E12, 100.0], [1.6609428E12, 100.0], [1.66094262E12, 100.0], [1.6609416E12, 100.0], [1.66094478E12, 100.0], [1.660947E12, 66.63063063063066], [1.66094496E12, 100.0], [1.66094142E12, 100.0], [1.66094364E12, 100.0], [1.6609404E12, 100.0], [1.66094598E12, 100.0], [1.66094616E12, 100.0], [1.66094022E12, 100.0], [1.66094244E12, 100.0], [1.66094124E12, 100.0], [1.66094514E12, 100.0], [1.66094346E12, 100.0], [1.66094634E12, 100.0], [1.66094004E12, 100.0], [1.66094226E12, 100.0], [1.6609443E12, 100.0], [1.66094532E12, 100.0], [1.66094106E12, 100.0], [1.66094328E12, 100.0], [1.6609431E12, 100.0], [1.66093986E12, 100.0], [1.66094208E12, 100.0], [1.66094652E12, 100.0], [1.66094448E12, 100.0], [1.6609419E12, 100.0], [1.66094412E12, 100.0], [1.66094088E12, 100.0], [1.6609455E12, 100.0], [1.66094568E12, 100.0], [1.6609407E12, 100.0], [1.66094292E12, 100.0], [1.66093968E12, 100.0], [1.6609467E12, 100.0], [1.66094172E12, 100.0], [1.66094466E12, 100.0], [1.66094688E12, 100.0], [1.66094394E12, 100.0], [1.66094052E12, 100.0], [1.66094586E12, 100.0], [1.66094274E12, 100.0], [1.66094706E12, 10.5], [1.66094484E12, 100.0], [1.66094154E12, 100.0], [1.66094376E12, 100.0], [1.66094358E12, 100.0], [1.66094604E12, 100.0], [1.66094034E12, 100.0], [1.66094256E12, 100.0], [1.66094238E12, 100.0], [1.66094136E12, 100.0], [1.66094502E12, 100.0], [1.6609452E12, 100.0], [1.66094118E12, 100.0], [1.66094016E12, 100.0], [1.6609434E12, 100.0], [1.66094622E12, 100.0], [1.6609422E12, 100.0], [1.6609464E12, 100.0], [1.66093998E12, 100.0], [1.660941E12, 100.0], [1.66094538E12, 100.0], [1.66094322E12, 100.0], [1.66094658E12, 100.0], [1.6609398E12, 100.0], [1.66094202E12, 100.0], [1.66094424E12, 100.0], [1.66094406E12, 100.0], [1.66094556E12, 100.0], [1.66094082E12, 100.0], [1.66094304E12, 100.0], [1.66094286E12, 100.0], [1.66093962E12, 100.0], [1.66094184E12, 100.0], [1.66094454E12, 100.0], [1.66094676E12, 100.0], [1.66094472E12, 100.0], [1.66094166E12, 100.0], [1.66094388E12, 100.0], [1.66094064E12, 100.0], [1.66094574E12, 100.0], [1.66094592E12, 100.0], [1.66094046E12, 100.0], [1.66094268E12, 100.0], [1.66094694E12, 99.90384615384615]], "isOverall": false, "label": "Thread Group Create Type", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66094706E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 23813.0, "minX": 1.0, "maxY": 58788.0, "series": [{"data": [[2.0, 23813.0], [3.0, 31971.0], [4.0, 37231.0], [5.0, 37886.0], [6.0, 37853.0], [7.0, 40247.0], [8.0, 45687.0], [9.0, 41432.0], [10.0, 37940.0], [11.0, 41299.0], [12.0, 47267.0], [13.0, 49348.0], [14.0, 47340.0], [15.0, 45598.0], [16.0, 48775.0], [17.0, 47292.0], [18.0, 50880.0], [19.0, 46007.0], [20.0, 48211.0], [21.0, 48786.0], [22.0, 50133.0], [23.0, 48869.0], [24.0, 49660.0], [25.0, 48535.0], [26.0, 50222.0], [27.0, 53345.0], [28.0, 51763.0], [29.0, 54191.0], [30.0, 52914.0], [31.0, 51731.0], [33.0, 53868.0], [32.0, 53551.0], [35.0, 53193.0], [34.0, 51020.0], [37.0, 53971.0], [36.0, 53810.0], [39.0, 53318.0], [38.0, 52539.0], [41.0, 52537.0], [40.0, 53391.0], [43.0, 55697.0], [42.0, 53103.0], [45.0, 53957.0], [44.0, 55566.0], [47.0, 53283.0], [46.0, 54212.0], [49.0, 53087.0], [48.0, 52716.0], [51.0, 53041.0], [50.0, 51888.0], [53.0, 52532.0], [52.0, 52770.5], [55.0, 52507.0], [54.0, 52509.0], [57.0, 53247.0], [56.0, 53174.0], [59.0, 54007.0], [58.0, 53873.0], [61.0, 53129.0], [60.0, 53330.0], [63.0, 54961.0], [62.0, 54441.0], [67.0, 52314.0], [66.0, 54016.0], [65.0, 52818.0], [64.0, 52543.0], [71.0, 52815.0], [70.0, 55001.0], [69.0, 53293.333333333336], [68.0, 53731.5], [75.0, 54788.5], [74.0, 53465.0], [73.0, 53450.0], [72.0, 54027.333333333336], [79.0, 55527.0], [78.0, 54273.0], [77.0, 55133.0], [76.0, 52848.0], [83.0, 53787.0], [82.0, 58788.0], [81.0, 53616.0], [80.0, 55153.5], [87.0, 56274.42857142857], [86.0, 55025.0], [85.0, 55362.5], [84.0, 54448.0], [91.0, 55867.0], [90.0, 56690.666666666664], [89.0, 56552.0], [88.0, 56428.5], [95.0, 56707.0], [94.0, 56456.0], [93.0, 57680.0], [92.0, 57315.4], [99.0, 57167.4], [98.0, 56460.25], [97.0, 57563.4], [96.0, 57052.0], [100.0, 37051.345233899054], [1.0, 29498.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[99.72480000000004, 37162.43170000005]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 982.3333333333334, "minX": 1.66093956E12, "maxY": 41592.666666666664, "series": [{"data": [[1.66094148E12, 9427.2], [1.6609449E12, 5648.416666666667], [1.6609437E12, 6827.216666666666], [1.66094028E12, 11391.2], [1.6609461E12, 5599.3], [1.6609425E12, 8202.483333333334], [1.66094508E12, 5550.183333333333], [1.6609413E12, 8838.0], [1.66094352E12, 6876.333333333333], [1.6609401E12, 12815.1], [1.66094334E12, 6974.566666666667], [1.66094628E12, 5844.883333333333], [1.66094232E12, 7561.783333333334], [1.66094214E12, 8592.5], [1.66094436E12, 6237.816666666667], [1.66094112E12, 8592.5], [1.66094526E12, 5844.883333333333], [1.66094544E12, 5550.183333333333], [1.66094094E12, 8150.6], [1.66094316E12, 6532.516666666666], [1.66093992E12, 15319.2], [1.66094646E12, 5501.066666666667], [1.66094196E12, 9083.5], [1.66094442E12, 5844.883333333333], [1.66094664E12, 5648.416666666667], [1.66093974E12, 20228.966666666667], [1.66094418E12, 6090.466666666666], [1.66094076E12, 8887.1], [1.66094562E12, 5501.066666666667], [1.66094298E12, 7662.2], [1.66094682E12, 5206.366666666667], [1.6609446E12, 5697.533333333334], [1.66093956E12, 4661.183333333333], [1.66094178E12, 9329.0], [1.660944E12, 6581.633333333333], [1.66094382E12, 6876.333333333333], [1.6609458E12, 5599.3], [1.66094058E12, 9378.1], [1.6609428E12, 7711.316666666667], [1.66094262E12, 7907.783333333334], [1.6609416E12, 9525.4], [1.66094478E12, 6041.35], [1.660947E12, 5451.95], [1.66094496E12, 5648.416666666667], [1.66094142E12, 9083.5], [1.66094364E12, 6876.333333333333], [1.6609404E12, 10507.4], [1.66094598E12, 5894.0], [1.66094616E12, 5304.6], [1.66094022E12, 6137.5], [1.66094244E12, 8448.066666666668], [1.66094124E12, 8052.4], [1.66094514E12, 5501.066666666667], [1.66094346E12, 6974.566666666667], [1.66094634E12, 5353.716666666666], [1.66094004E12, 13551.6], [1.66094226E12, 5253.7], [1.6609443E12, 6581.633333333333], [1.66094532E12, 5795.766666666666], [1.66094106E12, 8543.4], [1.66094328E12, 7171.033333333334], [1.6609431E12, 7514.85], [1.66093986E12, 17185.0], [1.66094208E12, 8445.2], [1.66094652E12, 5697.533333333334], [1.66094448E12, 6090.466666666666], [1.6609419E12, 8985.3], [1.66094412E12, 6483.4], [1.66094088E12, 8887.1], [1.6609455E12, 5648.416666666667], [1.66094568E12, 5795.766666666666], [1.6609407E12, 8052.4], [1.66094292E12, 6974.566666666667], [1.66093968E12, 21842.083333333332], [1.6609467E12, 5353.716666666666], [1.66094172E12, 9329.0], [1.66094466E12, 5992.233333333334], [1.66094688E12, 5353.716666666666], [1.66094394E12, 6336.05], [1.66094052E12, 9623.6], [1.66094586E12, 5697.533333333334], [1.66094274E12, 7809.55], [1.66094706E12, 982.3333333333334], [1.66094484E12, 5697.533333333334], [1.66094154E12, 9279.9], [1.66094376E12, 6876.333333333333], [1.66094358E12, 6876.333333333333], [1.66094604E12, 5746.65], [1.66094034E12, 11489.4], [1.66094256E12, 8202.483333333334], [1.66094238E12, 8644.533333333333], [1.66094136E12, 9279.9], [1.66094502E12, 5746.65], [1.6609452E12, 5894.0], [1.66094118E12, 8543.4], [1.66094016E12, 11685.8], [1.6609434E12, 6778.1], [1.66094622E12, 5059.016666666666], [1.6609422E12, 7463.2], [1.6609464E12, 5697.533333333334], [1.66093998E12, 15122.8], [1.660941E12, 8690.7], [1.66094538E12, 6041.35], [1.66094322E12, 7171.033333333334], [1.66094658E12, 5402.833333333333], [1.6609398E12, 18854.4], [1.66094202E12, 9132.6], [1.66094424E12, 6237.816666666667], [1.66094406E12, 6336.05], [1.66094556E12, 5353.716666666666], [1.66094082E12, 8739.8], [1.66094304E12, 7318.383333333333], [1.66094286E12, 7711.316666666667], [1.66093962E12, 21842.016666666666], [1.66094184E12, 8494.3], [1.66094454E12, 5943.116666666667], [1.66094676E12, 5795.766666666666], [1.66094472E12, 5746.65], [1.66094166E12, 9378.1], [1.66094388E12, 6434.283333333334], [1.66094064E12, 8838.0], [1.66094574E12, 5844.883333333333], [1.66094592E12, 5108.133333333333], [1.66094046E12, 9967.3], [1.66094268E12, 7023.683333333333], [1.66094694E12, 5108.133333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66094148E12, 17948.8], [1.6609449E12, 10752.5], [1.6609437E12, 12996.5], [1.66094028E12, 21688.133333333335], [1.6609461E12, 10659.0], [1.6609425E12, 15614.5], [1.66094508E12, 10565.5], [1.6609413E12, 16827.0], [1.66094352E12, 13090.0], [1.6609401E12, 24399.15], [1.66094334E12, 13277.0], [1.66094628E12, 11126.5], [1.66094232E12, 14396.816666666668], [1.66094214E12, 16359.583333333334], [1.66094436E12, 11874.5], [1.66094112E12, 16359.583333333334], [1.66094526E12, 11126.5], [1.66094544E12, 10565.5], [1.66094094E12, 15518.233333333334], [1.66094316E12, 12435.5], [1.66093992E12, 29166.8], [1.66094646E12, 10472.0], [1.66094196E12, 17294.416666666668], [1.66094442E12, 11126.5], [1.66094664E12, 10752.5], [1.66093974E12, 38514.9], [1.66094418E12, 11594.0], [1.66094076E12, 16920.483333333334], [1.66094562E12, 10472.0], [1.66094298E12, 14586.0], [1.66094682E12, 9911.0], [1.6609446E12, 10846.0], [1.66093956E12, 8877.6], [1.66094178E12, 17761.833333333332], [1.660944E12, 12529.0], [1.66094382E12, 13090.0], [1.6609458E12, 10659.0], [1.66094058E12, 17855.316666666666], [1.6609428E12, 14679.5], [1.66094262E12, 15053.5], [1.6609416E12, 18135.766666666666], [1.66094478E12, 11500.5], [1.660947E12, 10378.5], [1.66094496E12, 10752.5], [1.66094142E12, 17294.416666666668], [1.66094364E12, 13090.0], [1.6609404E12, 20005.433333333334], [1.66094598E12, 11220.0], [1.66094616E12, 10098.0], [1.66094022E12, 11685.416666666666], [1.66094244E12, 16082.0], [1.66094124E12, 15331.266666666666], [1.66094514E12, 10472.0], [1.66094346E12, 13277.0], [1.66094634E12, 10191.5], [1.66094004E12, 25801.4], [1.66094226E12, 10002.716666666667], [1.6609443E12, 12529.0], [1.66094532E12, 11033.0], [1.66094106E12, 16266.1], [1.66094328E12, 13651.0], [1.6609431E12, 14305.5], [1.66093986E12, 32719.166666666668], [1.66094208E12, 16079.133333333333], [1.66094652E12, 10846.0], [1.66094448E12, 11594.0], [1.6609419E12, 17107.45], [1.66094412E12, 12342.0], [1.66094088E12, 16920.483333333334], [1.6609455E12, 10752.5], [1.66094568E12, 11033.0], [1.6609407E12, 15331.266666666666], [1.66094292E12, 13277.0], [1.66093968E12, 41592.666666666664], [1.6609467E12, 10191.5], [1.66094172E12, 17761.833333333332], [1.66094466E12, 11407.0], [1.66094688E12, 10191.5], [1.66094394E12, 12061.5], [1.66094052E12, 18322.733333333334], [1.66094586E12, 10846.0], [1.66094274E12, 14866.5], [1.66094706E12, 1870.0], [1.66094484E12, 10846.0], [1.66094154E12, 17668.35], [1.66094376E12, 13090.0], [1.66094358E12, 13090.0], [1.66094604E12, 10939.5], [1.66094034E12, 21875.1], [1.66094256E12, 15614.5], [1.66094238E12, 16456.0], [1.66094136E12, 17668.35], [1.66094502E12, 10939.5], [1.6609452E12, 11220.0], [1.66094118E12, 16266.1], [1.66094016E12, 22249.033333333333], [1.6609434E12, 12903.0], [1.66094622E12, 9630.5], [1.6609422E12, 14209.466666666667], [1.6609464E12, 10846.0], [1.66093998E12, 28792.866666666665], [1.660941E12, 16546.55], [1.66094538E12, 11500.5], [1.66094322E12, 13651.0], [1.66094658E12, 10285.0], [1.6609398E12, 35897.6], [1.66094202E12, 17387.9], [1.66094424E12, 11874.5], [1.66094406E12, 12061.5], [1.66094556E12, 10191.5], [1.66094082E12, 16640.033333333333], [1.66094304E12, 13931.5], [1.66094286E12, 14679.5], [1.66093962E12, 41592.6], [1.66094184E12, 16172.616666666667], [1.66094454E12, 11313.5], [1.66094676E12, 11033.0], [1.66094472E12, 10939.5], [1.66094166E12, 17855.316666666666], [1.66094388E12, 12248.5], [1.66094064E12, 16827.0], [1.66094574E12, 11126.5], [1.66094592E12, 9724.0], [1.66094046E12, 18977.116666666665], [1.66094268E12, 13370.5], [1.66094694E12, 9724.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66094706E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7191.905263157895, "minX": 1.66093956E12, "maxY": 56897.99038461538, "series": [{"data": [[1.66094148E12, 31761.630208333343], [1.6609449E12, 51827.73913043478], [1.6609437E12, 43553.1294964029], [1.66094028E12, 38111.064655172406], [1.6609461E12, 52404.71929824562], [1.6609425E12, 35308.14970059879], [1.66094508E12, 52860.84955752212], [1.6609413E12, 35012.52222222223], [1.66094352E12, 43390.57857142856], [1.6609401E12, 22946.475095785438], [1.66094334E12, 42120.366197183095], [1.66094628E12, 53581.403361344564], [1.66094232E12, 42473.837662337675], [1.66094214E12, 34501.765714285684], [1.66094436E12, 46825.527559055125], [1.66094112E12, 34621.10857142856], [1.66094526E12, 50352.30252100841], [1.66094544E12, 51528.530973451336], [1.66094094E12, 34492.62650602409], [1.66094316E12, 41220.69172932332], [1.66093992E12, 19047.169871794875], [1.66094646E12, 51076.58035714288], [1.66094196E12, 32114.264864864857], [1.66094442E12, 49180.57142857146], [1.66094664E12, 52761.65217391306], [1.66093974E12, 14585.480582524273], [1.66094418E12, 47149.209677419356], [1.66094076E12, 32699.33149171271], [1.66094562E12, 53458.66071428572], [1.66094298E12, 41448.26923076924], [1.66094682E12, 54406.19811320755], [1.6609446E12, 51447.60344827587], [1.66093956E12, 7191.905263157895], [1.66094178E12, 31717.66315789476], [1.660944E12, 45523.4104477612], [1.66094382E12, 42583.36428571429], [1.6609458E12, 51235.8947368421], [1.66094058E12, 30976.64921465968], [1.6609428E12, 38063.70700636942], [1.66094262E12, 36847.875776397486], [1.6609416E12, 31207.304123711343], [1.66094478E12, 51004.44715447151], [1.660947E12, 54402.88288288289], [1.66094496E12, 51879.12173913043], [1.66094142E12, 32059.12432432432], [1.66094364E12, 43166.849999999984], [1.6609404E12, 27618.098130841132], [1.66094598E12, 53727.033333333326], [1.66094616E12, 54790.40740740741], [1.66094022E12, 25014.792], [1.66094244E12, 34803.05232558138], [1.66094124E12, 34531.908536585375], [1.66094514E12, 52979.35714285713], [1.66094346E12, 41940.563380281674], [1.66094634E12, 53625.24770642202], [1.66094004E12, 21309.01811594203], [1.66094226E12, 52492.65420560747], [1.6609443E12, 44954.25373134329], [1.66094532E12, 51299.66101694916], [1.66094106E12, 34266.48275862069], [1.66094328E12, 40753.130136986314], [1.6609431E12, 39452.2091503268], [1.66093986E12, 16969.40571428572], [1.66094208E12, 34292.058139534885], [1.66094652E12, 53719.00862068966], [1.66094448E12, 49849.161290322576], [1.6609419E12, 33326.36065573769], [1.66094412E12, 45569.70454545453], [1.66094088E12, 33407.39779005527], [1.6609455E12, 52165.86086956518], [1.66094568E12, 52573.703389830494], [1.6609407E12, 38162.554878048795], [1.66094292E12, 38460.091549295765], [1.66093968E12, 13204.391011235966], [1.6609467E12, 53371.844036697265], [1.66094172E12, 31525.142105263145], [1.66094466E12, 49194.598360655735], [1.66094688E12, 55105.42201834863], [1.66094394E12, 45917.93798449608], [1.66094052E12, 30331.41326530612], [1.66094586E12, 53594.689655172406], [1.66094274E12, 37998.24528301884], [1.66094706E12, 41778.75], [1.66094484E12, 49942.629310344826], [1.66094154E12, 31506.592592592595], [1.66094376E12, 43078.22857142856], [1.66094358E12, 42308.742857142875], [1.66094604E12, 49975.94017094018], [1.66094034E12, 25458.816239316246], [1.66094256E12, 35836.88622754493], [1.66094238E12, 34678.09659090907], [1.66094136E12, 32871.85714285713], [1.66094502E12, 51743.3846153846], [1.6609452E12, 50494.649999999994], [1.66094118E12, 34423.206896551725], [1.66094016E12, 24915.32352941176], [1.6609434E12, 43349.8768115942], [1.66094622E12, 54357.43689320386], [1.6609422E12, 37648.197368421046], [1.6609464E12, 54395.068965517254], [1.66093998E12, 19135.314935064944], [1.660941E12, 35186.887005649725], [1.66094538E12, 49657.609756097554], [1.66094322E12, 44130.62328767123], [1.66094658E12, 53290.50000000001], [1.6609398E12, 15679.77864583333], [1.66094202E12, 32391.60215053764], [1.66094424E12, 47752.645669291334], [1.66094406E12, 45805.51937984495], [1.66094556E12, 54459.091743119294], [1.66094082E12, 33269.25842696629], [1.66094304E12, 39592.69798657718], [1.66094286E12, 38843.89808917198], [1.66093962E12, 13245.244943820231], [1.66094184E12, 33893.07514450868], [1.66094454E12, 48743.84297520663], [1.66094676E12, 53110.48305084745], [1.66094472E12, 50165.20512820511], [1.66094166E12, 31250.05759162304], [1.66094388E12, 45186.625954198484], [1.66094064E12, 31981.583333333332], [1.66094574E12, 49518.99999999999], [1.66094592E12, 54719.2980769231], [1.66094046E12, 29052.62068965517], [1.66094268E12, 41207.56643356642], [1.66094694E12, 56897.99038461538]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66094706E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7191.7789473684215, "minX": 1.66093956E12, "maxY": 56897.97115384615, "series": [{"data": [[1.66094148E12, 31761.630208333343], [1.6609449E12, 51827.72173913046], [1.6609437E12, 43553.1294964029], [1.66094028E12, 38111.064655172406], [1.6609461E12, 52404.71929824562], [1.6609425E12, 35308.14371257485], [1.66094508E12, 52860.84955752212], [1.6609413E12, 35012.51666666669], [1.66094352E12, 43390.57857142856], [1.6609401E12, 22946.47126436783], [1.66094334E12, 42120.366197183095], [1.66094628E12, 53581.39495798322], [1.66094232E12, 42473.837662337675], [1.66094214E12, 34501.765714285684], [1.66094436E12, 46825.527559055125], [1.66094112E12, 34621.10285714283], [1.66094526E12, 50352.29411764709], [1.66094544E12, 51528.530973451336], [1.66094094E12, 34492.62650602409], [1.66094316E12, 41220.69172932332], [1.66093992E12, 19047.160256410247], [1.66094646E12, 51076.57142857144], [1.66094196E12, 32114.254054054054], [1.66094442E12, 49180.57142857146], [1.66094664E12, 52761.65217391306], [1.66093974E12, 14585.475728155345], [1.66094418E12, 47149.209677419356], [1.66094076E12, 32699.320441988955], [1.66094562E12, 53458.66071428572], [1.66094298E12, 41448.26923076924], [1.66094682E12, 54406.19811320755], [1.6609446E12, 51447.60344827587], [1.66093956E12, 7191.7789473684215], [1.66094178E12, 31717.657894736854], [1.660944E12, 45523.4104477612], [1.66094382E12, 42583.36428571429], [1.6609458E12, 51235.8947368421], [1.66094058E12, 30976.628272251313], [1.6609428E12, 38063.70700636942], [1.66094262E12, 36847.863354037254], [1.6609416E12, 31207.29896907217], [1.66094478E12, 51004.44715447151], [1.660947E12, 54402.87387387388], [1.66094496E12, 51879.12173913043], [1.66094142E12, 32059.11891891892], [1.66094364E12, 43166.849999999984], [1.6609404E12, 27618.09345794393], [1.66094598E12, 53727.033333333326], [1.66094616E12, 54790.398148148124], [1.66094022E12, 25014.784000000003], [1.66094244E12, 34803.046511627894], [1.66094124E12, 34531.908536585375], [1.66094514E12, 52979.35714285713], [1.66094346E12, 41940.563380281674], [1.66094634E12, 53625.22935779817], [1.66094004E12, 21309.0036231884], [1.66094226E12, 52492.65420560747], [1.6609443E12, 44954.25373134329], [1.66094532E12, 51299.644067796595], [1.66094106E12, 34266.47701149425], [1.66094328E12, 40753.130136986314], [1.6609431E12, 39452.2091503268], [1.66093986E12, 16969.39142857141], [1.66094208E12, 34292.058139534885], [1.66094652E12, 53719.00862068966], [1.66094448E12, 49849.161290322576], [1.6609419E12, 33326.35519125681], [1.66094412E12, 45569.69696969697], [1.66094088E12, 33407.392265193375], [1.6609455E12, 52165.86086956518], [1.66094568E12, 52573.703389830494], [1.6609407E12, 38162.54878048781], [1.66094292E12, 38460.091549295765], [1.66093968E12, 13204.368539325835], [1.6609467E12, 53371.844036697265], [1.66094172E12, 31525.131578947352], [1.66094466E12, 49194.59016393442], [1.66094688E12, 55105.42201834863], [1.66094394E12, 45917.93023255813], [1.66094052E12, 30331.39795918368], [1.66094586E12, 53594.681034482775], [1.66094274E12, 37998.23899371067], [1.66094706E12, 41778.75], [1.66094484E12, 49942.629310344826], [1.66094154E12, 31506.576719576726], [1.66094376E12, 43078.22857142856], [1.66094358E12, 42308.742857142875], [1.66094604E12, 49975.94017094018], [1.66094034E12, 25458.816239316246], [1.66094256E12, 35836.88622754493], [1.66094238E12, 34678.090909090926], [1.66094136E12, 32871.85714285713], [1.66094502E12, 51743.358974358984], [1.6609452E12, 50494.64166666667], [1.66094118E12, 34423.20114942529], [1.66094016E12, 24915.30672268909], [1.6609434E12, 43349.8768115942], [1.66094622E12, 54357.43689320386], [1.6609422E12, 37648.197368421046], [1.6609464E12, 54395.068965517254], [1.66093998E12, 19135.308441558438], [1.660941E12, 35186.887005649725], [1.66094538E12, 49657.609756097554], [1.66094322E12, 44130.616438356155], [1.66094658E12, 53290.49090909092], [1.6609398E12, 15679.76822916667], [1.66094202E12, 32391.591397849446], [1.66094424E12, 47752.629921259846], [1.66094406E12, 45805.51937984495], [1.66094556E12, 54459.091743119294], [1.66094082E12, 33269.25842696629], [1.66094304E12, 39592.6845637584], [1.66094286E12, 38843.88535031846], [1.66093962E12, 13245.21123595506], [1.66094184E12, 33893.05780346823], [1.66094454E12, 48743.84297520663], [1.66094676E12, 53110.466101694925], [1.66094472E12, 50165.20512820511], [1.66094166E12, 31250.047120418858], [1.66094388E12, 45186.625954198484], [1.66094064E12, 31981.566666666673], [1.66094574E12, 49518.97478991596], [1.66094592E12, 54719.2980769231], [1.66094046E12, 29052.62068965517], [1.66094268E12, 41207.56643356642], [1.66094694E12, 56897.97115384615]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66094706E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.023999999999999997, "minX": 1.66093956E12, "maxY": 3.347368421052632, "series": [{"data": [[1.66094148E12, 0.14583333333333337], [1.6609449E12, 0.11304347826086959], [1.6609437E12, 0.12949640287769787], [1.66094028E12, 0.13793103448275867], [1.6609461E12, 0.043859649122806994], [1.6609425E12, 0.09580838323353297], [1.66094508E12, 0.1150442477876106], [1.6609413E12, 0.1444444444444445], [1.66094352E12, 0.12142857142857146], [1.6609401E12, 0.10344827586206903], [1.66094334E12, 0.09859154929577472], [1.66094628E12, 0.0672268907563025], [1.66094232E12, 0.16233766233766242], [1.66094214E12, 0.1428571428571428], [1.66094436E12, 0.06299212598425198], [1.66094112E12, 0.11428571428571428], [1.66094526E12, 0.06722689075630252], [1.66094544E12, 0.12389380530973447], [1.66094094E12, 0.12048192771084336], [1.66094316E12, 0.12781954887218044], [1.66093992E12, 0.08653846153846158], [1.66094646E12, 0.16071428571428578], [1.66094196E12, 0.15135135135135155], [1.66094442E12, 0.10084033613445381], [1.66094664E12, 0.07826086956521738], [1.66093974E12, 0.09951456310679616], [1.66094418E12, 0.11290322580645162], [1.66094076E12, 0.16022099447513813], [1.66094562E12, 0.13392857142857137], [1.66094298E12, 0.10256410256410256], [1.66094682E12, 0.07547169811320753], [1.6609446E12, 0.11206896551724135], [1.66093956E12, 3.347368421052632], [1.66094178E12, 0.13157894736842113], [1.660944E12, 0.07462686567164176], [1.66094382E12, 0.13571428571428576], [1.6609458E12, 0.087719298245614], [1.66094058E12, 0.130890052356021], [1.6609428E12, 0.11464968152866244], [1.66094262E12, 0.08695652173913045], [1.6609416E12, 0.15463917525773205], [1.66094478E12, 0.14634146341463414], [1.660947E12, 0.11711711711711711], [1.66094496E12, 0.13913043478260873], [1.66094142E12, 0.11891891891891891], [1.66094364E12, 0.07142857142857144], [1.6609404E12, 0.11682242990654214], [1.66094598E12, 0.05833333333333334], [1.66094616E12, 0.11111111111111113], [1.66094022E12, 0.023999999999999997], [1.66094244E12, 0.1395348837209302], [1.66094124E12, 0.07317073170731708], [1.66094514E12, 0.12499999999999997], [1.66094346E12, 0.11971830985915492], [1.66094634E12, 0.07339449541284404], [1.66094004E12, 0.09420289855072464], [1.66094226E12, 0.06542056074766354], [1.6609443E12, 0.07462686567164177], [1.66094532E12, 0.10169491525423731], [1.66094106E12, 0.103448275862069], [1.66094328E12, 0.07534246575342463], [1.6609431E12, 0.065359477124183], [1.66093986E12, 0.1171428571428573], [1.66094208E12, 0.11046511627906976], [1.66094652E12, 0.05172413793103448], [1.66094448E12, 0.1209677419354839], [1.6609419E12, 0.07103825136612023], [1.66094412E12, 0.13636363636363635], [1.66094088E12, 0.13259668508287292], [1.6609455E12, 0.06086956521739129], [1.66094568E12, 0.10169491525423728], [1.6609407E12, 0.14634146341463422], [1.66094292E12, 0.1619718309859155], [1.66093968E12, 0.10337078651685393], [1.6609467E12, 0.03669724770642201], [1.66094172E12, 0.11052631578947378], [1.66094466E12, 0.04098360655737706], [1.66094688E12, 0.06422018348623852], [1.66094394E12, 0.13178294573643412], [1.66094052E12, 0.05612244897959184], [1.66094586E12, 0.1120689655172414], [1.66094274E12, 0.12578616352201258], [1.66094706E12, 0.09999999999999999], [1.66094484E12, 0.06034482758620689], [1.66094154E12, 0.14814814814814814], [1.66094376E12, 0.1428571428571428], [1.66094358E12, 0.13571428571428576], [1.66094604E12, 0.0769230769230769], [1.66094034E12, 0.11538461538461539], [1.66094256E12, 0.09580838323353294], [1.66094238E12, 0.08522727272727272], [1.66094136E12, 0.1375661375661375], [1.66094502E12, 0.15384615384615383], [1.6609452E12, 0.09999999999999999], [1.66094118E12, 0.10344827586206906], [1.66094016E12, 0.10084033613445383], [1.6609434E12, 0.14492753623188404], [1.66094622E12, 0.08737864077669902], [1.6609422E12, 0.09868421052631576], [1.6609464E12, 0.060344827586206885], [1.66093998E12, 0.02597402597402599], [1.660941E12, 0.16949152542372894], [1.66094538E12, 0.10569105691056911], [1.66094322E12, 0.14383561643835627], [1.66094658E12, 0.12727272727272726], [1.6609398E12, 0.1015625], [1.66094202E12, 0.10752688172043015], [1.66094424E12, 0.09448818897637798], [1.66094406E12, 0.09302325581395346], [1.66094556E12, 0.09174311926605509], [1.66094082E12, 0.13483146067415736], [1.66094304E12, 0.08053691275167783], [1.66094286E12, 0.11464968152866246], [1.66093962E12, 0.02696629213483147], [1.66094184E12, 0.07514450867052026], [1.66094454E12, 0.06611570247933884], [1.66094676E12, 0.05932203389830509], [1.66094472E12, 0.0854700854700855], [1.66094166E12, 0.1518324607329843], [1.66094388E12, 0.11450381679389321], [1.66094064E12, 0.13888888888888884], [1.66094574E12, 0.10084033613445377], [1.66094592E12, 0.0673076923076923], [1.66094046E12, 0.17241379310344826], [1.66094268E12, 0.16083916083916086], [1.66094694E12, 0.038461538461538464]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66094706E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1735.0, "minX": 1.66093956E12, "maxY": 61483.0, "series": [{"data": [[1.66094148E12, 33961.0], [1.6609449E12, 55768.0], [1.6609437E12, 47473.0], [1.66094028E12, 55529.0], [1.6609461E12, 56314.0], [1.6609425E12, 39828.0], [1.66094508E12, 56895.0], [1.6609413E12, 40376.0], [1.66094352E12, 47313.0], [1.6609401E12, 25147.0], [1.66094334E12, 46115.0], [1.66094628E12, 60569.0], [1.66094232E12, 59519.0], [1.66094214E12, 37591.0], [1.66094436E12, 50397.0], [1.66094112E12, 37277.0], [1.66094526E12, 55350.0], [1.66094544E12, 56043.0], [1.66094094E12, 39947.0], [1.66094316E12, 43364.0], [1.66093992E12, 21043.0], [1.66094646E12, 56181.0], [1.66094196E12, 35676.0], [1.66094442E12, 52904.0], [1.66094664E12, 57707.0], [1.66093974E12, 16469.0], [1.66094418E12, 52341.0], [1.66094076E12, 34548.0], [1.66094562E12, 58595.0], [1.66094298E12, 46908.0], [1.66094682E12, 58924.0], [1.6609446E12, 61305.0], [1.66093956E12, 12189.0], [1.66094178E12, 36810.0], [1.660944E12, 50740.0], [1.66094382E12, 48012.0], [1.6609458E12, 55288.0], [1.66094058E12, 34862.0], [1.6609428E12, 41524.0], [1.66094262E12, 40453.0], [1.6609416E12, 35373.0], [1.66094478E12, 57268.0], [1.660947E12, 60189.0], [1.66094496E12, 55857.0], [1.66094142E12, 34389.0], [1.66094364E12, 49037.0], [1.6609404E12, 30800.0], [1.66094598E12, 60617.0], [1.66094616E12, 61483.0], [1.66094022E12, 27973.0], [1.66094244E12, 38588.0], [1.66094124E12, 39123.0], [1.66094514E12, 57017.0], [1.66094346E12, 45887.0], [1.66094634E12, 58035.0], [1.66094004E12, 24147.0], [1.66094226E12, 60799.0], [1.6609443E12, 51588.0], [1.66094532E12, 56798.0], [1.66094106E12, 37738.0], [1.66094328E12, 43262.0], [1.6609431E12, 43727.0], [1.66093986E12, 18775.0], [1.66094208E12, 39098.0], [1.66094652E12, 58545.0], [1.66094448E12, 55625.0], [1.6609419E12, 38000.0], [1.66094412E12, 52427.0], [1.66094088E12, 35622.0], [1.6609455E12, 58125.0], [1.66094568E12, 57479.0], [1.6609407E12, 44137.0], [1.66094292E12, 45295.0], [1.66093968E12, 15147.0], [1.6609467E12, 56883.0], [1.66094172E12, 36192.0], [1.66094466E12, 52573.0], [1.66094688E12, 59398.0], [1.66094394E12, 52678.0], [1.66094052E12, 32473.0], [1.66094586E12, 57415.0], [1.66094274E12, 45643.0], [1.66094706E12, 50880.0], [1.66094484E12, 54084.0], [1.66094154E12, 35881.0], [1.66094376E12, 47894.0], [1.66094358E12, 46787.0], [1.66094604E12, 56624.0], [1.66094034E12, 30260.0], [1.66094256E12, 40237.0], [1.66094238E12, 38825.0], [1.66094136E12, 37011.0], [1.66094502E12, 56136.0], [1.6609452E12, 56643.0], [1.66094118E12, 36476.0], [1.66094016E12, 27641.0], [1.6609434E12, 46655.0], [1.66094622E12, 59724.0], [1.6609422E12, 42215.0], [1.6609464E12, 59700.0], [1.66093998E12, 21199.0], [1.660941E12, 39759.0], [1.66094538E12, 53450.0], [1.66094322E12, 49802.0], [1.66094658E12, 57608.0], [1.6609398E12, 16912.0], [1.66094202E12, 35713.0], [1.66094424E12, 54607.0], [1.66094406E12, 51725.0], [1.66094556E12, 60113.0], [1.66094082E12, 35752.0], [1.66094304E12, 46333.0], [1.66094286E12, 43941.0], [1.66093962E12, 15115.0], [1.66094184E12, 39078.0], [1.66094454E12, 52528.0], [1.66094676E12, 58102.0], [1.66094472E12, 53011.0], [1.66094166E12, 33700.0], [1.66094388E12, 49885.0], [1.66094064E12, 36779.0], [1.66094574E12, 55610.0], [1.66094592E12, 59481.0], [1.66094046E12, 31619.0], [1.66094268E12, 46084.0], [1.66094694E12, 61095.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66094148E12, 32938.700000000004], [1.6609449E12, 53685.6], [1.6609437E12, 44905.0], [1.66094028E12, 54416.2], [1.6609461E12, 54468.5], [1.6609425E12, 36290.4], [1.66094508E12, 54374.2], [1.6609413E12, 38123.4], [1.66094352E12, 44967.8], [1.6609401E12, 23866.8], [1.66094334E12, 43488.0], [1.66094628E12, 57148.0], [1.66094232E12, 53094.5], [1.66094214E12, 35965.4], [1.66094436E12, 48416.2], [1.66094112E12, 35681.6], [1.66094526E12, 52150.0], [1.66094544E12, 53828.6], [1.66094094E12, 37895.6], [1.66094316E12, 42162.4], [1.66093992E12, 20126.5], [1.66094646E12, 53909.3], [1.66094196E12, 33448.6], [1.66094442E12, 51344.0], [1.66094664E12, 54971.4], [1.66093974E12, 15330.0], [1.66094418E12, 49247.0], [1.66094076E12, 33563.2], [1.66094562E12, 55474.4], [1.66094298E12, 44118.9], [1.66094682E12, 56676.8], [1.6609446E12, 53199.0], [1.66093956E12, 11303.400000000001], [1.66094178E12, 32905.3], [1.660944E12, 47731.0], [1.66094382E12, 44078.3], [1.6609458E12, 53393.5], [1.66094058E12, 32108.8], [1.6609428E12, 39375.8], [1.66094262E12, 38224.2], [1.6609416E12, 32365.5], [1.66094478E12, 52866.2], [1.660947E12, 57275.6], [1.66094496E12, 53378.8], [1.66094142E12, 32869.8], [1.66094364E12, 44844.3], [1.6609404E12, 29326.0], [1.66094598E12, 57343.1], [1.66094616E12, 57736.1], [1.66094022E12, 26950.4], [1.66094244E12, 35818.5], [1.66094124E12, 35402.5], [1.66094514E12, 54729.9], [1.66094346E12, 43607.4], [1.66094634E12, 55802.0], [1.66094004E12, 22352.7], [1.66094226E12, 59485.8], [1.6609443E12, 47136.5], [1.66094532E12, 52953.1], [1.66094106E12, 35368.5], [1.66094328E12, 42219.5], [1.6609431E12, 41008.2], [1.66093986E12, 17861.9], [1.66094208E12, 36304.0], [1.66094652E12, 55756.4], [1.66094448E12, 52109.0], [1.6609419E12, 35220.6], [1.66094412E12, 47223.6], [1.66094088E12, 34543.6], [1.6609455E12, 53343.0], [1.66094568E12, 55013.0], [1.6609407E12, 42492.5], [1.66094292E12, 40374.40000000001], [1.66093968E12, 14372.8], [1.6609467E12, 55095.0], [1.66094172E12, 33053.5], [1.66094466E12, 50998.7], [1.66094688E12, 57159.0], [1.66094394E12, 47489.0], [1.66094052E12, 31243.7], [1.66094586E12, 56161.5], [1.66094274E12, 43769.0], [1.66094706E12, 49290.700000000004], [1.66094484E12, 52077.3], [1.66094154E12, 32442.0], [1.66094376E12, 44501.7], [1.66094358E12, 43674.5], [1.66094604E12, 51612.6], [1.66094034E12, 26405.5], [1.66094256E12, 37245.8], [1.66094238E12, 35744.8], [1.66094136E12, 34952.0], [1.66094502E12, 53463.200000000004], [1.6609452E12, 53917.9], [1.66094118E12, 35488.0], [1.66094016E12, 26741.5], [1.6609434E12, 44643.3], [1.66094622E12, 56937.4], [1.6609422E12, 40939.7], [1.6609464E12, 57864.3], [1.66093998E12, 20037.2], [1.660941E12, 37873.0], [1.66094538E12, 51652.6], [1.66094322E12, 46368.5], [1.66094658E12, 55355.2], [1.6609398E12, 16172.0], [1.66094202E12, 33692.1], [1.66094424E12, 48919.8], [1.66094406E12, 47327.0], [1.66094556E12, 56960.0], [1.66094082E12, 34247.8], [1.66094304E12, 40827.0], [1.66094286E12, 40226.6], [1.66093962E12, 14484.4], [1.66094184E12, 36782.4], [1.66094454E12, 50175.8], [1.66094676E12, 55519.0], [1.66094472E12, 51263.6], [1.66094166E12, 32126.8], [1.66094388E12, 46683.2], [1.66094064E12, 33267.5], [1.66094574E12, 51779.0], [1.66094592E12, 57588.5], [1.66094046E12, 30437.6], [1.66094268E12, 44851.8], [1.66094694E12, 59185.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66094148E12, 33892.18], [1.6609449E12, 55748.0], [1.6609437E12, 47189.399999999994], [1.66094028E12, 55494.159999999996], [1.6609461E12, 56310.7], [1.6609425E12, 39327.52], [1.66094508E12, 56779.5], [1.6609413E12, 40366.28], [1.66094352E12, 46885.780000000006], [1.6609401E12, 24771.62], [1.66094334E12, 45941.71], [1.66094628E12, 60317.6], [1.66094232E12, 59346.299999999996], [1.66094214E12, 37208.72], [1.66094436E12, 50395.6], [1.66094112E12, 36802.00000000001], [1.66094526E12, 55251.0], [1.66094544E12, 56004.92], [1.66094094E12, 39576.490000000005], [1.66094316E12, 43346.32], [1.66093992E12, 20742.83], [1.66094646E12, 56092.08], [1.66094196E12, 35596.02], [1.66094442E12, 52736.799999999996], [1.66094664E12, 57542.04], [1.66093974E12, 16114.36], [1.66094418E12, 52336.0], [1.66094076E12, 34520.94], [1.66094562E12, 58477.740000000005], [1.66094298E12, 46870.38], [1.66094682E12, 58920.57], [1.6609446E12, 60263.06999999999], [1.66093956E12, 12189.0], [1.66094178E12, 34556.84000000001], [1.660944E12, 50566.05], [1.66094382E12, 47043.170000000006], [1.6609458E12, 55262.2], [1.66094058E12, 33465.43999999997], [1.6609428E12, 41117.41999999999], [1.66094262E12, 39971.88], [1.6609416E12, 35136.450000000004], [1.66094478E12, 56781.28000000001], [1.660947E12, 60109.68], [1.66094496E12, 55811.56], [1.66094142E12, 34219.579999999994], [1.66094364E12, 47883.67000000001], [1.6609404E12, 30377.1], [1.66094598E12, 60372.55999999999], [1.66094616E12, 61311.729999999996], [1.66094022E12, 27794.639999999996], [1.66094244E12, 37511.250000000015], [1.66094124E12, 38957.25], [1.66094514E12, 56966.560000000005], [1.66094346E12, 45782.08], [1.66094634E12, 57980.600000000006], [1.66094004E12, 22944.450000000004], [1.66094226E12, 60727.560000000005], [1.6609443E12, 51073.50000000001], [1.66094532E12, 56751.64], [1.66094106E12, 37131.25], [1.66094328E12, 43074.0], [1.6609431E12, 43312.280000000006], [1.66093986E12, 18503.260000000002], [1.66094208E12, 38958.57], [1.66094652E12, 58337.43], [1.66094448E12, 54996.25], [1.6609419E12, 37731.2], [1.66094412E12, 52129.33999999999], [1.66094088E12, 35607.24], [1.6609455E12, 57750.600000000006], [1.66094568E12, 57371.840000000004], [1.6609407E12, 44016.75], [1.66094292E12, 45279.95], [1.66093968E12, 14973.12], [1.6609467E12, 56824.200000000004], [1.66094172E12, 34971.69], [1.66094466E12, 52535.51], [1.66094688E12, 59377.8], [1.66094394E12, 52139.79999999998], [1.66094052E12, 32153.87], [1.66094586E12, 57372.159999999996], [1.66094274E12, 45542.8], [1.66094706E12, 50880.0], [1.66094484E12, 54034.53], [1.66094154E12, 35020.59999999999], [1.66094376E12, 47550.83], [1.66094358E12, 46537.72], [1.66094604E12, 56175.25999999998], [1.66094034E12, 27822.95], [1.66094256E12, 39221.75999999999], [1.66094238E12, 38275.98999999999], [1.66094136E12, 36732.9], [1.66094502E12, 56123.58], [1.6609452E12, 56410.73999999999], [1.66094118E12, 36431.75], [1.66094016E12, 27566.67], [1.6609434E12, 46541.509999999995], [1.66094622E12, 59696.31999999999], [1.6609422E12, 42189.03], [1.6609464E12, 59590.01], [1.66093998E12, 20789.180000000004], [1.660941E12, 39535.92], [1.66094538E12, 53426.48], [1.66094322E12, 49410.96], [1.66094658E12, 57591.39], [1.6609398E12, 16802.05], [1.66094202E12, 34968.28], [1.66094424E12, 53677.67999999999], [1.66094406E12, 51315.79999999998], [1.66094556E12, 60029.4], [1.66094082E12, 35571.880000000005], [1.66094304E12, 46049.5], [1.66094286E12, 43667.81999999999], [1.66093962E12, 15063.62], [1.66094184E12, 38469.719999999994], [1.66094454E12, 52435.16], [1.66094676E12, 57976.79], [1.66094472E12, 52996.6], [1.66094166E12, 33403.759999999995], [1.66094388E12, 49347.40000000001], [1.66094064E12, 35799.71], [1.66094574E12, 55306.6], [1.66094592E12, 59480.35], [1.66094046E12, 31575.12], [1.66094268E12, 46046.16], [1.66094694E12, 61076.65]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66094148E12, 33306.8], [1.6609449E12, 54420.799999999996], [1.6609437E12, 45556.0], [1.66094028E12, 54681.0], [1.6609461E12, 55716.0], [1.6609425E12, 37257.799999999996], [1.66094508E12, 55523.6], [1.6609413E12, 38924.35], [1.66094352E12, 45478.649999999994], [1.6609401E12, 24319.6], [1.66094334E12, 43894.05], [1.66094628E12, 58129.0], [1.66094232E12, 58824.5], [1.66094214E12, 36494.0], [1.66094436E12, 49201.799999999996], [1.66094112E12, 35974.4], [1.66094526E12, 52796.0], [1.66094544E12, 54661.7], [1.66094094E12, 38196.7], [1.66094316E12, 42838.7], [1.66093992E12, 20298.35], [1.66094646E12, 54604.1], [1.66094196E12, 34015.7], [1.66094442E12, 51909.0], [1.66094664E12, 55783.0], [1.66093974E12, 15523.1], [1.66094418E12, 49779.25], [1.66094076E12, 33990.1], [1.66094562E12, 56422.1], [1.66094298E12, 44755.1], [1.66094682E12, 57036.0], [1.6609446E12, 53986.85], [1.66093956E12, 11808.399999999998], [1.66094178E12, 33288.25], [1.660944E12, 48676.75], [1.66094382E12, 44926.799999999996], [1.6609458E12, 54203.25], [1.66094058E12, 32532.2], [1.6609428E12, 39917.1], [1.66094262E12, 38614.8], [1.6609416E12, 32748.75], [1.66094478E12, 53290.0], [1.660947E12, 58169.399999999994], [1.66094496E12, 54703.6], [1.66094142E12, 33476.299999999996], [1.66094364E12, 45546.7], [1.6609404E12, 29837.0], [1.66094598E12, 58221.25], [1.66094616E12, 59124.65], [1.66094022E12, 27081.0], [1.66094244E12, 36138.6], [1.66094124E12, 37201.5], [1.66094514E12, 55352.549999999996], [1.66094346E12, 44134.15], [1.66094634E12, 56271.5], [1.66094004E12, 22506.5], [1.66094226E12, 59624.0], [1.6609443E12, 47847.0], [1.66094532E12, 54449.049999999996], [1.66094106E12, 35596.75], [1.66094328E12, 42404.2], [1.6609431E12, 41995.6], [1.66093986E12, 17960.05], [1.66094208E12, 37098.05], [1.66094652E12, 56194.65], [1.66094448E12, 52616.75], [1.6609419E12, 35533.4], [1.66094412E12, 47676.35], [1.66094088E12, 34797.9], [1.6609455E12, 54915.2], [1.66094568E12, 55601.0], [1.6609407E12, 42800.0], [1.66094292E12, 43939.25], [1.66093968E12, 14624.6], [1.6609467E12, 55667.0], [1.66094172E12, 33462.15], [1.66094466E12, 51705.0], [1.66094688E12, 57639.5], [1.66094394E12, 48663.0], [1.66094052E12, 31556.3], [1.66094586E12, 56608.7], [1.66094274E12, 44484.0], [1.66094706E12, 50803.4], [1.66094484E12, 52264.85], [1.66094154E12, 32892.5], [1.66094376E12, 45585.049999999996], [1.66094358E12, 44467.95], [1.66094604E12, 53113.299999999996], [1.66094034E12, 26694.0], [1.66094256E12, 37686.6], [1.66094238E12, 36524.15], [1.66094136E12, 35835.0], [1.66094502E12, 54935.799999999996], [1.6609452E12, 54794.9], [1.66094118E12, 35792.25], [1.66094016E12, 26851.449999999997], [1.6609434E12, 45363.549999999996], [1.66094622E12, 57790.0], [1.6609422E12, 41345.0], [1.6609464E12, 58293.05], [1.66093998E12, 20330.5], [1.660941E12, 38311.2], [1.66094538E12, 52531.0], [1.66094322E12, 46848.15], [1.66094658E12, 56068.5], [1.6609398E12, 16458.75], [1.66094202E12, 34339.65], [1.66094424E12, 49816.4], [1.66094406E12, 48685.0], [1.66094556E12, 58008.5], [1.66094082E12, 34662.8], [1.66094304E12, 41317.5], [1.66094286E12, 40855.4], [1.66093962E12, 14669.7], [1.66094184E12, 37119.7], [1.66094454E12, 51079.1], [1.66094676E12, 56016.549999999996], [1.66094472E12, 52365.6], [1.66094166E12, 32743.199999999997], [1.66094388E12, 47204.4], [1.66094064E12, 35094.4], [1.66094574E12, 52960.0], [1.66094592E12, 59025.0], [1.66094046E12, 30903.0], [1.66094268E12, 45492.2], [1.66094694E12, 60412.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66094148E12, 28650.0], [1.6609449E12, 47672.0], [1.6609437E12, 39116.0], [1.66094028E12, 24348.0], [1.6609461E12, 47583.0], [1.6609425E12, 31881.0], [1.66094508E12, 49173.0], [1.6609413E12, 29482.0], [1.66094352E12, 40990.0], [1.6609401E12, 21331.0], [1.66094334E12, 38071.0], [1.66094628E12, 48794.0], [1.66094232E12, 33385.0], [1.66094214E12, 31854.0], [1.66094436E12, 43550.0], [1.66094112E12, 32799.0], [1.66094526E12, 46547.0], [1.66094544E12, 45594.0], [1.66094094E12, 31553.0], [1.66094316E12, 36964.0], [1.66093992E12, 16587.0], [1.66094646E12, 46267.0], [1.66094196E12, 28065.0], [1.66094442E12, 45252.0], [1.66094664E12, 47987.0], [1.66093974E12, 13367.0], [1.66094418E12, 41477.0], [1.66094076E12, 30143.0], [1.66094562E12, 48799.0], [1.66094298E12, 35644.0], [1.66094682E12, 50549.0], [1.6609446E12, 48841.0], [1.66093956E12, 1735.0], [1.66094178E12, 28435.0], [1.660944E12, 38317.0], [1.66094382E12, 38537.0], [1.6609458E12, 48456.0], [1.66094058E12, 28531.0], [1.6609428E12, 34203.0], [1.66094262E12, 32934.0], [1.6609416E12, 27513.0], [1.66094478E12, 46122.0], [1.660947E12, 48535.0], [1.66094496E12, 47922.0], [1.66094142E12, 30275.0], [1.66094364E12, 38435.0], [1.6609404E12, 25287.0], [1.66094598E12, 47920.0], [1.66094616E12, 50384.0], [1.66094022E12, 23309.0], [1.66094244E12, 31776.0], [1.66094124E12, 32037.0], [1.66094514E12, 49419.0], [1.66094346E12, 38714.0], [1.66094634E12, 47810.0], [1.66094004E12, 18845.0], [1.66094226E12, 39616.0], [1.6609443E12, 40436.0], [1.66094532E12, 45381.0], [1.66094106E12, 31755.0], [1.66094328E12, 37955.0], [1.6609431E12, 36370.0], [1.66093986E12, 15864.0], [1.66094208E12, 29752.0], [1.66094652E12, 49161.0], [1.66094448E12, 46547.0], [1.6609419E12, 28484.0], [1.66094412E12, 39202.0], [1.66094088E12, 30308.0], [1.6609455E12, 48730.0], [1.66094568E12, 48114.0], [1.6609407E12, 30814.0], [1.66094292E12, 35057.0], [1.66093968E12, 12000.0], [1.6609467E12, 49691.0], [1.66094172E12, 28332.0], [1.66094466E12, 43855.0], [1.66094688E12, 50978.0], [1.66094394E12, 41763.0], [1.66094052E12, 27580.0], [1.66094586E12, 45883.0], [1.66094274E12, 32591.0], [1.66094706E12, 23813.0], [1.66094484E12, 45908.0], [1.66094154E12, 27998.0], [1.66094376E12, 39906.0], [1.66094358E12, 38160.0], [1.66094604E12, 47199.0], [1.66094034E12, 23789.0], [1.66094256E12, 32978.0], [1.66094238E12, 30906.0], [1.66094136E12, 30138.0], [1.66094502E12, 48210.0], [1.6609452E12, 46304.0], [1.66094118E12, 31856.0], [1.66094016E12, 22152.0], [1.6609434E12, 39857.0], [1.66094622E12, 50013.0], [1.6609422E12, 31720.0], [1.6609464E12, 49173.0], [1.66093998E12, 17664.0], [1.660941E12, 32394.0], [1.66094538E12, 44779.0], [1.66094322E12, 38786.0], [1.66094658E12, 48151.0], [1.6609398E12, 14894.0], [1.66094202E12, 28525.0], [1.66094424E12, 43577.0], [1.66094406E12, 42198.0], [1.66094556E12, 46950.0], [1.66094082E12, 31321.0], [1.66094304E12, 35341.0], [1.66094286E12, 34162.0], [1.66093962E12, 11937.0], [1.66094184E12, 29229.0], [1.66094454E12, 46120.0], [1.66094676E12, 49256.0], [1.66094472E12, 47070.0], [1.66094166E12, 28840.0], [1.66094388E12, 41886.0], [1.66094064E12, 30339.0], [1.66094574E12, 42156.0], [1.66094592E12, 50435.0], [1.66094046E12, 26769.0], [1.66094268E12, 35829.0], [1.66094694E12, 52397.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66094148E12, 31688.0], [1.6609449E12, 51788.0], [1.6609437E12, 43481.0], [1.66094028E12, 27209.0], [1.6609461E12, 52182.5], [1.6609425E12, 35216.0], [1.66094508E12, 52849.0], [1.6609413E12, 34982.5], [1.66094352E12, 43324.0], [1.6609401E12, 22805.0], [1.66094334E12, 41905.0], [1.66094628E12, 53382.0], [1.66094232E12, 40798.0], [1.66094214E12, 34510.0], [1.66094436E12, 46642.0], [1.66094112E12, 34645.0], [1.66094526E12, 50295.0], [1.66094544E12, 51919.0], [1.66094094E12, 33805.0], [1.66094316E12, 41224.0], [1.66093992E12, 19135.0], [1.66094646E12, 50606.0], [1.66094196E12, 32182.0], [1.66094442E12, 49467.0], [1.66094664E12, 52795.0], [1.66093974E12, 14534.0], [1.66094418E12, 47221.5], [1.66094076E12, 32695.0], [1.66094562E12, 53393.0], [1.66094298E12, 42764.0], [1.66094682E12, 54596.0], [1.6609446E12, 51307.0], [1.66093956E12, 7138.0], [1.66094178E12, 31878.5], [1.660944E12, 45238.5], [1.66094382E12, 42457.5], [1.6609458E12, 51006.0], [1.66094058E12, 30716.0], [1.6609428E12, 37915.0], [1.66094262E12, 36817.0], [1.6609416E12, 31174.5], [1.66094478E12, 51448.0], [1.660947E12, 54016.0], [1.66094496E12, 51760.0], [1.66094142E12, 32045.0], [1.66094364E12, 43146.0], [1.6609404E12, 27411.0], [1.66094598E12, 53370.5], [1.66094616E12, 54737.0], [1.66094022E12, 24443.0], [1.66094244E12, 34886.0], [1.66094124E12, 34440.0], [1.66094514E12, 53040.5], [1.66094346E12, 41885.5], [1.66094634E12, 53725.0], [1.66094004E12, 21571.0], [1.66094226E12, 52799.0], [1.6609443E12, 44865.5], [1.66094532E12, 51178.0], [1.66094106E12, 34164.5], [1.66094328E12, 40843.0], [1.6609431E12, 39419.0], [1.66093986E12, 16769.0], [1.66094208E12, 34263.0], [1.66094652E12, 53815.0], [1.66094448E12, 49622.5], [1.6609419E12, 33588.0], [1.66094412E12, 45511.0], [1.66094088E12, 33435.0], [1.6609455E12, 52085.0], [1.66094568E12, 52636.0], [1.6609407E12, 39477.0], [1.66094292E12, 38000.0], [1.66093968E12, 13043.0], [1.6609467E12, 53247.0], [1.66094172E12, 31420.0], [1.66094466E12, 49084.5], [1.66094688E12, 54969.0], [1.66094394E12, 45828.0], [1.66094052E12, 30438.5], [1.66094586E12, 54096.5], [1.66094274E12, 36982.0], [1.66094706E12, 43515.0], [1.66094484E12, 50150.0], [1.66094154E12, 31468.0], [1.66094376E12, 42992.0], [1.66094358E12, 42186.5], [1.66094604E12, 49793.0], [1.66094034E12, 25506.0], [1.66094256E12, 35662.0], [1.66094238E12, 34509.5], [1.66094136E12, 32427.0], [1.66094502E12, 51370.0], [1.6609452E12, 49884.5], [1.66094118E12, 34404.0], [1.66094016E12, 24335.0], [1.6609434E12, 43261.0], [1.66094622E12, 54168.0], [1.6609422E12, 39846.5], [1.6609464E12, 54326.0], [1.66093998E12, 19033.5], [1.660941E12, 34244.0], [1.66094538E12, 49337.0], [1.66094322E12, 44693.5], [1.66094658E12, 53203.5], [1.6609398E12, 15713.0], [1.66094202E12, 32451.0], [1.66094424E12, 47757.0], [1.66094406E12, 45920.0], [1.66094556E12, 54202.0], [1.66094082E12, 33388.0], [1.66094304E12, 39496.0], [1.66094286E12, 38763.0], [1.66093962E12, 13144.0], [1.66094184E12, 33475.0], [1.66094454E12, 48789.0], [1.66094676E12, 53167.0], [1.66094472E12, 50178.0], [1.66094166E12, 31261.0], [1.66094388E12, 45184.0], [1.66094064E12, 31746.0], [1.66094574E12, 49328.0], [1.66094592E12, 55005.0], [1.66094046E12, 28856.0], [1.66094268E12, 42299.0], [1.66094694E12, 57060.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66094706E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 12884.0, "minX": 1.0, "maxY": 51395.0, "series": [{"data": [[8.0, 13695.0], [4.0, 33288.5], [2.0, 47815.5], [1.0, 51395.0], [9.0, 12902.0], [10.0, 12884.0], [5.0, 26679.0], [11.0, 13285.0], [3.0, 36977.0], [6.0, 17827.0], [7.0, 15199.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 12884.0, "minX": 1.0, "maxY": 51395.0, "series": [{"data": [[8.0, 13695.0], [4.0, 33288.5], [2.0, 47815.5], [1.0, 51395.0], [9.0, 12902.0], [10.0, 12884.0], [5.0, 26679.0], [11.0, 13285.0], [3.0, 36977.0], [6.0, 17827.0], [7.0, 15199.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 11.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.66093956E12, "maxY": 7.416666666666667, "series": [{"data": [[1.66094148E12, 3.2], [1.6609449E12, 1.9166666666666667], [1.6609437E12, 2.316666666666667], [1.66094028E12, 3.8666666666666667], [1.6609461E12, 1.9], [1.6609425E12, 2.783333333333333], [1.66094508E12, 1.8833333333333333], [1.6609413E12, 3.0], [1.66094352E12, 2.3333333333333335], [1.6609401E12, 4.35], [1.66094334E12, 2.3666666666666667], [1.66094628E12, 1.9833333333333334], [1.66094232E12, 2.566666666666667], [1.66094214E12, 2.9166666666666665], [1.66094436E12, 2.1166666666666667], [1.66094112E12, 2.9166666666666665], [1.66094526E12, 1.9833333333333334], [1.66094544E12, 1.8833333333333333], [1.66094094E12, 2.7666666666666666], [1.66094316E12, 2.216666666666667], [1.66093992E12, 5.2], [1.66094646E12, 1.8666666666666667], [1.66094196E12, 3.0833333333333335], [1.66094442E12, 1.9833333333333334], [1.66094664E12, 1.9166666666666667], [1.66093974E12, 6.866666666666666], [1.66094418E12, 2.066666666666667], [1.66094076E12, 3.0166666666666666], [1.66094562E12, 1.8666666666666667], [1.66094298E12, 2.6], [1.66094682E12, 1.7666666666666666], [1.6609446E12, 1.9333333333333333], [1.66093956E12, 3.25], [1.66094178E12, 3.1666666666666665], [1.660944E12, 2.2333333333333334], [1.66094382E12, 2.3333333333333335], [1.6609458E12, 1.9], [1.66094058E12, 3.183333333333333], [1.6609428E12, 2.6166666666666667], [1.66094262E12, 2.683333333333333], [1.6609416E12, 3.2333333333333334], [1.66094478E12, 2.05], [1.660947E12, 0.55], [1.66094496E12, 1.9166666666666667], [1.66094142E12, 3.0833333333333335], [1.66094364E12, 2.3333333333333335], [1.6609404E12, 3.566666666666667], [1.66094598E12, 2.0], [1.66094616E12, 1.8], [1.66094022E12, 2.0833333333333335], [1.66094244E12, 2.8666666666666667], [1.66094124E12, 2.7333333333333334], [1.66094514E12, 1.8666666666666667], [1.66094346E12, 2.3666666666666667], [1.66094634E12, 1.8166666666666667], [1.66094004E12, 4.6], [1.66094226E12, 1.7833333333333334], [1.6609443E12, 2.2333333333333334], [1.66094532E12, 1.9666666666666666], [1.66094106E12, 2.9], [1.66094328E12, 2.433333333333333], [1.6609431E12, 2.55], [1.66093986E12, 5.833333333333333], [1.66094208E12, 2.8666666666666667], [1.66094652E12, 1.9333333333333333], [1.66094448E12, 2.066666666666667], [1.6609419E12, 3.05], [1.66094412E12, 2.2], [1.66094088E12, 3.0166666666666666], [1.6609455E12, 1.9166666666666667], [1.66094568E12, 1.9666666666666666], [1.6609407E12, 2.7333333333333334], [1.66094292E12, 2.3666666666666667], [1.66093968E12, 7.416666666666667], [1.6609467E12, 1.8166666666666667], [1.66094172E12, 3.1666666666666665], [1.66094466E12, 2.033333333333333], [1.66094688E12, 1.8166666666666667], [1.66094394E12, 2.15], [1.66094052E12, 3.2666666666666666], [1.66094586E12, 1.9333333333333333], [1.66094274E12, 2.65], [1.66094484E12, 1.9333333333333333], [1.66094154E12, 3.15], [1.66094376E12, 2.3333333333333335], [1.66094358E12, 2.3333333333333335], [1.66094604E12, 1.95], [1.66094034E12, 3.9], [1.66094256E12, 2.783333333333333], [1.66094238E12, 2.933333333333333], [1.66094136E12, 3.15], [1.66094502E12, 1.95], [1.6609452E12, 2.0], [1.66094118E12, 2.9], [1.66094016E12, 3.966666666666667], [1.6609434E12, 2.3], [1.66094622E12, 1.7166666666666666], [1.6609422E12, 2.533333333333333], [1.6609464E12, 1.9333333333333333], [1.66093998E12, 5.133333333333334], [1.660941E12, 2.95], [1.66094538E12, 2.05], [1.66094322E12, 2.433333333333333], [1.66094658E12, 1.8333333333333333], [1.6609398E12, 6.4], [1.66094202E12, 3.1], [1.66094424E12, 2.1166666666666667], [1.66094406E12, 2.15], [1.66094556E12, 1.8166666666666667], [1.66094082E12, 2.966666666666667], [1.66094304E12, 2.4833333333333334], [1.66094286E12, 2.6166666666666667], [1.66093962E12, 7.416666666666667], [1.66094184E12, 2.8833333333333333], [1.66094454E12, 2.0166666666666666], [1.66094676E12, 1.9666666666666666], [1.66094472E12, 1.95], [1.66094166E12, 3.183333333333333], [1.66094388E12, 2.183333333333333], [1.66094064E12, 3.0], [1.66094574E12, 1.9833333333333334], [1.66094592E12, 1.7333333333333334], [1.66094046E12, 3.3833333333333333], [1.66094268E12, 2.3833333333333333], [1.66094694E12, 1.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.660947E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.66093956E12, "maxY": 7.416666666666667, "series": [{"data": [[1.66094148E12, 3.2], [1.6609449E12, 1.9166666666666667], [1.6609437E12, 2.316666666666667], [1.66094028E12, 3.8666666666666667], [1.6609461E12, 1.9], [1.6609425E12, 2.783333333333333], [1.66094508E12, 1.8833333333333333], [1.6609413E12, 3.0], [1.66094352E12, 2.3333333333333335], [1.6609401E12, 4.35], [1.66094334E12, 2.3666666666666667], [1.66094628E12, 1.9833333333333334], [1.66094232E12, 2.566666666666667], [1.66094214E12, 2.9166666666666665], [1.66094436E12, 2.1166666666666667], [1.66094112E12, 2.9166666666666665], [1.66094526E12, 1.9833333333333334], [1.66094544E12, 1.8833333333333333], [1.66094094E12, 2.7666666666666666], [1.66094316E12, 2.216666666666667], [1.66093992E12, 5.2], [1.66094646E12, 1.8666666666666667], [1.66094196E12, 3.0833333333333335], [1.66094442E12, 1.9833333333333334], [1.66094664E12, 1.9166666666666667], [1.66093974E12, 6.866666666666666], [1.66094418E12, 2.066666666666667], [1.66094076E12, 3.0166666666666666], [1.66094562E12, 1.8666666666666667], [1.66094298E12, 2.6], [1.66094682E12, 1.7666666666666666], [1.6609446E12, 1.9333333333333333], [1.66093956E12, 1.5833333333333333], [1.66094178E12, 3.1666666666666665], [1.660944E12, 2.2333333333333334], [1.66094382E12, 2.3333333333333335], [1.6609458E12, 1.9], [1.66094058E12, 3.183333333333333], [1.6609428E12, 2.6166666666666667], [1.66094262E12, 2.683333333333333], [1.6609416E12, 3.2333333333333334], [1.66094478E12, 2.05], [1.660947E12, 1.85], [1.66094496E12, 1.9166666666666667], [1.66094142E12, 3.0833333333333335], [1.66094364E12, 2.3333333333333335], [1.6609404E12, 3.566666666666667], [1.66094598E12, 2.0], [1.66094616E12, 1.8], [1.66094022E12, 2.0833333333333335], [1.66094244E12, 2.8666666666666667], [1.66094124E12, 2.7333333333333334], [1.66094514E12, 1.8666666666666667], [1.66094346E12, 2.3666666666666667], [1.66094634E12, 1.8166666666666667], [1.66094004E12, 4.6], [1.66094226E12, 1.7833333333333334], [1.6609443E12, 2.2333333333333334], [1.66094532E12, 1.9666666666666666], [1.66094106E12, 2.9], [1.66094328E12, 2.433333333333333], [1.6609431E12, 2.55], [1.66093986E12, 5.833333333333333], [1.66094208E12, 2.8666666666666667], [1.66094652E12, 1.9333333333333333], [1.66094448E12, 2.066666666666667], [1.6609419E12, 3.05], [1.66094412E12, 2.2], [1.66094088E12, 3.0166666666666666], [1.6609455E12, 1.9166666666666667], [1.66094568E12, 1.9666666666666666], [1.6609407E12, 2.7333333333333334], [1.66094292E12, 2.3666666666666667], [1.66093968E12, 7.416666666666667], [1.6609467E12, 1.8166666666666667], [1.66094172E12, 3.1666666666666665], [1.66094466E12, 2.033333333333333], [1.66094688E12, 1.8166666666666667], [1.66094394E12, 2.15], [1.66094052E12, 3.2666666666666666], [1.66094586E12, 1.9333333333333333], [1.66094274E12, 2.65], [1.66094706E12, 0.3333333333333333], [1.66094484E12, 1.9333333333333333], [1.66094154E12, 3.15], [1.66094376E12, 2.3333333333333335], [1.66094358E12, 2.3333333333333335], [1.66094604E12, 1.95], [1.66094034E12, 3.9], [1.66094256E12, 2.783333333333333], [1.66094238E12, 2.933333333333333], [1.66094136E12, 3.15], [1.66094502E12, 1.95], [1.6609452E12, 2.0], [1.66094118E12, 2.9], [1.66094016E12, 3.966666666666667], [1.6609434E12, 2.3], [1.66094622E12, 1.7166666666666666], [1.6609422E12, 2.533333333333333], [1.6609464E12, 1.9333333333333333], [1.66093998E12, 5.133333333333334], [1.660941E12, 2.95], [1.66094538E12, 2.05], [1.66094322E12, 2.433333333333333], [1.66094658E12, 1.8333333333333333], [1.6609398E12, 6.4], [1.66094202E12, 3.1], [1.66094424E12, 2.1166666666666667], [1.66094406E12, 2.15], [1.66094556E12, 1.8166666666666667], [1.66094082E12, 2.966666666666667], [1.66094304E12, 2.4833333333333334], [1.66094286E12, 2.6166666666666667], [1.66093962E12, 7.416666666666667], [1.66094184E12, 2.8833333333333333], [1.66094454E12, 2.0166666666666666], [1.66094676E12, 1.9666666666666666], [1.66094472E12, 1.95], [1.66094166E12, 3.183333333333333], [1.66094388E12, 2.183333333333333], [1.66094064E12, 3.0], [1.66094574E12, 1.9833333333333334], [1.66094592E12, 1.7333333333333334], [1.66094046E12, 3.3833333333333333], [1.66094268E12, 2.3833333333333333], [1.66094694E12, 1.7333333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66094706E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.66093956E12, "maxY": 7.416666666666667, "series": [{"data": [[1.66094148E12, 3.2], [1.6609449E12, 1.9166666666666667], [1.6609437E12, 2.316666666666667], [1.66094028E12, 3.8666666666666667], [1.6609461E12, 1.9], [1.6609425E12, 2.783333333333333], [1.66094508E12, 1.8833333333333333], [1.6609413E12, 3.0], [1.66094352E12, 2.3333333333333335], [1.6609401E12, 4.35], [1.66094334E12, 2.3666666666666667], [1.66094628E12, 1.9833333333333334], [1.66094232E12, 2.566666666666667], [1.66094214E12, 2.9166666666666665], [1.66094436E12, 2.1166666666666667], [1.66094112E12, 2.9166666666666665], [1.66094526E12, 1.9833333333333334], [1.66094544E12, 1.8833333333333333], [1.66094094E12, 2.7666666666666666], [1.66094316E12, 2.216666666666667], [1.66093992E12, 5.2], [1.66094646E12, 1.8666666666666667], [1.66094196E12, 3.0833333333333335], [1.66094442E12, 1.9833333333333334], [1.66094664E12, 1.9166666666666667], [1.66093974E12, 6.866666666666666], [1.66094418E12, 2.066666666666667], [1.66094076E12, 3.0166666666666666], [1.66094562E12, 1.8666666666666667], [1.66094298E12, 2.6], [1.66094682E12, 1.7666666666666666], [1.6609446E12, 1.9333333333333333], [1.66093956E12, 1.5833333333333333], [1.66094178E12, 3.1666666666666665], [1.660944E12, 2.2333333333333334], [1.66094382E12, 2.3333333333333335], [1.6609458E12, 1.9], [1.66094058E12, 3.183333333333333], [1.6609428E12, 2.6166666666666667], [1.66094262E12, 2.683333333333333], [1.6609416E12, 3.2333333333333334], [1.66094478E12, 2.05], [1.660947E12, 1.85], [1.66094496E12, 1.9166666666666667], [1.66094142E12, 3.0833333333333335], [1.66094364E12, 2.3333333333333335], [1.6609404E12, 3.566666666666667], [1.66094598E12, 2.0], [1.66094616E12, 1.8], [1.66094022E12, 2.0833333333333335], [1.66094244E12, 2.8666666666666667], [1.66094124E12, 2.7333333333333334], [1.66094514E12, 1.8666666666666667], [1.66094346E12, 2.3666666666666667], [1.66094634E12, 1.8166666666666667], [1.66094004E12, 4.6], [1.66094226E12, 1.7833333333333334], [1.6609443E12, 2.2333333333333334], [1.66094532E12, 1.9666666666666666], [1.66094106E12, 2.9], [1.66094328E12, 2.433333333333333], [1.6609431E12, 2.55], [1.66093986E12, 5.833333333333333], [1.66094208E12, 2.8666666666666667], [1.66094652E12, 1.9333333333333333], [1.66094448E12, 2.066666666666667], [1.6609419E12, 3.05], [1.66094412E12, 2.2], [1.66094088E12, 3.0166666666666666], [1.6609455E12, 1.9166666666666667], [1.66094568E12, 1.9666666666666666], [1.6609407E12, 2.7333333333333334], [1.66094292E12, 2.3666666666666667], [1.66093968E12, 7.416666666666667], [1.6609467E12, 1.8166666666666667], [1.66094172E12, 3.1666666666666665], [1.66094466E12, 2.033333333333333], [1.66094688E12, 1.8166666666666667], [1.66094394E12, 2.15], [1.66094052E12, 3.2666666666666666], [1.66094586E12, 1.9333333333333333], [1.66094274E12, 2.65], [1.66094706E12, 0.3333333333333333], [1.66094484E12, 1.9333333333333333], [1.66094154E12, 3.15], [1.66094376E12, 2.3333333333333335], [1.66094358E12, 2.3333333333333335], [1.66094604E12, 1.95], [1.66094034E12, 3.9], [1.66094256E12, 2.783333333333333], [1.66094238E12, 2.933333333333333], [1.66094136E12, 3.15], [1.66094502E12, 1.95], [1.6609452E12, 2.0], [1.66094118E12, 2.9], [1.66094016E12, 3.966666666666667], [1.6609434E12, 2.3], [1.66094622E12, 1.7166666666666666], [1.6609422E12, 2.533333333333333], [1.6609464E12, 1.9333333333333333], [1.66093998E12, 5.133333333333334], [1.660941E12, 2.95], [1.66094538E12, 2.05], [1.66094322E12, 2.433333333333333], [1.66094658E12, 1.8333333333333333], [1.6609398E12, 6.4], [1.66094202E12, 3.1], [1.66094424E12, 2.1166666666666667], [1.66094406E12, 2.15], [1.66094556E12, 1.8166666666666667], [1.66094082E12, 2.966666666666667], [1.66094304E12, 2.4833333333333334], [1.66094286E12, 2.6166666666666667], [1.66093962E12, 7.416666666666667], [1.66094184E12, 2.8833333333333333], [1.66094454E12, 2.0166666666666666], [1.66094676E12, 1.9666666666666666], [1.66094472E12, 1.95], [1.66094166E12, 3.183333333333333], [1.66094388E12, 2.183333333333333], [1.66094064E12, 3.0], [1.66094574E12, 1.9833333333333334], [1.66094592E12, 1.7333333333333334], [1.66094046E12, 3.3833333333333333], [1.66094268E12, 2.3833333333333333], [1.66094694E12, 1.7333333333333334]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66094706E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.66093956E12, "maxY": 7.416666666666667, "series": [{"data": [[1.66094148E12, 3.2], [1.6609449E12, 1.9166666666666667], [1.6609437E12, 2.316666666666667], [1.66094028E12, 3.8666666666666667], [1.6609461E12, 1.9], [1.6609425E12, 2.783333333333333], [1.66094508E12, 1.8833333333333333], [1.6609413E12, 3.0], [1.66094352E12, 2.3333333333333335], [1.6609401E12, 4.35], [1.66094334E12, 2.3666666666666667], [1.66094628E12, 1.9833333333333334], [1.66094232E12, 2.566666666666667], [1.66094214E12, 2.9166666666666665], [1.66094436E12, 2.1166666666666667], [1.66094112E12, 2.9166666666666665], [1.66094526E12, 1.9833333333333334], [1.66094544E12, 1.8833333333333333], [1.66094094E12, 2.7666666666666666], [1.66094316E12, 2.216666666666667], [1.66093992E12, 5.2], [1.66094646E12, 1.8666666666666667], [1.66094196E12, 3.0833333333333335], [1.66094442E12, 1.9833333333333334], [1.66094664E12, 1.9166666666666667], [1.66093974E12, 6.866666666666666], [1.66094418E12, 2.066666666666667], [1.66094076E12, 3.0166666666666666], [1.66094562E12, 1.8666666666666667], [1.66094298E12, 2.6], [1.66094682E12, 1.7666666666666666], [1.6609446E12, 1.9333333333333333], [1.66093956E12, 1.5833333333333333], [1.66094178E12, 3.1666666666666665], [1.660944E12, 2.2333333333333334], [1.66094382E12, 2.3333333333333335], [1.6609458E12, 1.9], [1.66094058E12, 3.183333333333333], [1.6609428E12, 2.6166666666666667], [1.66094262E12, 2.683333333333333], [1.6609416E12, 3.2333333333333334], [1.66094478E12, 2.05], [1.660947E12, 1.85], [1.66094496E12, 1.9166666666666667], [1.66094142E12, 3.0833333333333335], [1.66094364E12, 2.3333333333333335], [1.6609404E12, 3.566666666666667], [1.66094598E12, 2.0], [1.66094616E12, 1.8], [1.66094022E12, 2.0833333333333335], [1.66094244E12, 2.8666666666666667], [1.66094124E12, 2.7333333333333334], [1.66094514E12, 1.8666666666666667], [1.66094346E12, 2.3666666666666667], [1.66094634E12, 1.8166666666666667], [1.66094004E12, 4.6], [1.66094226E12, 1.7833333333333334], [1.6609443E12, 2.2333333333333334], [1.66094532E12, 1.9666666666666666], [1.66094106E12, 2.9], [1.66094328E12, 2.433333333333333], [1.6609431E12, 2.55], [1.66093986E12, 5.833333333333333], [1.66094208E12, 2.8666666666666667], [1.66094652E12, 1.9333333333333333], [1.66094448E12, 2.066666666666667], [1.6609419E12, 3.05], [1.66094412E12, 2.2], [1.66094088E12, 3.0166666666666666], [1.6609455E12, 1.9166666666666667], [1.66094568E12, 1.9666666666666666], [1.6609407E12, 2.7333333333333334], [1.66094292E12, 2.3666666666666667], [1.66093968E12, 7.416666666666667], [1.6609467E12, 1.8166666666666667], [1.66094172E12, 3.1666666666666665], [1.66094466E12, 2.033333333333333], [1.66094688E12, 1.8166666666666667], [1.66094394E12, 2.15], [1.66094052E12, 3.2666666666666666], [1.66094586E12, 1.9333333333333333], [1.66094274E12, 2.65], [1.66094706E12, 0.3333333333333333], [1.66094484E12, 1.9333333333333333], [1.66094154E12, 3.15], [1.66094376E12, 2.3333333333333335], [1.66094358E12, 2.3333333333333335], [1.66094604E12, 1.95], [1.66094034E12, 3.9], [1.66094256E12, 2.783333333333333], [1.66094238E12, 2.933333333333333], [1.66094136E12, 3.15], [1.66094502E12, 1.95], [1.6609452E12, 2.0], [1.66094118E12, 2.9], [1.66094016E12, 3.966666666666667], [1.6609434E12, 2.3], [1.66094622E12, 1.7166666666666666], [1.6609422E12, 2.533333333333333], [1.6609464E12, 1.9333333333333333], [1.66093998E12, 5.133333333333334], [1.660941E12, 2.95], [1.66094538E12, 2.05], [1.66094322E12, 2.433333333333333], [1.66094658E12, 1.8333333333333333], [1.6609398E12, 6.4], [1.66094202E12, 3.1], [1.66094424E12, 2.1166666666666667], [1.66094406E12, 2.15], [1.66094556E12, 1.8166666666666667], [1.66094082E12, 2.966666666666667], [1.66094304E12, 2.4833333333333334], [1.66094286E12, 2.6166666666666667], [1.66093962E12, 7.416666666666667], [1.66094184E12, 2.8833333333333333], [1.66094454E12, 2.0166666666666666], [1.66094676E12, 1.9666666666666666], [1.66094472E12, 1.95], [1.66094166E12, 3.183333333333333], [1.66094388E12, 2.183333333333333], [1.66094064E12, 3.0], [1.66094574E12, 1.9833333333333334], [1.66094592E12, 1.7333333333333334], [1.66094046E12, 3.3833333333333333], [1.66094268E12, 2.3833333333333333], [1.66094694E12, 1.7333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66094706E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

