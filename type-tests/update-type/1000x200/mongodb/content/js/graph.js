/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 20520.0, "series": [{"data": [[0.0, 15.0], [0.1, 231.0], [0.2, 368.0], [0.3, 503.0], [0.4, 700.0], [0.5, 833.0], [0.6, 967.0], [0.7, 1013.0], [0.8, 1064.0], [0.9, 1111.0], [1.0, 1155.0], [1.1, 1201.0], [1.2, 1230.0], [1.3, 1247.0], [1.4, 1265.0], [1.5, 1278.0], [1.6, 1289.0], [1.7, 1298.0], [1.8, 1306.0], [1.9, 1314.0], [2.0, 1321.0], [2.1, 1328.0], [2.2, 1334.0], [2.3, 1339.0], [2.4, 1344.0], [2.5, 1350.0], [2.6, 1355.0], [2.7, 1360.0], [2.8, 1365.0], [2.9, 1370.0], [3.0, 1374.0], [3.1, 1377.0], [3.2, 1381.0], [3.3, 1385.0], [3.4, 1389.0], [3.5, 1393.0], [3.6, 1397.0], [3.7, 1400.0], [3.8, 1404.0], [3.9, 1407.0], [4.0, 1411.0], [4.1, 1414.0], [4.2, 1418.0], [4.3, 1421.0], [4.4, 1424.0], [4.5, 1427.0], [4.6, 1430.0], [4.7, 1433.0], [4.8, 1436.0], [4.9, 1439.0], [5.0, 1442.0], [5.1, 1444.0], [5.2, 1447.0], [5.3, 1450.0], [5.4, 1452.0], [5.5, 1455.0], [5.6, 1457.0], [5.7, 1460.0], [5.8, 1462.0], [5.9, 1464.0], [6.0, 1467.0], [6.1, 1469.0], [6.2, 1471.0], [6.3, 1473.0], [6.4, 1476.0], [6.5, 1478.0], [6.6, 1480.0], [6.7, 1482.0], [6.8, 1484.0], [6.9, 1485.0], [7.0, 1488.0], [7.1, 1490.0], [7.2, 1492.0], [7.3, 1494.0], [7.4, 1496.0], [7.5, 1497.0], [7.6, 1499.0], [7.7, 1501.0], [7.8, 1503.0], [7.9, 1505.0], [8.0, 1506.0], [8.1, 1508.0], [8.2, 1510.0], [8.3, 1512.0], [8.4, 1513.0], [8.5, 1515.0], [8.6, 1516.0], [8.7, 1518.0], [8.8, 1520.0], [8.9, 1521.0], [9.0, 1523.0], [9.1, 1524.0], [9.2, 1526.0], [9.3, 1527.0], [9.4, 1529.0], [9.5, 1531.0], [9.6, 1533.0], [9.7, 1534.0], [9.8, 1536.0], [9.9, 1537.0], [10.0, 1539.0], [10.1, 1540.0], [10.2, 1542.0], [10.3, 1543.0], [10.4, 1545.0], [10.5, 1546.0], [10.6, 1548.0], [10.7, 1549.0], [10.8, 1551.0], [10.9, 1552.0], [11.0, 1554.0], [11.1, 1555.0], [11.2, 1557.0], [11.3, 1558.0], [11.4, 1560.0], [11.5, 1561.0], [11.6, 1562.0], [11.7, 1564.0], [11.8, 1565.0], [11.9, 1566.0], [12.0, 1568.0], [12.1, 1569.0], [12.2, 1571.0], [12.3, 1572.0], [12.4, 1573.0], [12.5, 1575.0], [12.6, 1576.0], [12.7, 1578.0], [12.8, 1579.0], [12.9, 1580.0], [13.0, 1581.0], [13.1, 1583.0], [13.2, 1584.0], [13.3, 1585.0], [13.4, 1587.0], [13.5, 1588.0], [13.6, 1589.0], [13.7, 1591.0], [13.8, 1592.0], [13.9, 1594.0], [14.0, 1595.0], [14.1, 1596.0], [14.2, 1598.0], [14.3, 1599.0], [14.4, 1600.0], [14.5, 1602.0], [14.6, 1603.0], [14.7, 1605.0], [14.8, 1606.0], [14.9, 1607.0], [15.0, 1609.0], [15.1, 1610.0], [15.2, 1612.0], [15.3, 1613.0], [15.4, 1615.0], [15.5, 1616.0], [15.6, 1617.0], [15.7, 1619.0], [15.8, 1620.0], [15.9, 1621.0], [16.0, 1623.0], [16.1, 1624.0], [16.2, 1625.0], [16.3, 1627.0], [16.4, 1628.0], [16.5, 1630.0], [16.6, 1631.0], [16.7, 1632.0], [16.8, 1634.0], [16.9, 1635.0], [17.0, 1637.0], [17.1, 1638.0], [17.2, 1639.0], [17.3, 1641.0], [17.4, 1642.0], [17.5, 1643.0], [17.6, 1645.0], [17.7, 1646.0], [17.8, 1648.0], [17.9, 1649.0], [18.0, 1650.0], [18.1, 1652.0], [18.2, 1653.0], [18.3, 1655.0], [18.4, 1656.0], [18.5, 1657.0], [18.6, 1658.0], [18.7, 1660.0], [18.8, 1661.0], [18.9, 1662.0], [19.0, 1664.0], [19.1, 1665.0], [19.2, 1666.0], [19.3, 1668.0], [19.4, 1669.0], [19.5, 1670.0], [19.6, 1671.0], [19.7, 1673.0], [19.8, 1674.0], [19.9, 1675.0], [20.0, 1677.0], [20.1, 1679.0], [20.2, 1680.0], [20.3, 1681.0], [20.4, 1683.0], [20.5, 1684.0], [20.6, 1685.0], [20.7, 1687.0], [20.8, 1688.0], [20.9, 1689.0], [21.0, 1691.0], [21.1, 1692.0], [21.2, 1694.0], [21.3, 1695.0], [21.4, 1697.0], [21.5, 1698.0], [21.6, 1700.0], [21.7, 1701.0], [21.8, 1703.0], [21.9, 1704.0], [22.0, 1706.0], [22.1, 1707.0], [22.2, 1709.0], [22.3, 1710.0], [22.4, 1711.0], [22.5, 1713.0], [22.6, 1714.0], [22.7, 1716.0], [22.8, 1717.0], [22.9, 1718.0], [23.0, 1720.0], [23.1, 1721.0], [23.2, 1723.0], [23.3, 1725.0], [23.4, 1726.0], [23.5, 1728.0], [23.6, 1729.0], [23.7, 1730.0], [23.8, 1732.0], [23.9, 1734.0], [24.0, 1735.0], [24.1, 1736.0], [24.2, 1738.0], [24.3, 1739.0], [24.4, 1741.0], [24.5, 1742.0], [24.6, 1744.0], [24.7, 1746.0], [24.8, 1747.0], [24.9, 1749.0], [25.0, 1750.0], [25.1, 1752.0], [25.2, 1753.0], [25.3, 1755.0], [25.4, 1757.0], [25.5, 1759.0], [25.6, 1760.0], [25.7, 1761.0], [25.8, 1763.0], [25.9, 1765.0], [26.0, 1766.0], [26.1, 1768.0], [26.2, 1770.0], [26.3, 1771.0], [26.4, 1773.0], [26.5, 1775.0], [26.6, 1776.0], [26.7, 1778.0], [26.8, 1780.0], [26.9, 1781.0], [27.0, 1783.0], [27.1, 1785.0], [27.2, 1787.0], [27.3, 1788.0], [27.4, 1790.0], [27.5, 1792.0], [27.6, 1793.0], [27.7, 1795.0], [27.8, 1797.0], [27.9, 1798.0], [28.0, 1800.0], [28.1, 1801.0], [28.2, 1803.0], [28.3, 1805.0], [28.4, 1807.0], [28.5, 1808.0], [28.6, 1810.0], [28.7, 1811.0], [28.8, 1813.0], [28.9, 1815.0], [29.0, 1817.0], [29.1, 1818.0], [29.2, 1820.0], [29.3, 1822.0], [29.4, 1823.0], [29.5, 1825.0], [29.6, 1827.0], [29.7, 1828.0], [29.8, 1830.0], [29.9, 1832.0], [30.0, 1833.0], [30.1, 1835.0], [30.2, 1836.0], [30.3, 1838.0], [30.4, 1840.0], [30.5, 1841.0], [30.6, 1843.0], [30.7, 1844.0], [30.8, 1846.0], [30.9, 1847.0], [31.0, 1849.0], [31.1, 1850.0], [31.2, 1852.0], [31.3, 1853.0], [31.4, 1855.0], [31.5, 1856.0], [31.6, 1858.0], [31.7, 1860.0], [31.8, 1861.0], [31.9, 1863.0], [32.0, 1864.0], [32.1, 1866.0], [32.2, 1867.0], [32.3, 1869.0], [32.4, 1870.0], [32.5, 1872.0], [32.6, 1873.0], [32.7, 1875.0], [32.8, 1876.0], [32.9, 1878.0], [33.0, 1879.0], [33.1, 1881.0], [33.2, 1882.0], [33.3, 1883.0], [33.4, 1884.0], [33.5, 1886.0], [33.6, 1887.0], [33.7, 1889.0], [33.8, 1890.0], [33.9, 1892.0], [34.0, 1893.0], [34.1, 1895.0], [34.2, 1896.0], [34.3, 1898.0], [34.4, 1899.0], [34.5, 1901.0], [34.6, 1902.0], [34.7, 1904.0], [34.8, 1905.0], [34.9, 1906.0], [35.0, 1908.0], [35.1, 1909.0], [35.2, 1911.0], [35.3, 1912.0], [35.4, 1914.0], [35.5, 1915.0], [35.6, 1917.0], [35.7, 1918.0], [35.8, 1920.0], [35.9, 1921.0], [36.0, 1923.0], [36.1, 1924.0], [36.2, 1925.0], [36.3, 1927.0], [36.4, 1928.0], [36.5, 1930.0], [36.6, 1931.0], [36.7, 1932.0], [36.8, 1934.0], [36.9, 1935.0], [37.0, 1936.0], [37.1, 1938.0], [37.2, 1939.0], [37.3, 1940.0], [37.4, 1942.0], [37.5, 1943.0], [37.6, 1944.0], [37.7, 1946.0], [37.8, 1947.0], [37.9, 1949.0], [38.0, 1950.0], [38.1, 1951.0], [38.2, 1953.0], [38.3, 1954.0], [38.4, 1955.0], [38.5, 1956.0], [38.6, 1958.0], [38.7, 1959.0], [38.8, 1961.0], [38.9, 1962.0], [39.0, 1963.0], [39.1, 1965.0], [39.2, 1966.0], [39.3, 1967.0], [39.4, 1969.0], [39.5, 1970.0], [39.6, 1971.0], [39.7, 1972.0], [39.8, 1974.0], [39.9, 1975.0], [40.0, 1976.0], [40.1, 1978.0], [40.2, 1979.0], [40.3, 1980.0], [40.4, 1981.0], [40.5, 1983.0], [40.6, 1984.0], [40.7, 1985.0], [40.8, 1987.0], [40.9, 1988.0], [41.0, 1989.0], [41.1, 1990.0], [41.2, 1992.0], [41.3, 1993.0], [41.4, 1994.0], [41.5, 1996.0], [41.6, 1997.0], [41.7, 1998.0], [41.8, 2000.0], [41.9, 2001.0], [42.0, 2002.0], [42.1, 2004.0], [42.2, 2005.0], [42.3, 2006.0], [42.4, 2008.0], [42.5, 2009.0], [42.6, 2011.0], [42.7, 2012.0], [42.8, 2013.0], [42.9, 2015.0], [43.0, 2016.0], [43.1, 2017.0], [43.2, 2019.0], [43.3, 2020.0], [43.4, 2021.0], [43.5, 2023.0], [43.6, 2024.0], [43.7, 2025.0], [43.8, 2027.0], [43.9, 2028.0], [44.0, 2029.0], [44.1, 2031.0], [44.2, 2032.0], [44.3, 2033.0], [44.4, 2035.0], [44.5, 2036.0], [44.6, 2038.0], [44.7, 2039.0], [44.8, 2040.0], [44.9, 2041.0], [45.0, 2042.0], [45.1, 2044.0], [45.2, 2045.0], [45.3, 2046.0], [45.4, 2048.0], [45.5, 2049.0], [45.6, 2051.0], [45.7, 2052.0], [45.8, 2053.0], [45.9, 2054.0], [46.0, 2056.0], [46.1, 2057.0], [46.2, 2058.0], [46.3, 2059.0], [46.4, 2060.0], [46.5, 2062.0], [46.6, 2063.0], [46.7, 2064.0], [46.8, 2065.0], [46.9, 2066.0], [47.0, 2068.0], [47.1, 2069.0], [47.2, 2070.0], [47.3, 2071.0], [47.4, 2073.0], [47.5, 2074.0], [47.6, 2075.0], [47.7, 2077.0], [47.8, 2078.0], [47.9, 2079.0], [48.0, 2080.0], [48.1, 2081.0], [48.2, 2083.0], [48.3, 2084.0], [48.4, 2085.0], [48.5, 2086.0], [48.6, 2087.0], [48.7, 2088.0], [48.8, 2090.0], [48.9, 2091.0], [49.0, 2092.0], [49.1, 2094.0], [49.2, 2095.0], [49.3, 2096.0], [49.4, 2097.0], [49.5, 2098.0], [49.6, 2100.0], [49.7, 2101.0], [49.8, 2102.0], [49.9, 2103.0], [50.0, 2104.0], [50.1, 2106.0], [50.2, 2107.0], [50.3, 2108.0], [50.4, 2109.0], [50.5, 2111.0], [50.6, 2112.0], [50.7, 2113.0], [50.8, 2114.0], [50.9, 2116.0], [51.0, 2117.0], [51.1, 2118.0], [51.2, 2119.0], [51.3, 2120.0], [51.4, 2121.0], [51.5, 2123.0], [51.6, 2124.0], [51.7, 2125.0], [51.8, 2126.0], [51.9, 2128.0], [52.0, 2129.0], [52.1, 2131.0], [52.2, 2132.0], [52.3, 2133.0], [52.4, 2135.0], [52.5, 2136.0], [52.6, 2137.0], [52.7, 2139.0], [52.8, 2140.0], [52.9, 2141.0], [53.0, 2143.0], [53.1, 2144.0], [53.2, 2145.0], [53.3, 2147.0], [53.4, 2148.0], [53.5, 2149.0], [53.6, 2151.0], [53.7, 2152.0], [53.8, 2154.0], [53.9, 2155.0], [54.0, 2156.0], [54.1, 2157.0], [54.2, 2159.0], [54.3, 2160.0], [54.4, 2161.0], [54.5, 2163.0], [54.6, 2164.0], [54.7, 2166.0], [54.8, 2167.0], [54.9, 2169.0], [55.0, 2170.0], [55.1, 2171.0], [55.2, 2173.0], [55.3, 2174.0], [55.4, 2176.0], [55.5, 2177.0], [55.6, 2179.0], [55.7, 2180.0], [55.8, 2181.0], [55.9, 2183.0], [56.0, 2184.0], [56.1, 2186.0], [56.2, 2187.0], [56.3, 2188.0], [56.4, 2190.0], [56.5, 2191.0], [56.6, 2193.0], [56.7, 2194.0], [56.8, 2196.0], [56.9, 2198.0], [57.0, 2199.0], [57.1, 2200.0], [57.2, 2202.0], [57.3, 2203.0], [57.4, 2205.0], [57.5, 2206.0], [57.6, 2208.0], [57.7, 2209.0], [57.8, 2211.0], [57.9, 2212.0], [58.0, 2214.0], [58.1, 2215.0], [58.2, 2217.0], [58.3, 2219.0], [58.4, 2220.0], [58.5, 2222.0], [58.6, 2223.0], [58.7, 2224.0], [58.8, 2226.0], [58.9, 2227.0], [59.0, 2229.0], [59.1, 2230.0], [59.2, 2232.0], [59.3, 2234.0], [59.4, 2235.0], [59.5, 2237.0], [59.6, 2239.0], [59.7, 2240.0], [59.8, 2242.0], [59.9, 2243.0], [60.0, 2245.0], [60.1, 2247.0], [60.2, 2248.0], [60.3, 2250.0], [60.4, 2252.0], [60.5, 2253.0], [60.6, 2255.0], [60.7, 2256.0], [60.8, 2258.0], [60.9, 2259.0], [61.0, 2261.0], [61.1, 2263.0], [61.2, 2264.0], [61.3, 2266.0], [61.4, 2268.0], [61.5, 2270.0], [61.6, 2271.0], [61.7, 2273.0], [61.8, 2275.0], [61.9, 2277.0], [62.0, 2278.0], [62.1, 2280.0], [62.2, 2282.0], [62.3, 2284.0], [62.4, 2286.0], [62.5, 2287.0], [62.6, 2289.0], [62.7, 2291.0], [62.8, 2293.0], [62.9, 2295.0], [63.0, 2297.0], [63.1, 2300.0], [63.2, 2302.0], [63.3, 2303.0], [63.4, 2305.0], [63.5, 2307.0], [63.6, 2309.0], [63.7, 2311.0], [63.8, 2314.0], [63.9, 2316.0], [64.0, 2318.0], [64.1, 2320.0], [64.2, 2322.0], [64.3, 2324.0], [64.4, 2326.0], [64.5, 2328.0], [64.6, 2331.0], [64.7, 2333.0], [64.8, 2335.0], [64.9, 2337.0], [65.0, 2339.0], [65.1, 2340.0], [65.2, 2343.0], [65.3, 2345.0], [65.4, 2347.0], [65.5, 2350.0], [65.6, 2352.0], [65.7, 2355.0], [65.8, 2357.0], [65.9, 2359.0], [66.0, 2361.0], [66.1, 2364.0], [66.2, 2366.0], [66.3, 2368.0], [66.4, 2370.0], [66.5, 2372.0], [66.6, 2375.0], [66.7, 2377.0], [66.8, 2379.0], [66.9, 2381.0], [67.0, 2383.0], [67.1, 2385.0], [67.2, 2387.0], [67.3, 2389.0], [67.4, 2391.0], [67.5, 2393.0], [67.6, 2395.0], [67.7, 2397.0], [67.8, 2400.0], [67.9, 2401.0], [68.0, 2404.0], [68.1, 2406.0], [68.2, 2408.0], [68.3, 2410.0], [68.4, 2412.0], [68.5, 2415.0], [68.6, 2417.0], [68.7, 2419.0], [68.8, 2422.0], [68.9, 2424.0], [69.0, 2426.0], [69.1, 2428.0], [69.2, 2430.0], [69.3, 2433.0], [69.4, 2435.0], [69.5, 2437.0], [69.6, 2439.0], [69.7, 2442.0], [69.8, 2444.0], [69.9, 2447.0], [70.0, 2449.0], [70.1, 2452.0], [70.2, 2454.0], [70.3, 2456.0], [70.4, 2459.0], [70.5, 2461.0], [70.6, 2463.0], [70.7, 2466.0], [70.8, 2468.0], [70.9, 2470.0], [71.0, 2473.0], [71.1, 2475.0], [71.2, 2478.0], [71.3, 2481.0], [71.4, 2483.0], [71.5, 2486.0], [71.6, 2488.0], [71.7, 2491.0], [71.8, 2494.0], [71.9, 2497.0], [72.0, 2500.0], [72.1, 2503.0], [72.2, 2505.0], [72.3, 2508.0], [72.4, 2511.0], [72.5, 2514.0], [72.6, 2517.0], [72.7, 2520.0], [72.8, 2522.0], [72.9, 2525.0], [73.0, 2528.0], [73.1, 2531.0], [73.2, 2534.0], [73.3, 2537.0], [73.4, 2540.0], [73.5, 2542.0], [73.6, 2545.0], [73.7, 2549.0], [73.8, 2552.0], [73.9, 2555.0], [74.0, 2558.0], [74.1, 2561.0], [74.2, 2565.0], [74.3, 2568.0], [74.4, 2572.0], [74.5, 2576.0], [74.6, 2580.0], [74.7, 2584.0], [74.8, 2588.0], [74.9, 2591.0], [75.0, 2595.0], [75.1, 2599.0], [75.2, 2603.0], [75.3, 2607.0], [75.4, 2611.0], [75.5, 2615.0], [75.6, 2618.0], [75.7, 2622.0], [75.8, 2627.0], [75.9, 2630.0], [76.0, 2634.0], [76.1, 2638.0], [76.2, 2642.0], [76.3, 2646.0], [76.4, 2650.0], [76.5, 2654.0], [76.6, 2659.0], [76.7, 2663.0], [76.8, 2668.0], [76.9, 2672.0], [77.0, 2676.0], [77.1, 2681.0], [77.2, 2685.0], [77.3, 2690.0], [77.4, 2695.0], [77.5, 2699.0], [77.6, 2705.0], [77.7, 2709.0], [77.8, 2714.0], [77.9, 2718.0], [78.0, 2724.0], [78.1, 2729.0], [78.2, 2734.0], [78.3, 2740.0], [78.4, 2746.0], [78.5, 2751.0], [78.6, 2758.0], [78.7, 2764.0], [78.8, 2770.0], [78.9, 2777.0], [79.0, 2783.0], [79.1, 2789.0], [79.2, 2797.0], [79.3, 2804.0], [79.4, 2813.0], [79.5, 2822.0], [79.6, 2830.0], [79.7, 2841.0], [79.8, 2850.0], [79.9, 2860.0], [80.0, 2870.0], [80.1, 2881.0], [80.2, 2891.0], [80.3, 2902.0], [80.4, 2913.0], [80.5, 2924.0], [80.6, 2937.0], [80.7, 2949.0], [80.8, 2961.0], [80.9, 2973.0], [81.0, 2983.0], [81.1, 2997.0], [81.2, 3009.0], [81.3, 3021.0], [81.4, 3033.0], [81.5, 3045.0], [81.6, 3059.0], [81.7, 3073.0], [81.8, 3085.0], [81.9, 3098.0], [82.0, 3111.0], [82.1, 3123.0], [82.2, 3134.0], [82.3, 3145.0], [82.4, 3158.0], [82.5, 3170.0], [82.6, 3181.0], [82.7, 3192.0], [82.8, 3206.0], [82.9, 3219.0], [83.0, 3231.0], [83.1, 3244.0], [83.2, 3256.0], [83.3, 3269.0], [83.4, 3280.0], [83.5, 3292.0], [83.6, 3305.0], [83.7, 3318.0], [83.8, 3331.0], [83.9, 3343.0], [84.0, 3355.0], [84.1, 3369.0], [84.2, 3381.0], [84.3, 3393.0], [84.4, 3406.0], [84.5, 3417.0], [84.6, 3430.0], [84.7, 3444.0], [84.8, 3458.0], [84.9, 3470.0], [85.0, 3482.0], [85.1, 3494.0], [85.2, 3506.0], [85.3, 3518.0], [85.4, 3529.0], [85.5, 3541.0], [85.6, 3555.0], [85.7, 3566.0], [85.8, 3578.0], [85.9, 3591.0], [86.0, 3604.0], [86.1, 3617.0], [86.2, 3632.0], [86.3, 3647.0], [86.4, 3659.0], [86.5, 3669.0], [86.6, 3681.0], [86.7, 3694.0], [86.8, 3708.0], [86.9, 3721.0], [87.0, 3735.0], [87.1, 3747.0], [87.2, 3758.0], [87.3, 3770.0], [87.4, 3781.0], [87.5, 3791.0], [87.6, 3801.0], [87.7, 3811.0], [87.8, 3822.0], [87.9, 3830.0], [88.0, 3840.0], [88.1, 3849.0], [88.2, 3859.0], [88.3, 3869.0], [88.4, 3879.0], [88.5, 3891.0], [88.6, 3904.0], [88.7, 3913.0], [88.8, 3924.0], [88.9, 3936.0], [89.0, 3946.0], [89.1, 3957.0], [89.2, 3967.0], [89.3, 3976.0], [89.4, 3986.0], [89.5, 3996.0], [89.6, 4006.0], [89.7, 4016.0], [89.8, 4026.0], [89.9, 4034.0], [90.0, 4045.0], [90.1, 4056.0], [90.2, 4066.0], [90.3, 4077.0], [90.4, 4088.0], [90.5, 4100.0], [90.6, 4110.0], [90.7, 4122.0], [90.8, 4134.0], [90.9, 4146.0], [91.0, 4160.0], [91.1, 4176.0], [91.2, 4190.0], [91.3, 4208.0], [91.4, 4225.0], [91.5, 4244.0], [91.6, 4262.0], [91.7, 4281.0], [91.8, 4303.0], [91.9, 4322.0], [92.0, 4344.0], [92.1, 4365.0], [92.2, 4385.0], [92.3, 4405.0], [92.4, 4426.0], [92.5, 4446.0], [92.6, 4466.0], [92.7, 4486.0], [92.8, 4503.0], [92.9, 4518.0], [93.0, 4536.0], [93.1, 4553.0], [93.2, 4568.0], [93.3, 4588.0], [93.4, 4613.0], [93.5, 4639.0], [93.6, 4674.0], [93.7, 4714.0], [93.8, 4760.0], [93.9, 4798.0], [94.0, 4837.0], [94.1, 4887.0], [94.2, 4936.0], [94.3, 4982.0], [94.4, 5023.0], [94.5, 5059.0], [94.6, 5102.0], [94.7, 5146.0], [94.8, 5190.0], [94.9, 5249.0], [95.0, 5304.0], [95.1, 5355.0], [95.2, 5421.0], [95.3, 5474.0], [95.4, 5545.0], [95.5, 5616.0], [95.6, 5672.0], [95.7, 5746.0], [95.8, 5836.0], [95.9, 5901.0], [96.0, 5955.0], [96.1, 6015.0], [96.2, 6074.0], [96.3, 6138.0], [96.4, 6192.0], [96.5, 6243.0], [96.6, 6302.0], [96.7, 6360.0], [96.8, 6414.0], [96.9, 6476.0], [97.0, 6550.0], [97.1, 6632.0], [97.2, 6719.0], [97.3, 6803.0], [97.4, 6872.0], [97.5, 6979.0], [97.6, 7118.0], [97.7, 7245.0], [97.8, 7352.0], [97.9, 7469.0], [98.0, 7600.0], [98.1, 7732.0], [98.2, 7862.0], [98.3, 7968.0], [98.4, 8075.0], [98.5, 8175.0], [98.6, 8247.0], [98.7, 8321.0], [98.8, 8427.0], [98.9, 8530.0], [99.0, 8618.0], [99.1, 8754.0], [99.2, 8880.0], [99.3, 9011.0], [99.4, 9150.0], [99.5, 9336.0], [99.6, 9725.0], [99.7, 10575.0], [99.8, 11201.0], [99.9, 13664.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 15606.0, "series": [{"data": [[0.0, 81.0], [100.0, 83.0], [200.0, 115.0], [300.0, 156.0], [400.0, 161.0], [500.0, 92.0], [600.0, 109.0], [700.0, 149.0], [800.0, 133.0], [900.0, 261.0], [1000.0, 405.0], [1100.0, 455.0], [1200.0, 1246.0], [1300.0, 3927.0], [1400.0, 7844.0], [1500.0, 13448.0], [1600.0, 14494.0], [1700.0, 12810.0], [1800.0, 12889.0], [1900.0, 14723.0], [2000.0, 15606.0], [2100.0, 14872.0], [2200.0, 12133.0], [2300.0, 9404.0], [2400.0, 8382.0], [2500.0, 6257.0], [2600.0, 4771.0], [2700.0, 3475.0], [2800.0, 2075.0], [2900.0, 1676.0], [3000.0, 1583.0], [3100.0, 1686.0], [3200.0, 1619.0], [3300.0, 1565.0], [3400.0, 1607.0], [3500.0, 1635.0], [3600.0, 1547.0], [3700.0, 1691.0], [3800.0, 1960.0], [3900.0, 1955.0], [4000.0, 1920.0], [4300.0, 966.0], [4100.0, 1507.0], [4200.0, 1064.0], [4600.0, 642.0], [4400.0, 1014.0], [4500.0, 1138.0], [4800.0, 445.0], [4700.0, 478.0], [5000.0, 497.0], [4900.0, 435.0], [5100.0, 454.0], [5200.0, 340.0], [5300.0, 370.0], [5600.0, 317.0], [5400.0, 337.0], [5500.0, 267.0], [5700.0, 254.0], [5800.0, 270.0], [6000.0, 325.0], [5900.0, 360.0], [6100.0, 353.0], [6300.0, 356.0], [6200.0, 363.0], [6400.0, 317.0], [6600.0, 218.0], [6500.0, 268.0], [6700.0, 236.0], [6800.0, 268.0], [6900.0, 177.0], [7100.0, 135.0], [7000.0, 143.0], [7200.0, 195.0], [7400.0, 156.0], [7300.0, 182.0], [7500.0, 153.0], [7600.0, 162.0], [7700.0, 155.0], [7900.0, 201.0], [7800.0, 143.0], [8000.0, 184.0], [8100.0, 223.0], [8200.0, 274.0], [8500.0, 214.0], [8700.0, 144.0], [8400.0, 188.0], [8300.0, 216.0], [8600.0, 166.0], [9200.0, 98.0], [8800.0, 161.0], [9000.0, 141.0], [8900.0, 152.0], [9100.0, 152.0], [9700.0, 30.0], [9600.0, 41.0], [9300.0, 87.0], [9400.0, 56.0], [9500.0, 33.0], [10000.0, 23.0], [10100.0, 19.0], [10200.0, 13.0], [9800.0, 17.0], [9900.0, 20.0], [10600.0, 39.0], [10700.0, 45.0], [10300.0, 21.0], [10500.0, 39.0], [10400.0, 34.0], [10800.0, 44.0], [11000.0, 20.0], [11100.0, 25.0], [11200.0, 15.0], [10900.0, 20.0], [11500.0, 12.0], [11400.0, 6.0], [11600.0, 11.0], [11300.0, 9.0], [11700.0, 7.0], [12100.0, 7.0], [12200.0, 10.0], [11900.0, 8.0], [12000.0, 9.0], [11800.0, 4.0], [12500.0, 7.0], [12300.0, 11.0], [12700.0, 15.0], [12400.0, 9.0], [12600.0, 6.0], [13000.0, 11.0], [13100.0, 7.0], [12900.0, 6.0], [12800.0, 7.0], [13200.0, 10.0], [13300.0, 2.0], [13700.0, 6.0], [13800.0, 4.0], [13400.0, 2.0], [13500.0, 4.0], [13600.0, 7.0], [14000.0, 3.0], [14300.0, 6.0], [14100.0, 3.0], [14200.0, 3.0], [13900.0, 3.0], [14400.0, 5.0], [14500.0, 6.0], [14800.0, 3.0], [14600.0, 6.0], [14700.0, 5.0], [15100.0, 7.0], [15000.0, 8.0], [14900.0, 8.0], [15300.0, 7.0], [15200.0, 11.0], [15400.0, 3.0], [15800.0, 7.0], [15500.0, 13.0], [15700.0, 4.0], [15600.0, 3.0], [15900.0, 5.0], [16300.0, 2.0], [16000.0, 2.0], [16100.0, 5.0], [16200.0, 1.0], [16600.0, 8.0], [17400.0, 1.0], [17100.0, 1.0], [17300.0, 3.0], [16800.0, 5.0], [16700.0, 1.0], [16400.0, 4.0], [16500.0, 2.0], [16900.0, 2.0], [17000.0, 1.0], [17700.0, 3.0], [17600.0, 4.0], [17500.0, 4.0], [18000.0, 3.0], [18400.0, 2.0], [17900.0, 2.0], [18200.0, 2.0], [18100.0, 1.0], [18500.0, 1.0], [18900.0, 2.0], [19300.0, 2.0], [19400.0, 1.0], [18600.0, 1.0], [19200.0, 1.0], [20000.0, 1.0], [20500.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 20500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 191799.0, "series": [{"data": [[0.0, 15.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 39.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8147.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 191799.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 584.8629441624363, "minX": 1.66173198E12, "maxY": 1000.0, "series": [{"data": [[1.66173222E12, 1000.0], [1.66173204E12, 999.5585233072421], [1.66173252E12, 829.463002414427], [1.66173234E12, 1000.0], [1.66173216E12, 1000.0], [1.66173198E12, 584.8629441624363], [1.66173246E12, 1000.0], [1.66173228E12, 1000.0], [1.6617321E12, 1000.0], [1.6617324E12, 1000.0]], "isOverall": false, "label": "Thread Group Update Type", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173252E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.0, "maxY": 2931.3333333333335, "series": [{"data": [[2.0, 21.25], [3.0, 20.0], [4.0, 28.25], [6.0, 20.0], [8.0, 32.0], [9.0, 46.333333333333336], [10.0, 38.0], [11.0, 42.0], [12.0, 31.0], [14.0, 31.333333333333332], [16.0, 35.5], [17.0, 33.0], [18.0, 41.4], [19.0, 41.0], [20.0, 49.0], [21.0, 39.666666666666664], [22.0, 69.0], [23.0, 50.0], [24.0, 44.333333333333336], [25.0, 39.0], [26.0, 70.5], [27.0, 36.0], [28.0, 38.5], [29.0, 77.25], [30.0, 277.0], [31.0, 258.0], [33.0, 148.83333333333334], [35.0, 130.0], [34.0, 104.0], [37.0, 240.33333333333334], [36.0, 133.0], [39.0, 105.5], [41.0, 173.71428571428572], [40.0, 134.0], [43.0, 121.0], [42.0, 183.75], [45.0, 117.0], [47.0, 198.0], [46.0, 136.5], [49.0, 294.75], [48.0, 329.0], [51.0, 69.0], [50.0, 301.0], [53.0, 235.6], [52.0, 137.16666666666666], [55.0, 280.5], [54.0, 73.0], [57.0, 307.0], [56.0, 291.5], [59.0, 253.0], [61.0, 172.25], [60.0, 141.0], [63.0, 303.57142857142856], [67.0, 227.33333333333334], [66.0, 271.0], [65.0, 279.6666666666667], [71.0, 287.0], [69.0, 249.0], [68.0, 239.0], [75.0, 248.0], [74.0, 229.1], [73.0, 418.0], [72.0, 345.0], [79.0, 344.8], [78.0, 145.0], [77.0, 230.0], [76.0, 215.66666666666666], [83.0, 148.0], [82.0, 282.0], [81.0, 366.0], [80.0, 174.2], [87.0, 243.66666666666666], [86.0, 248.0], [85.0, 158.5], [84.0, 426.0], [91.0, 213.75], [90.0, 248.0], [89.0, 233.33333333333334], [88.0, 349.0], [95.0, 240.0], [94.0, 234.0], [93.0, 196.66666666666666], [92.0, 236.5], [98.0, 264.6], [96.0, 205.8], [103.0, 282.0], [102.0, 228.6], [101.0, 188.0], [100.0, 227.8], [107.0, 147.0], [106.0, 524.0], [105.0, 174.33333333333334], [111.0, 339.66666666666663], [110.0, 280.14285714285717], [109.0, 383.0], [108.0, 184.0], [115.0, 196.75], [114.0, 180.33333333333334], [113.0, 249.0], [112.0, 242.33333333333334], [119.0, 495.6666666666667], [118.0, 456.4444444444444], [117.0, 203.0], [116.0, 207.5], [123.0, 481.0], [122.0, 436.16666666666663], [121.0, 443.0], [120.0, 526.0], [127.0, 395.625], [126.0, 459.0], [125.0, 579.8333333333334], [124.0, 329.0], [135.0, 579.25], [134.0, 417.5], [133.0, 485.0], [132.0, 313.25], [131.0, 448.0], [130.0, 305.0], [129.0, 582.5], [128.0, 373.0], [143.0, 367.2857142857143], [142.0, 627.5], [141.0, 376.0], [140.0, 357.0], [138.0, 438.55555555555554], [137.0, 460.49999999999994], [136.0, 453.25], [151.0, 432.5], [150.0, 380.25], [149.0, 330.0], [148.0, 554.0], [147.0, 508.0], [146.0, 342.1111111111111], [145.0, 475.2], [144.0, 373.0], [159.0, 430.5], [158.0, 579.6666666666667], [157.0, 528.75], [156.0, 465.0], [155.0, 976.0], [154.0, 531.6666666666666], [153.0, 497.5], [152.0, 563.0], [167.0, 374.0], [166.0, 566.1818181818181], [165.0, 549.0], [164.0, 573.0], [163.0, 511.5], [162.0, 509.44444444444446], [161.0, 417.0], [160.0, 425.0], [174.0, 363.5], [173.0, 501.5], [172.0, 501.5], [171.0, 464.5], [170.0, 466.83333333333337], [169.0, 355.6666666666667], [168.0, 381.6666666666667], [183.0, 452.5], [182.0, 360.0], [181.0, 399.75], [180.0, 675.0], [179.0, 450.6666666666667], [177.0, 358.8], [191.0, 354.3333333333333], [190.0, 560.5], [189.0, 606.4615384615385], [188.0, 433.0], [187.0, 551.0], [186.0, 437.0], [185.0, 450.0], [184.0, 385.0], [199.0, 522.0], [198.0, 528.0], [197.0, 623.5], [196.0, 385.85714285714283], [195.0, 334.0], [194.0, 438.3333333333333], [193.0, 486.5714285714286], [192.0, 435.0], [207.0, 459.5], [206.0, 586.0], [205.0, 345.0], [204.0, 411.6923076923077], [203.0, 500.25], [201.0, 366.0], [200.0, 346.5], [215.0, 946.0], [214.0, 655.0], [213.0, 518.6666666666666], [212.0, 1315.0], [211.0, 618.5], [210.0, 722.0], [209.0, 550.6666666666666], [208.0, 467.90909090909093], [223.0, 574.0], [222.0, 498.0], [221.0, 1014.0], [220.0, 853.25], [219.0, 494.0], [218.0, 610.0], [217.0, 585.0], [216.0, 567.5], [231.0, 442.0], [230.0, 527.5], [229.0, 766.3333333333334], [228.0, 545.2], [227.0, 600.0], [226.0, 700.7777777777778], [225.0, 1041.5], [224.0, 424.0], [239.0, 626.0], [238.0, 664.0], [237.0, 816.4], [236.0, 608.0], [235.0, 711.0], [234.0, 675.0], [233.0, 754.0], [232.0, 821.6666666666667], [247.0, 687.5], [246.0, 476.0], [245.0, 434.5], [244.0, 629.1249999999999], [243.0, 425.0], [242.0, 986.0], [241.0, 691.75], [240.0, 891.0], [255.0, 643.3333333333334], [254.0, 685.2], [253.0, 990.0], [252.0, 715.25], [251.0, 494.25], [250.0, 454.0], [249.0, 449.2857142857143], [248.0, 971.0], [270.0, 700.6666666666666], [271.0, 722.0], [269.0, 1047.0], [268.0, 674.0], [267.0, 662.6666666666666], [266.0, 843.3333333333334], [265.0, 671.0], [264.0, 1124.5], [263.0, 984.75], [259.0, 794.5], [258.0, 535.5], [257.0, 539.0], [256.0, 710.0], [262.0, 499.5], [286.0, 873.5], [287.0, 977.0], [285.0, 915.0], [284.0, 1741.0], [283.0, 777.0], [282.0, 830.1428571428572], [281.0, 802.2857142857143], [280.0, 935.5], [279.0, 1007.5], [272.0, 871.5], [275.0, 807.0], [273.0, 906.0], [278.0, 1144.0], [277.0, 765.0], [276.0, 860.4], [302.0, 762.5], [303.0, 852.0], [301.0, 835.5], [300.0, 754.6666666666666], [299.0, 767.3333333333334], [298.0, 893.5], [297.0, 827.7142857142858], [296.0, 895.5], [295.0, 1434.0], [289.0, 725.0], [288.0, 820.0000000000001], [291.0, 958.4285714285713], [290.0, 920.2222222222222], [294.0, 681.3333333333334], [293.0, 1383.0], [292.0, 717.0], [318.0, 982.625], [319.0, 1485.0], [317.0, 941.8571428571429], [316.0, 669.0], [315.0, 657.5], [314.0, 880.5], [313.0, 740.5], [312.0, 772.5], [311.0, 836.0], [304.0, 851.0], [306.0, 665.5], [305.0, 846.25], [310.0, 1047.5], [309.0, 785.9999999999999], [308.0, 806.7142857142857], [334.0, 1001.2307692307692], [335.0, 884.0], [333.0, 928.3333333333334], [332.0, 871.8], [331.0, 1040.3333333333335], [330.0, 1198.0], [329.0, 832.6666666666666], [328.0, 1148.2], [327.0, 1037.125], [320.0, 1366.0], [322.0, 1113.4], [321.0, 799.8], [326.0, 734.0], [324.0, 1017.5625], [350.0, 937.6666666666666], [351.0, 867.6666666666666], [349.0, 976.0], [348.0, 1065.5], [347.0, 1237.5], [346.0, 1066.5], [345.0, 1389.0], [344.0, 963.5], [343.0, 1644.5], [337.0, 1133.8333333333333], [336.0, 881.0], [339.0, 855.6666666666666], [338.0, 875.0], [342.0, 1251.6666666666667], [341.0, 751.0], [340.0, 961.1333333333332], [367.0, 1283.375], [360.0, 1103.0], [362.0, 1248.0], [363.0, 997.0], [366.0, 998.0], [364.0, 1030.0], [361.0, 1129.5], [359.0, 958.0], [353.0, 929.0], [352.0, 892.3333333333333], [355.0, 1070.5], [354.0, 816.0], [358.0, 936.3333333333334], [357.0, 1025.25], [356.0, 962.0], [381.0, 1101.0], [375.0, 1079.0], [374.0, 1437.5], [373.0, 764.0], [372.0, 838.75], [378.0, 962.75], [382.0, 1118.0], [383.0, 1732.0], [380.0, 973.5], [371.0, 969.0], [370.0, 925.75], [368.0, 901.5], [379.0, 895.6666666666667], [376.0, 769.5], [396.0, 1317.4], [392.0, 1021.6], [387.0, 1121.5], [386.0, 1296.7142857142856], [385.0, 986.2], [384.0, 1308.5], [391.0, 1226.1666666666667], [390.0, 943.0], [389.0, 1291.2], [388.0, 1014.0], [393.0, 1283.5], [395.0, 1125.0], [399.0, 993.3333333333334], [398.0, 1311.0], [397.0, 1435.75], [394.0, 996.0], [415.0, 1411.2222222222222], [411.0, 1569.7777777777778], [412.0, 1430.3333333333335], [403.0, 772.0], [402.0, 981.0], [401.0, 982.0], [400.0, 872.8571428571429], [413.0, 1370.8], [414.0, 1433.0], [410.0, 1238.75], [409.0, 1318.5714285714287], [408.0, 1132.125], [407.0, 1069.0], [406.0, 1110.4166666666667], [405.0, 1018.1666666666666], [404.0, 1308.2666666666669], [430.0, 1244.6666666666667], [417.0, 1424.8], [416.0, 1718.0], [423.0, 1117.0], [418.0, 1457.7272727272727], [419.0, 1895.0], [420.0, 1420.8571428571427], [421.0, 1590.2857142857142], [422.0, 1583.5], [431.0, 1039.5], [425.0, 1053.0], [424.0, 1892.0], [427.0, 1141.2857142857142], [426.0, 1689.6666666666667], [429.0, 1179.4], [428.0, 1647.0], [446.0, 1676.0], [438.0, 1739.5], [437.0, 1789.0], [439.0, 1404.0], [440.0, 1384.5], [443.0, 1759.3333333333333], [445.0, 1625.7], [447.0, 1621.8888888888887], [444.0, 1690.3333333333333], [435.0, 1029.3333333333333], [434.0, 1234.5], [433.0, 1551.6666666666667], [432.0, 2922.0], [442.0, 1556.6], [441.0, 1441.3333333333333], [462.0, 1765.5714285714287], [458.0, 1606.3125], [459.0, 1633.875], [461.0, 1478.9375], [463.0, 1588.125], [460.0, 1498.0666666666668], [457.0, 1581.5], [456.0, 1459.0], [455.0, 1716.6666666666665], [449.0, 1409.6666666666665], [448.0, 1663.0], [451.0, 1630.0], [450.0, 1543.1818181818182], [454.0, 1570.125], [453.0, 1307.0], [452.0, 1567.5], [479.0, 1443.5], [467.0, 1712.6666666666667], [465.0, 1454.5], [464.0, 1267.0], [466.0, 1566.75], [471.0, 1628.5], [470.0, 1330.25], [469.0, 2548.0], [468.0, 1411.0], [472.0, 1460.3076923076924], [473.0, 1324.0], [478.0, 1401.75], [477.0, 1342.0], [476.0, 1573.75], [475.0, 1564.0], [474.0, 1673.2857142857144], [494.0, 1314.5], [480.0, 1529.2727272727273], [482.0, 1877.25], [481.0, 1362.0], [483.0, 1628.3333333333333], [492.0, 1511.5], [491.0, 1735.5714285714287], [490.0, 1876.25], [489.0, 1563.2], [488.0, 2617.0], [487.0, 1859.2142857142858], [486.0, 1743.5], [485.0, 1752.5], [484.0, 1665.6666666666667], [510.0, 1489.888888888889], [496.0, 2045.3], [503.0, 1166.1666666666667], [502.0, 1331.0], [501.0, 1579.6785714285718], [500.0, 1792.6666666666665], [497.0, 1561.8], [505.0, 1296.6999999999998], [506.0, 1515.875], [511.0, 1697.5714285714287], [504.0, 1226.75], [509.0, 1625.3636363636363], [508.0, 2027.0], [499.0, 1772.5454545454545], [507.0, 1558.5], [541.0, 1268.6666666666667], [514.0, 1786.2], [513.0, 1312.0], [512.0, 1316.5], [516.0, 1297.0], [515.0, 1328.8333333333333], [518.0, 1305.5], [517.0, 1423.75], [527.0, 1380.9473684210525], [526.0, 1293.0], [525.0, 2608.0], [524.0, 1525.0], [523.0, 1547.0], [522.0, 1424.4117647058827], [519.0, 1512.5], [531.0, 1310.0909090909092], [530.0, 1229.0], [529.0, 1419.8], [528.0, 1133.2], [533.0, 1279.0], [532.0, 1148.2], [535.0, 1245.142857142857], [534.0, 1198.1052631578948], [543.0, 1146.0], [542.0, 1803.0], [540.0, 1186.5], [539.0, 1223.0], [538.0, 1204.1818181818182], [537.0, 1408.0], [536.0, 1284.7777777777778], [572.0, 1030.3333333333333], [552.0, 1600.5], [553.0, 1135.2222222222222], [554.0, 1422.4285714285713], [575.0, 1471.2], [561.0, 1223.3999999999996], [560.0, 1105.0], [563.0, 1095.5714285714287], [562.0, 1023.5], [565.0, 1507.75], [564.0, 1142.25], [567.0, 1682.0], [566.0, 969.0], [574.0, 968.0], [573.0, 1069.2], [571.0, 1194.25], [569.0, 1241.0], [568.0, 1101.2857142857144], [551.0, 2563.0], [550.0, 1128.5], [549.0, 1263.0], [548.0, 1461.5], [547.0, 1195.8571428571427], [546.0, 1216.0], [545.0, 1236.0], [544.0, 1453.6153846153848], [559.0, 1363.4444444444443], [558.0, 1330.1666666666665], [557.0, 1118.3000000000002], [556.0, 1265.9285714285716], [555.0, 1382.6666666666667], [602.0, 1106.4545454545455], [595.0, 1606.4999999999998], [584.0, 1441.6], [586.0, 1227.1666666666667], [585.0, 1218.0], [588.0, 1862.8], [587.0, 1472.4285714285713], [589.0, 1647.5714285714284], [594.0, 1621.0], [593.0, 1264.0], [592.0, 1128.2], [607.0, 1299.5], [606.0, 1599.5], [605.0, 1746.0], [604.0, 1116.0], [603.0, 1030.0], [596.0, 1884.0], [597.0, 1433.5], [598.0, 1343.0000000000002], [599.0, 1302.5294117647059], [600.0, 1707.6666666666667], [591.0, 1282.6], [583.0, 1100.5], [582.0, 1247.3529411764705], [581.0, 1235.0], [580.0, 1139.5500000000002], [579.0, 1642.0], [578.0, 1106.0], [577.0, 1082.5], [576.0, 1239.5], [590.0, 1279.4], [601.0, 1164.6666666666665], [611.0, 1513.75], [622.0, 1218.0], [608.0, 1794.5], [609.0, 1689.1333333333332], [610.0, 1750.75], [631.0, 1332.6666666666665], [630.0, 1159.0], [629.0, 1560.7000000000003], [628.0, 1642.6666666666667], [627.0, 1089.5], [626.0, 1214.0], [625.0, 1090.5], [624.0, 1078.8], [639.0, 1610.3529411764703], [638.0, 1149.0], [635.0, 1396.3636363636363], [634.0, 1665.75], [636.0, 1778.0], [632.0, 1969.0], [615.0, 1201.6666666666667], [614.0, 1315.2500000000002], [613.0, 1726.0], [612.0, 1433.6666666666667], [633.0, 1613.076923076923], [619.0, 1401.6666666666667], [618.0, 1235.0], [617.0, 1112.7142857142858], [616.0, 1218.6666666666667], [620.0, 1186.75], [621.0, 1370.6666666666667], [623.0, 1831.0], [645.0, 1882.3333333333333], [647.0, 1740.909090909091], [646.0, 1712.3333333333333], [664.0, 1958.5], [665.0, 1399.5], [667.0, 1095.0], [666.0, 1362.5], [669.0, 1326.7142857142858], [668.0, 1298.857142857143], [670.0, 1659.4444444444443], [671.0, 1184.7272727272727], [656.0, 1144.2], [658.0, 1175.2857142857144], [657.0, 1182.0], [660.0, 1521.75], [659.0, 2860.0], [649.0, 2051.2], [648.0, 1090.0], [650.0, 1483.5555555555557], [651.0, 1503.0], [652.0, 1260.7], [653.0, 1617.5], [655.0, 1700.4444444444443], [643.0, 1474.0], [642.0, 1303.0], [641.0, 1316.5555555555557], [640.0, 1361.2], [654.0, 1345.5], [661.0, 1826.4285714285716], [663.0, 2226.0], [662.0, 1327.9374999999998], [698.0, 1148.0], [702.0, 1753.7142857142858], [682.0, 2171.8571428571427], [681.0, 1521.1666666666667], [680.0, 1311.3888888888887], [683.0, 1541.0], [687.0, 1528.0], [673.0, 1715.0], [672.0, 1312.0666666666668], [675.0, 1294.0], [674.0, 1266.0], [677.0, 1252.3333333333333], [676.0, 1290.2857142857142], [679.0, 1382.1481481481483], [678.0, 1345.3333333333333], [686.0, 1189.5], [685.0, 1279.4285714285716], [684.0, 1105.0], [697.0, 1240.461538461538], [696.0, 1369.5500000000002], [699.0, 1345.1818181818182], [688.0, 2052.0], [694.0, 1586.357142857143], [693.0, 2337.0], [692.0, 1456.5], [691.0, 1513.75], [689.0, 1127.5], [695.0, 1268.058823529412], [703.0, 1541.8333333333333], [701.0, 1578.5], [700.0, 1385.2000000000003], [728.0, 2486.8333333333335], [718.0, 1817.1666666666665], [706.0, 2221.0000000000005], [707.0, 1776.6153846153845], [708.0, 1780.0], [711.0, 1774.875], [709.0, 1219.25], [735.0, 1769.0384615384614], [734.0, 1432.9166666666667], [733.0, 1171.142857142857], [732.0, 1261.357142857143], [731.0, 1192.2666666666667], [730.0, 1100.5], [729.0, 1106.6], [713.0, 1430.5], [712.0, 1151.0], [714.0, 1300.2727272727273], [715.0, 2479.25], [716.0, 1500.7], [717.0, 1150.0], [719.0, 1546.7272727272727], [705.0, 1644.375], [704.0, 1221.3333333333333], [721.0, 1454.75], [722.0, 1134.6153846153845], [723.0, 1091.1739130434783], [725.0, 1434.3902439024387], [724.0, 1383.3333333333333], [726.0, 1373.083333333333], [727.0, 1559.3529411764703], [743.0, 2347.6666666666665], [740.0, 1945.3333333333333], [736.0, 2086.142857142857], [737.0, 1394.2], [739.0, 1398.7058823529412], [738.0, 1446.0], [751.0, 1369.625], [750.0, 1426.5], [742.0, 1924.3333333333333], [741.0, 1505.5652173913045], [745.0, 1919.714285714286], [744.0, 1529.4444444444446], [746.0, 1690.8749999999998], [748.0, 1447.6363636363637], [747.0, 1498.1538461538462], [749.0, 1957.666666666667], [753.0, 1444.7333333333333], [752.0, 1482.1538461538462], [754.0, 1233.0], [766.0, 2285.25], [765.0, 1451.6], [764.0, 1424.0], [763.0, 1627.1599999999996], [767.0, 1287.875], [760.0, 2356.8], [761.0, 2127.1], [755.0, 1672.0], [756.0, 1771.909090909091], [757.0, 2207.0], [758.0, 1613.923076923077], [759.0, 1492.0769230769233], [796.0, 1469.6666666666667], [770.0, 1763.3636363636363], [769.0, 1486.3333333333333], [772.0, 1270.5], [771.0, 1346.2666666666667], [783.0, 1360.0], [782.0, 1672.4375], [781.0, 1412.4], [780.0, 1979.0], [779.0, 1550.6000000000001], [778.0, 1615.9090909090908], [777.0, 1603.0], [776.0, 1737.4], [773.0, 1516.4705882352941], [774.0, 1471.4400000000003], [775.0, 2625.666666666667], [793.0, 1772.0], [792.0, 1781.4390243902442], [799.0, 1523.9285714285713], [785.0, 1730.391304347826], [784.0, 1769.1666666666665], [787.0, 1597.9333333333334], [786.0, 1777.5], [789.0, 2210.5833333333335], [788.0, 1857.75], [791.0, 1714.375], [790.0, 1692.3846153846155], [798.0, 1435.2727272727273], [797.0, 1592.5], [795.0, 1652.0], [794.0, 2034.0], [827.0, 1651.8], [812.0, 1791.4444444444443], [809.0, 2931.3333333333335], [808.0, 1796.9999999999998], [810.0, 2330.0], [811.0, 1986.8571428571427], [813.0, 2025.2], [814.0, 1995.75], [816.0, 1822.25], [817.0, 1362.0], [826.0, 1806.0], [825.0, 1569.6000000000001], [824.0, 1539.9047619047617], [815.0, 1459.090909090909], [800.0, 1615.0769230769229], [802.0, 1786.3333333333333], [801.0, 1626.8604651162793], [804.0, 1699.3157894736844], [803.0, 1790.5], [806.0, 2209.0], [805.0, 1575.0], [807.0, 1668.8571428571431], [828.0, 1700.0], [830.0, 1481.0799999999997], [829.0, 1759.55], [831.0, 1470.0000000000002], [818.0, 1730.3636363636363], [820.0, 1761.0000000000002], [819.0, 1737.2666666666667], [821.0, 1619.21875], [823.0, 1586.5882352941173], [822.0, 1341.2666666666667], [861.0, 1591.6666666666667], [854.0, 2262.764705882353], [853.0, 2114.3333333333335], [852.0, 1994.3846153846155], [851.0, 1805.0], [850.0, 2094.238095238095], [849.0, 1932.8965517241372], [848.0, 1792.857142857143], [862.0, 1852.3636363636363], [863.0, 1512.8333333333335], [860.0, 1339.5714285714287], [858.0, 1327.0], [857.0, 1556.0], [856.0, 1471.142857142857], [847.0, 1947.7500000000002], [832.0, 1519.125], [834.0, 1646.0], [833.0, 1600.857142857143], [836.0, 1528.4374999999998], [835.0, 1817.2857142857144], [838.0, 1866.0], [837.0, 1709.0], [846.0, 1542.105263157895], [845.0, 1684.2777777777778], [844.0, 2047.384615384616], [843.0, 1803.8], [842.0, 1986.9999999999998], [841.0, 1597.0], [840.0, 1668.142857142857], [855.0, 1487.2], [892.0, 1764.1666666666667], [869.0, 1362.6551724137933], [865.0, 1693.9444444444443], [864.0, 1651.0], [879.0, 1580.2400000000002], [878.0, 1457.727272727273], [876.0, 1502.6666666666667], [875.0, 1412.0], [874.0, 1700.0], [873.0, 1718.1956521739132], [872.0, 1527.625], [866.0, 2375.5], [868.0, 1827.2068965517242], [895.0, 2574.636363636364], [881.0, 1374.0], [880.0, 1390.0666666666668], [883.0, 1558.4374999999998], [882.0, 1586.1666666666667], [885.0, 1765.25], [884.0, 1933.456790123457], [887.0, 1879.1379310344826], [886.0, 2066.230769230769], [894.0, 2009.5], [893.0, 1624.8], [891.0, 1770.0], [890.0, 2046.0], [889.0, 1880.2857142857142], [888.0, 1907.7500000000002], [871.0, 1538.2], [870.0, 1555.5714285714284], [924.0, 1781.0], [927.0, 2027.5], [913.0, 1998.4285714285713], [912.0, 2162.5], [915.0, 1689.4375000000002], [914.0, 2012.9574468085104], [917.0, 2104.965517241379], [916.0, 1647.8181818181818], [926.0, 1861.1034482758619], [925.0, 1865.375], [923.0, 2391.6666666666665], [922.0, 2007.0882352941173], [921.0, 1765.625], [920.0, 1897.111111111111], [911.0, 1874.3218390804604], [897.0, 2174.23076923077], [896.0, 2202.333333333333], [899.0, 1977.033333333333], [898.0, 1936.2105263157894], [901.0, 1903.041666666667], [900.0, 1673.8], [903.0, 1644.0], [902.0, 1771.4411764705883], [910.0, 1616.0], [909.0, 1982.4615384615386], [908.0, 2040.1052631578953], [907.0, 2085.421875], [906.0, 1748.3157894736842], [905.0, 1811.4117647058822], [904.0, 1919.9615384615386], [919.0, 1645.8333333333333], [918.0, 1784.142857142857], [956.0, 2170.8500000000004], [959.0, 1478.0], [945.0, 1527.2], [944.0, 1583.181818181818], [947.0, 1571.8947368421052], [946.0, 1806.6250000000002], [949.0, 1456.4], [948.0, 1544.1578947368419], [958.0, 1471.3076923076924], [957.0, 1715.9999999999998], [955.0, 1825.4117647058824], [954.0, 1979.470588235294], [953.0, 1608.057142857143], [952.0, 1696.7777777777778], [943.0, 1674.75], [928.0, 2049.5714285714284], [930.0, 1943.727272727273], [929.0, 2291.125], [932.0, 1770.0588235294115], [931.0, 2021.7173913043475], [934.0, 1730.3421052631577], [933.0, 1678.8], [942.0, 1389.48275862069], [941.0, 1348.142857142857], [940.0, 1733.1666666666665], [939.0, 1473.2682926829266], [938.0, 1801.889908256881], [937.0, 1801.0392156862742], [936.0, 1848.536585365854], [951.0, 1874.851851851852], [950.0, 1847.4736842105267], [988.0, 2054.2929936305736], [960.0, 1542.7128712871288], [961.0, 1331.6666666666667], [963.0, 1815.5862068965519], [962.0, 1723.6799999999998], [965.0, 1566.4255319148938], [964.0, 1826.1666666666667], [967.0, 1471.4814814814815], [966.0, 1603.1325301204815], [975.0, 2447.636363636364], [974.0, 1702.4252873563214], [973.0, 1893.666666666667], [972.0, 1850.2142857142856], [971.0, 1810.9], [970.0, 1883.5624999999998], [969.0, 1948.6000000000001], [968.0, 1690.5730337078653], [991.0, 1932.7101449275356], [977.0, 1524.0], [976.0, 1796.4188034188032], [979.0, 2041.8124999999998], [978.0, 1714.1276595744678], [981.0, 1801.2608695652177], [980.0, 1925.9142857142851], [983.0, 2091.2], [982.0, 1859.518518518518], [990.0, 2015.719298245614], [989.0, 1876.3095238095239], [987.0, 2107.375], [986.0, 2041.4499999999994], [985.0, 1980.096385542169], [984.0, 1724.6666666666667], [996.0, 1701.0545454545454], [1000.0, 2578.5234889768744], [999.0, 1730.4493670886075], [998.0, 1837.4678362573106], [997.0, 1845.8145896656545], [995.0, 1915.6004672897182], [994.0, 2013.115789473685], [993.0, 1918.9485294117642], [992.0, 2026.5573770491803], [1.0, 19.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[987.5316749999848, 2526.281590000039]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1583.0333333333333, "minX": 1.66173198E12, "maxY": 2607261.8666666667, "series": [{"data": [[1.66173222E12, 139921.53333333333], [1.66173204E12, 154064.75], [1.66173252E12, 89214.61666666667], [1.66173234E12, 150826.58333333334], [1.66173216E12, 175562.45], [1.66173198E12, 1583.0333333333333], [1.66173246E12, 149442.73333333334], [1.66173228E12, 143889.58333333334], [1.6617321E12, 112651.65], [1.6617324E12, 157550.8]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.66173222E12, 2110119.316666667], [1.66173204E12, 2237950.533333333], [1.66173252E12, 1340371.7], [1.66173234E12, 2260604.1666666665], [1.66173216E12, 2607261.8666666667], [1.66173198E12, 18751.116666666665], [1.66173246E12, 2262412.65], [1.66173228E12, 2158853.183333333], [1.6617321E12, 1698736.95], [1.6617324E12, 2341605.183333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173252E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1773.8701178809833, "minX": 1.66173198E12, "maxY": 3231.564240488584, "series": [{"data": [[1.66173222E12, 2552.5311019892556], [1.66173204E12, 2487.8102245661908], [1.66173252E12, 1773.8701178809833], [1.66173234E12, 2458.893599999988], [1.66173216E12, 2330.9840464368835], [1.66173198E12, 2168.928934010151], [1.66173246E12, 2594.7573730489516], [1.66173228E12, 2779.882192143207], [1.6617321E12, 3231.564240488584], [1.6617324E12, 2443.8389902849526]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173252E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1773.8677034512148, "minX": 1.66173198E12, "maxY": 3231.5585252423266, "series": [{"data": [[1.66173222E12, 2552.526094997527], [1.66173204E12, 2487.8029516842394], [1.66173252E12, 1773.8677034512148], [1.66173234E12, 2458.889684210528], [1.66173216E12, 2330.980505257011], [1.66173198E12, 2168.868020304569], [1.66173246E12, 2594.7531238167294], [1.66173228E12, 2779.8765486530647], [1.6617321E12, 3231.5585252423266], [1.6617324E12, 2443.8347628145275]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173252E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.010938617527030944, "minX": 1.66173198E12, "maxY": 6.6598984771573635, "series": [{"data": [[1.66173222E12, 0.011818304840092036], [1.66173204E12, 0.04529601905410041], [1.66173252E12, 0.015054679732992533], [1.66173234E12, 0.011452631578947403], [1.66173216E12, 0.015332943925233558], [1.66173198E12, 6.6598984771573635], [1.66173246E12, 0.010938617527030944], [1.66173228E12, 0.034610466910630015], [1.6617321E12, 0.020283521039950805], [1.6617324E12, 0.013698630136986278]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173252E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 19.0, "minX": 1.66173198E12, "maxY": 20520.0, "series": [{"data": [[1.66173222E12, 10867.0], [1.66173204E12, 8754.0], [1.66173252E12, 6095.0], [1.66173234E12, 9598.0], [1.66173216E12, 19493.0], [1.66173198E12, 3287.0], [1.66173246E12, 10207.0], [1.66173228E12, 20520.0], [1.6617321E12, 20029.0], [1.6617324E12, 15286.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66173222E12, 5143.7], [1.66173204E12, 5207.0], [1.66173252E12, 3946.2000000000003], [1.66173234E12, 5105.0], [1.66173216E12, 4864.0], [1.66173198E12, 3247.0], [1.66173246E12, 5605.0], [1.66173228E12, 8828.200000000008], [1.6617321E12, 8555.6], [1.6617324E12, 5803.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66173222E12, 8513.5], [1.66173204E12, 7813.640000000007], [1.66173252E12, 5654.400000000001], [1.66173234E12, 7331.999999999993], [1.66173216E12, 12040.5], [1.66173198E12, 3287.0], [1.66173246E12, 9160.0], [1.66173228E12, 14382.400000000001], [1.6617321E12, 17304.040000000005], [1.6617324E12, 13079.500000000007]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66173222E12, 6285.199999999999], [1.66173204E12, 6353.1], [1.66173252E12, 4277.2], [1.66173234E12, 5772.0], [1.66173216E12, 8214.5], [1.66173198E12, 3287.0], [1.66173246E12, 6482.0], [1.66173228E12, 10833.849999999993], [1.6617321E12, 10962.8], [1.6617324E12, 9188.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66173222E12, 2253.0], [1.66173204E12, 2154.0], [1.66173252E12, 19.0], [1.66173234E12, 2368.0], [1.66173216E12, 2088.0], [1.66173198E12, 1702.0], [1.66173246E12, 2245.0], [1.66173228E12, 2084.0], [1.6617321E12, 2452.0], [1.6617324E12, 2077.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66173222E12, 3020.5], [1.66173204E12, 3444.5], [1.66173252E12, 2534.0], [1.66173234E12, 3013.0], [1.66173216E12, 2766.0], [1.66173198E12, 2806.0], [1.66173246E12, 3004.0], [1.66173228E12, 2814.5], [1.6617321E12, 3365.0], [1.6617324E12, 2766.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173252E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 19.0, "minX": 1.0, "maxY": 15180.0, "series": [{"data": [[13.0, 21.5], [16.0, 2752.0], [19.0, 15180.0], [31.0, 8234.5], [33.0, 4534.0], [39.0, 10906.5], [45.0, 9480.5], [46.0, 7830.0], [51.0, 11662.5], [53.0, 3400.0], [52.0, 10535.0], [66.0, 1745.0], [67.0, 8812.0], [65.0, 9211.0], [71.0, 9672.0], [69.0, 2608.0], [73.0, 7745.0], [74.0, 5070.0], [76.0, 10316.0], [82.0, 10717.5], [86.0, 10298.0], [87.0, 11135.5], [91.0, 8058.0], [90.0, 10285.5], [95.0, 11501.0], [94.0, 11555.0], [101.0, 3099.0], [107.0, 10772.0], [108.0, 3488.0], [116.0, 4078.5], [121.0, 8957.0], [126.0, 10437.0], [125.0, 5144.5], [127.0, 4839.0], [131.0, 2831.0], [128.0, 6181.0], [134.0, 7953.0], [129.0, 10880.0], [135.0, 7171.0], [132.0, 2786.0], [142.0, 10335.0], [139.0, 6628.0], [145.0, 11357.0], [148.0, 4802.0], [151.0, 12293.0], [152.0, 10770.0], [156.0, 5228.5], [155.0, 6728.0], [160.0, 9780.5], [162.0, 11417.0], [170.0, 2517.0], [173.0, 7652.0], [175.0, 7010.0], [183.0, 9903.0], [181.0, 9536.0], [192.0, 5906.0], [194.0, 8425.0], [202.0, 5103.0], [205.0, 9659.5], [212.0, 5800.0], [222.0, 2862.5], [220.0, 4282.5], [227.0, 4501.5], [231.0, 3912.0], [228.0, 11415.0], [230.0, 4246.0], [238.0, 8322.0], [239.0, 6588.0], [234.0, 3704.0], [241.0, 5094.0], [245.0, 5661.0], [251.0, 4167.0], [255.0, 8053.0], [248.0, 4182.0], [250.0, 6044.0], [258.0, 3511.0], [268.0, 2730.0], [256.0, 12445.0], [267.0, 8028.0], [259.0, 3025.5], [265.0, 5107.0], [271.0, 5396.0], [277.0, 4445.5], [276.0, 3833.0], [278.0, 5047.0], [303.0, 2738.0], [291.0, 4756.0], [301.0, 4990.0], [299.0, 4126.5], [298.0, 4350.0], [289.0, 3412.0], [297.0, 5047.0], [296.0, 3416.0], [290.0, 6297.5], [292.0, 7217.0], [305.0, 3972.0], [319.0, 4128.0], [312.0, 5511.0], [310.0, 5743.0], [315.0, 5394.0], [311.0, 4781.0], [335.0, 3799.0], [323.0, 3304.0], [329.0, 3342.0], [331.0, 3015.0], [324.0, 7295.0], [325.0, 3076.0], [326.0, 2742.0], [340.0, 3719.5], [346.0, 3926.5], [338.0, 3659.0], [344.0, 2955.0], [341.0, 2926.0], [342.0, 9705.0], [339.0, 3454.0], [348.0, 5247.0], [360.0, 2699.0], [356.0, 3054.0], [358.0, 4350.0], [363.0, 4826.0], [362.0, 4472.0], [359.0, 3900.0], [354.0, 2847.5], [361.0, 3102.0], [366.0, 3861.5], [353.0, 3870.5], [381.0, 4681.5], [378.0, 3929.0], [376.0, 2774.0], [382.0, 3445.0], [368.0, 3067.5], [373.0, 2966.0], [372.0, 1802.0], [375.0, 3141.0], [377.0, 3355.0], [371.0, 3743.0], [380.0, 3377.0], [386.0, 3163.0], [391.0, 5187.0], [392.0, 3177.0], [384.0, 2855.0], [389.0, 2836.5], [390.0, 3235.0], [397.0, 4343.5], [398.0, 2918.0], [399.0, 2582.5], [393.0, 2827.0], [396.0, 2901.0], [387.0, 2495.0], [412.0, 3398.0], [413.0, 4897.5], [402.0, 3866.5], [403.0, 3034.0], [401.0, 4745.5], [407.0, 3543.0], [400.0, 2590.0], [410.0, 3052.0], [411.0, 2977.0], [414.0, 8385.0], [408.0, 2639.5], [406.0, 4588.5], [405.0, 3205.0], [404.0, 2868.0], [419.0, 2537.0], [418.0, 4819.0], [416.0, 2928.5], [423.0, 3131.0], [422.0, 4576.0], [424.0, 2679.0], [420.0, 3024.0], [430.0, 4384.0], [431.0, 3447.5], [426.0, 2789.5], [427.0, 2636.0], [429.0, 3092.0], [444.0, 3229.0], [432.0, 3178.5], [445.0, 2687.0], [436.0, 3360.0], [438.0, 2816.0], [433.0, 3128.5], [447.0, 3030.0], [440.0, 2903.0], [446.0, 3279.5], [462.0, 2665.5], [449.0, 3507.0], [453.0, 2959.0], [457.0, 2754.0], [458.0, 3231.0], [454.0, 2981.0], [460.0, 3803.0], [451.0, 2973.0], [450.0, 2985.0], [448.0, 2921.0], [455.0, 3662.0], [456.0, 3249.0], [463.0, 3166.0], [478.0, 3201.5], [468.0, 3152.0], [465.0, 2441.0], [472.0, 2749.0], [469.0, 4516.5], [464.0, 2430.0], [470.0, 2941.5], [475.0, 3290.0], [473.0, 2626.0], [474.0, 3157.0], [476.0, 2750.0], [477.0, 3040.0], [479.0, 3006.0], [467.0, 2832.0], [466.0, 2825.0], [482.0, 2869.0], [485.0, 3582.5], [483.0, 2762.5], [481.0, 3118.0], [490.0, 2741.0], [489.0, 3285.0], [488.0, 4736.5], [493.0, 2515.0], [480.0, 2554.0], [491.0, 2802.0], [499.0, 3034.0], [511.0, 2578.0], [502.0, 2692.0], [503.0, 2852.5], [506.0, 2987.0], [504.0, 2457.0], [505.0, 2943.5], [498.0, 2499.0], [497.0, 2591.0], [500.0, 4064.0], [501.0, 2422.0], [508.0, 2723.0], [516.0, 2567.5], [537.0, 2654.0], [517.0, 3068.0], [518.0, 2540.0], [519.0, 2785.0], [530.0, 2587.5], [529.0, 2264.5], [531.0, 2994.5], [533.0, 2499.0], [534.0, 2752.0], [520.0, 2644.0], [543.0, 2708.5], [541.0, 2330.0], [539.0, 2762.0], [540.0, 2634.0], [513.0, 3129.5], [512.0, 2549.0], [515.0, 2752.0], [514.0, 2713.0], [525.0, 2740.0], [526.0, 2857.0], [523.0, 2498.5], [522.0, 3313.0], [524.0, 2944.0], [527.0, 2569.0], [528.0, 2788.0], [521.0, 2647.0], [559.0, 2774.0], [555.0, 2728.5], [562.0, 2708.0], [568.0, 2564.0], [570.0, 2432.0], [547.0, 2653.5], [545.0, 2674.0], [544.0, 2524.0], [551.0, 2365.0], [549.0, 2558.0], [575.0, 2702.5], [572.0, 2772.0], [571.0, 2739.0], [563.0, 2809.5], [567.0, 2390.0], [557.0, 1373.0], [558.0, 2951.0], [553.0, 2616.5], [554.0, 2823.5], [587.0, 2469.5], [584.0, 2543.0], [581.0, 2939.0], [606.0, 2332.5], [601.0, 2487.0], [597.0, 2362.5], [593.0, 2481.0], [607.0, 2669.0], [578.0, 2834.5], [585.0, 2836.0], [577.0, 2738.0], [586.0, 2874.0], [588.0, 3074.5], [591.0, 2518.0], [576.0, 2569.0], [612.0, 2348.0], [610.0, 3195.5], [615.0, 2561.5], [628.0, 3282.0], [637.0, 2654.0], [634.0, 2497.0], [616.0, 2795.0], [632.0, 2752.0], [639.0, 2618.0], [647.0, 2672.0], [657.0, 2633.5], [653.0, 2726.0], [651.0, 2186.0], [681.0, 2833.0], [679.0, 3753.0], [693.0, 2378.5], [684.0, 2541.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 3265.5], [3.0, 3706.0], [6.0, 3282.0], [12.0, 9157.0], [13.0, 19.0], [16.0, 2309.5], [19.0, 7721.5], [31.0, 6212.0], [33.0, 3998.5], [39.0, 7833.0], [45.0, 8049.0], [46.0, 6337.0], [51.0, 8712.0], [53.0, 2870.0], [52.0, 7247.0], [66.0, 1686.0], [67.0, 6730.0], [65.0, 7991.0], [71.0, 5940.0], [69.0, 1938.0], [73.0, 6539.0], [74.0, 2962.0], [76.0, 6823.0], [82.0, 7219.5], [86.0, 8525.0], [87.0, 8119.0], [91.0, 5496.0], [90.0, 8748.5], [95.0, 8712.0], [94.0, 8201.0], [101.0, 2167.5], [107.0, 8614.5], [105.0, 8179.0], [108.0, 3096.5], [116.0, 3291.0], [121.0, 6242.0], [126.0, 3841.5], [125.0, 3964.0], [127.0, 6056.5], [131.0, 2346.5], [128.0, 5467.0], [134.0, 5924.0], [129.0, 8582.5], [135.0, 3811.0], [132.0, 1798.0], [142.0, 8162.0], [139.0, 5284.0], [151.0, 8059.0], [145.0, 6910.5], [148.0, 4001.0], [152.0, 8855.0], [156.0, 3819.5], [155.0, 5057.0], [160.0, 7262.5], [162.0, 4923.0], [170.0, 1755.0], [173.0, 6810.5], [175.0, 5982.5], [183.0, 7681.0], [181.0, 6786.0], [192.0, 4514.0], [194.0, 6565.0], [202.0, 2249.0], [205.0, 7193.0], [212.0, 5029.5], [222.0, 2167.5], [220.0, 3576.0], [227.0, 3612.0], [231.0, 3070.0], [228.0, 7412.0], [230.0, 2868.5], [238.0, 6027.5], [239.0, 5338.0], [234.0, 2774.0], [241.0, 3181.5], [245.0, 3657.5], [251.0, 3114.5], [255.0, 5535.0], [248.0, 3251.0], [250.0, 5068.0], [258.0, 2570.0], [268.0, 1765.0], [256.0, 7483.5], [267.0, 5010.0], [259.0, 2228.0], [265.0, 3998.0], [271.0, 3932.5], [277.0, 2795.0], [276.0, 2538.0], [278.0, 3861.0], [303.0, 2034.5], [291.0, 3657.0], [301.0, 3493.0], [299.0, 2735.0], [298.0, 3348.0], [289.0, 2453.5], [297.0, 4415.5], [296.0, 2661.0], [290.0, 4868.0], [292.0, 3953.0], [305.0, 2504.5], [319.0, 2686.0], [312.0, 2315.0], [310.0, 4521.0], [315.0, 4207.0], [311.0, 3367.0], [335.0, 2422.5], [323.0, 2417.0], [329.0, 2458.0], [331.0, 2121.0], [324.0, 2506.0], [325.0, 2210.0], [326.0, 2036.5], [340.0, 2530.0], [346.0, 2471.5], [338.0, 2236.0], [344.0, 2388.0], [341.0, 1852.0], [342.0, 5784.0], [339.0, 2656.0], [348.0, 2877.0], [360.0, 1918.0], [356.0, 2341.0], [358.0, 3048.0], [363.0, 2331.0], [362.0, 3862.0], [359.0, 2872.5], [354.0, 2045.0], [361.0, 2156.0], [366.0, 2530.0], [353.0, 2650.0], [381.0, 2646.0], [378.0, 2561.0], [376.0, 1924.0], [382.0, 2299.0], [368.0, 2327.0], [373.0, 2133.0], [372.0, 1495.0], [375.0, 2332.0], [377.0, 2649.0], [371.0, 2904.0], [380.0, 2557.0], [386.0, 1989.0], [391.0, 2668.5], [392.0, 2204.0], [384.0, 1937.0], [389.0, 2248.0], [390.0, 2167.0], [397.0, 3994.0], [398.0, 1907.5], [399.0, 1680.0], [393.0, 1779.5], [396.0, 1730.0], [387.0, 1887.0], [412.0, 1997.5], [413.0, 3054.0], [402.0, 2439.0], [403.0, 2019.5], [401.0, 2080.5], [407.0, 2764.5], [400.0, 1831.0], [410.0, 2429.0], [411.0, 2193.0], [414.0, 2715.0], [408.0, 1986.0], [406.0, 1682.5], [405.0, 2049.0], [404.0, 2207.0], [419.0, 1936.0], [418.0, 2403.0], [416.0, 2154.0], [423.0, 2116.0], [422.0, 3432.0], [424.0, 2063.0], [420.0, 2160.5], [430.0, 2119.0], [431.0, 2116.5], [426.0, 2609.0], [427.0, 1724.0], [429.0, 2364.0], [444.0, 1995.0], [432.0, 2489.5], [445.0, 1998.5], [436.0, 2428.0], [438.0, 1817.0], [433.0, 2337.0], [447.0, 2456.5], [440.0, 2208.5], [446.0, 1801.0], [462.0, 2008.0], [449.0, 2164.0], [453.0, 2090.0], [457.0, 1600.0], [458.0, 2118.0], [454.0, 2216.0], [460.0, 2683.0], [451.0, 2213.5], [450.0, 2165.0], [448.0, 2109.0], [455.0, 2644.0], [456.0, 2422.5], [463.0, 2150.0], [478.0, 2300.0], [468.0, 2523.5], [465.0, 1741.0], [472.0, 1987.0], [469.0, 3830.0], [464.0, 976.0], [470.0, 2099.0], [475.0, 2102.5], [473.0, 2049.5], [474.0, 2412.0], [476.0, 2130.0], [477.0, 2276.5], [479.0, 2250.0], [467.0, 2011.0], [466.0, 2059.0], [482.0, 1769.0], [485.0, 2256.0], [483.0, 2073.0], [481.0, 2443.0], [490.0, 1980.0], [489.0, 2427.0], [488.0, 2078.5], [493.0, 1942.0], [480.0, 1849.0], [491.0, 2103.0], [499.0, 1849.5], [511.0, 1893.0], [502.0, 2064.0], [503.0, 2214.0], [506.0, 1951.5], [504.0, 1543.5], [505.0, 2238.0], [498.0, 1830.5], [497.0, 1941.5], [500.0, 3187.0], [501.0, 1933.0], [508.0, 2159.0], [516.0, 1753.0], [537.0, 1770.0], [517.0, 2260.0], [518.0, 1919.5], [519.0, 2000.0], [530.0, 1736.0], [529.0, 1640.0], [531.0, 2177.0], [533.0, 1704.0], [534.0, 2101.0], [520.0, 2098.0], [543.0, 1800.0], [541.0, 1408.0], [539.0, 1996.0], [540.0, 2058.0], [513.0, 2083.0], [512.0, 1763.0], [515.0, 2025.5], [514.0, 1692.5], [525.0, 2132.0], [526.0, 1877.0], [523.0, 1960.0], [522.0, 2249.0], [524.0, 2048.5], [527.0, 1804.0], [528.0, 1928.0], [521.0, 1997.5], [559.0, 2100.0], [555.0, 1742.0], [562.0, 1762.0], [568.0, 1805.0], [570.0, 1826.5], [547.0, 1751.5], [545.0, 2078.0], [544.0, 1707.0], [551.0, 1772.0], [549.0, 1920.0], [575.0, 2041.0], [572.0, 1704.0], [571.0, 1952.0], [563.0, 1940.0], [567.0, 1720.0], [557.0, 1310.5], [558.0, 1945.5], [553.0, 1884.0], [554.0, 1946.0], [587.0, 1804.5], [584.0, 1923.0], [581.0, 1891.0], [606.0, 1708.5], [601.0, 1944.0], [597.0, 1816.0], [593.0, 1874.5], [607.0, 2061.0], [578.0, 1969.0], [585.0, 1989.0], [577.0, 1932.0], [586.0, 2196.5], [588.0, 2217.0], [591.0, 1774.5], [576.0, 1984.5], [612.0, 1738.5], [610.0, 2604.5], [615.0, 1873.5], [628.0, 2133.0], [637.0, 1931.5], [634.0, 1889.5], [616.0, 2046.0], [632.0, 1638.5], [639.0, 1676.5], [647.0, 1627.0], [657.0, 1956.0], [653.0, 2059.0], [651.0, 1420.5], [681.0, 2167.0], [679.0, 1530.0], [693.0, 1663.0], [684.0, 1471.0], [1.0, 2764.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 693.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 19.0, "minX": 1.0, "maxY": 15179.0, "series": [{"data": [[13.0, 21.5], [16.0, 2752.0], [19.0, 15179.0], [31.0, 8234.5], [33.0, 4534.0], [39.0, 10906.5], [45.0, 9480.5], [46.0, 7830.0], [51.0, 11662.5], [53.0, 3400.0], [52.0, 10535.0], [66.0, 1745.0], [67.0, 8812.0], [65.0, 9211.0], [71.0, 9672.0], [69.0, 2608.0], [73.0, 7745.0], [74.0, 5070.0], [76.0, 10316.0], [82.0, 10717.5], [86.0, 10298.0], [87.0, 11135.5], [91.0, 8058.0], [90.0, 10285.5], [95.0, 11501.0], [94.0, 11555.0], [101.0, 3099.0], [107.0, 10772.0], [108.0, 3488.0], [116.0, 4078.5], [121.0, 8957.0], [126.0, 10437.0], [125.0, 5144.5], [127.0, 4839.0], [131.0, 2831.0], [128.0, 6180.0], [134.0, 7953.0], [129.0, 10880.0], [135.0, 7171.0], [132.0, 2786.0], [142.0, 10335.0], [139.0, 6628.0], [145.0, 11357.0], [148.0, 4802.0], [151.0, 12293.0], [152.0, 10770.0], [156.0, 5228.5], [155.0, 6728.0], [160.0, 9780.5], [162.0, 11417.0], [170.0, 2517.0], [173.0, 7652.0], [175.0, 7010.0], [183.0, 9903.0], [181.0, 9536.0], [192.0, 5906.0], [194.0, 8425.0], [202.0, 5103.0], [205.0, 9659.5], [212.0, 5800.0], [222.0, 2862.5], [220.0, 4282.5], [227.0, 4501.5], [231.0, 3912.0], [228.0, 11415.0], [230.0, 4246.0], [238.0, 8322.0], [239.0, 6588.0], [234.0, 3704.0], [241.0, 5094.0], [245.0, 5661.0], [251.0, 4167.0], [255.0, 8053.0], [248.0, 4182.0], [250.0, 6044.0], [258.0, 3511.0], [268.0, 2730.0], [256.0, 12445.0], [267.0, 8028.0], [259.0, 3025.5], [265.0, 5107.0], [271.0, 5396.0], [277.0, 4445.5], [276.0, 3833.0], [278.0, 5047.0], [303.0, 2738.0], [291.0, 4756.0], [301.0, 4990.0], [299.0, 4126.5], [298.0, 4350.0], [289.0, 3412.0], [297.0, 5047.0], [296.0, 3416.0], [290.0, 6297.5], [292.0, 7217.0], [305.0, 3972.0], [319.0, 4128.0], [312.0, 5511.0], [310.0, 5743.0], [315.0, 5394.0], [311.0, 4781.0], [335.0, 3799.0], [323.0, 3304.0], [329.0, 3342.0], [331.0, 3015.0], [324.0, 7295.0], [325.0, 3076.0], [326.0, 2742.0], [340.0, 3719.5], [346.0, 3926.5], [338.0, 3659.0], [344.0, 2955.0], [341.0, 2926.0], [342.0, 9705.0], [339.0, 3454.0], [348.0, 5247.0], [360.0, 2699.0], [356.0, 3054.0], [358.0, 4350.0], [363.0, 4826.0], [362.0, 4472.0], [359.0, 3900.0], [354.0, 2847.5], [361.0, 3102.0], [366.0, 3861.5], [353.0, 3870.5], [381.0, 4681.5], [378.0, 3929.0], [376.0, 2774.0], [382.0, 3445.0], [368.0, 3067.5], [373.0, 2966.0], [372.0, 1802.0], [375.0, 3141.0], [377.0, 3355.0], [371.0, 3743.0], [380.0, 3377.0], [386.0, 3163.0], [391.0, 5187.0], [392.0, 3177.0], [384.0, 2855.0], [389.0, 2836.5], [390.0, 3235.0], [397.0, 4343.5], [398.0, 2918.0], [399.0, 2582.5], [393.0, 2827.0], [396.0, 2901.0], [387.0, 2495.0], [412.0, 3398.0], [413.0, 4897.5], [402.0, 3866.5], [403.0, 3034.0], [401.0, 4745.5], [407.0, 3543.0], [400.0, 2590.0], [410.0, 3052.0], [411.0, 2977.0], [414.0, 8385.0], [408.0, 2639.5], [406.0, 4588.5], [405.0, 3205.0], [404.0, 2868.0], [419.0, 2537.0], [418.0, 4819.0], [416.0, 2928.5], [423.0, 3131.0], [422.0, 4576.0], [424.0, 2679.0], [420.0, 3024.0], [430.0, 4384.0], [431.0, 3447.5], [426.0, 2789.5], [427.0, 2636.0], [429.0, 3092.0], [444.0, 3229.0], [432.0, 3178.5], [445.0, 2687.0], [436.0, 3360.0], [438.0, 2816.0], [433.0, 3128.5], [447.0, 3030.0], [440.0, 2903.0], [446.0, 3279.5], [462.0, 2665.5], [449.0, 3507.0], [453.0, 2959.0], [457.0, 2754.0], [458.0, 3231.0], [454.0, 2981.0], [460.0, 3803.0], [451.0, 2973.0], [450.0, 2985.0], [448.0, 2921.0], [455.0, 3662.0], [456.0, 3249.0], [463.0, 3166.0], [478.0, 3201.5], [468.0, 3152.0], [465.0, 2441.0], [472.0, 2749.0], [469.0, 4516.5], [464.0, 2430.0], [470.0, 2941.5], [475.0, 3290.0], [473.0, 2626.0], [474.0, 3157.0], [476.0, 2750.0], [477.0, 3040.0], [479.0, 3006.0], [467.0, 2832.0], [466.0, 2825.0], [482.0, 2869.0], [485.0, 3582.5], [483.0, 2762.5], [481.0, 3118.0], [490.0, 2741.0], [489.0, 3285.0], [488.0, 4736.5], [493.0, 2515.0], [480.0, 2554.0], [491.0, 2802.0], [499.0, 3034.0], [511.0, 2578.0], [502.0, 2692.0], [503.0, 2852.5], [506.0, 2987.0], [504.0, 2457.0], [505.0, 2943.5], [498.0, 2499.0], [497.0, 2591.0], [500.0, 4064.0], [501.0, 2422.0], [508.0, 2723.0], [516.0, 2567.5], [537.0, 2654.0], [517.0, 3068.0], [518.0, 2540.0], [519.0, 2785.0], [530.0, 2587.5], [529.0, 2264.5], [531.0, 2994.5], [533.0, 2499.0], [534.0, 2752.0], [520.0, 2644.0], [543.0, 2708.5], [541.0, 2330.0], [539.0, 2762.0], [540.0, 2634.0], [513.0, 3129.5], [512.0, 2549.0], [515.0, 2752.0], [514.0, 2713.0], [525.0, 2740.0], [526.0, 2857.0], [523.0, 2498.5], [522.0, 3313.0], [524.0, 2944.0], [527.0, 2569.0], [528.0, 2788.0], [521.0, 2647.0], [559.0, 2774.0], [555.0, 2728.5], [562.0, 2708.0], [568.0, 2564.0], [570.0, 2432.0], [547.0, 2653.5], [545.0, 2674.0], [544.0, 2524.0], [551.0, 2365.0], [549.0, 2558.0], [575.0, 2702.5], [572.0, 2772.0], [571.0, 2739.0], [563.0, 2809.5], [567.0, 2390.0], [557.0, 1373.0], [558.0, 2951.0], [553.0, 2616.5], [554.0, 2823.5], [587.0, 2469.5], [584.0, 2543.0], [581.0, 2939.0], [606.0, 2332.5], [601.0, 2487.0], [597.0, 2362.5], [593.0, 2481.0], [607.0, 2669.0], [578.0, 2834.5], [585.0, 2836.0], [577.0, 2738.0], [586.0, 2874.0], [588.0, 3074.5], [591.0, 2518.0], [576.0, 2569.0], [612.0, 2348.0], [610.0, 3195.5], [615.0, 2561.5], [628.0, 3282.0], [637.0, 2654.0], [634.0, 2497.0], [616.0, 2795.0], [632.0, 2752.0], [639.0, 2618.0], [647.0, 2672.0], [657.0, 2633.5], [653.0, 2726.0], [651.0, 2186.0], [681.0, 2833.0], [679.0, 3753.0], [693.0, 2378.5], [684.0, 2541.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 3265.5], [3.0, 3706.0], [6.0, 3282.0], [12.0, 9157.0], [13.0, 19.0], [16.0, 2309.5], [19.0, 7721.5], [31.0, 6212.0], [33.0, 3998.5], [39.0, 7833.0], [45.0, 8049.0], [46.0, 6337.0], [51.0, 8712.0], [53.0, 2870.0], [52.0, 7247.0], [66.0, 1686.0], [67.0, 6730.0], [65.0, 7991.0], [71.0, 5940.0], [69.0, 1938.0], [73.0, 6539.0], [74.0, 2962.0], [76.0, 6823.0], [82.0, 7219.5], [86.0, 8525.0], [87.0, 8119.0], [91.0, 5496.0], [90.0, 8748.5], [95.0, 8712.0], [94.0, 8201.0], [101.0, 2167.5], [107.0, 8614.5], [105.0, 8179.0], [108.0, 3096.5], [116.0, 3291.0], [121.0, 6242.0], [126.0, 3841.5], [125.0, 3964.0], [127.0, 6056.5], [131.0, 2346.5], [128.0, 5467.0], [134.0, 5924.0], [129.0, 8582.5], [135.0, 3811.0], [132.0, 1798.0], [142.0, 8162.0], [139.0, 5284.0], [151.0, 8059.0], [145.0, 6910.5], [148.0, 4001.0], [152.0, 8855.0], [156.0, 3819.5], [155.0, 5057.0], [160.0, 7262.5], [162.0, 4923.0], [170.0, 1755.0], [173.0, 6810.5], [175.0, 5982.5], [183.0, 7681.0], [181.0, 6786.0], [192.0, 4514.0], [194.0, 6565.0], [202.0, 2249.0], [205.0, 7193.0], [212.0, 5029.5], [222.0, 2167.5], [220.0, 3576.0], [227.0, 3612.0], [231.0, 3069.5], [228.0, 7412.0], [230.0, 2868.5], [238.0, 6027.5], [239.0, 5338.0], [234.0, 2774.0], [241.0, 3181.5], [245.0, 3657.5], [251.0, 3114.5], [255.0, 5535.0], [248.0, 3251.0], [250.0, 5068.0], [258.0, 2570.0], [268.0, 1765.0], [256.0, 7483.5], [267.0, 5010.0], [259.0, 2228.0], [265.0, 3998.0], [271.0, 3932.5], [277.0, 2795.0], [276.0, 2538.0], [278.0, 3861.0], [303.0, 2034.5], [291.0, 3657.0], [301.0, 3493.0], [299.0, 2735.0], [298.0, 3348.0], [289.0, 2453.5], [297.0, 4415.5], [296.0, 2661.0], [290.0, 4868.0], [292.0, 3953.0], [305.0, 2504.5], [319.0, 2686.0], [312.0, 2315.0], [310.0, 4521.0], [315.0, 4207.0], [311.0, 3367.0], [335.0, 2422.5], [323.0, 2417.0], [329.0, 2458.0], [331.0, 2121.0], [324.0, 2506.0], [325.0, 2210.0], [326.0, 2036.5], [340.0, 2530.0], [346.0, 2471.0], [338.0, 2236.0], [344.0, 2388.0], [341.0, 1852.0], [342.0, 5784.0], [339.0, 2656.0], [348.0, 2877.0], [360.0, 1918.0], [356.0, 2341.0], [358.0, 3048.0], [363.0, 2331.0], [362.0, 3862.0], [359.0, 2872.5], [354.0, 2045.0], [361.0, 2156.0], [366.0, 2530.0], [353.0, 2650.0], [381.0, 2646.0], [378.0, 2561.0], [376.0, 1924.0], [382.0, 2299.0], [368.0, 2327.0], [373.0, 2133.0], [372.0, 1495.0], [375.0, 2332.0], [377.0, 2649.0], [371.0, 2904.0], [380.0, 2557.0], [386.0, 1989.0], [391.0, 2668.5], [392.0, 2204.0], [384.0, 1937.0], [389.0, 2248.0], [390.0, 2167.0], [397.0, 3994.0], [398.0, 1907.5], [399.0, 1680.0], [393.0, 1779.5], [396.0, 1730.0], [387.0, 1887.0], [412.0, 1997.5], [413.0, 3054.0], [402.0, 2439.0], [403.0, 2019.5], [401.0, 2080.5], [407.0, 2764.5], [400.0, 1831.0], [410.0, 2429.0], [411.0, 2193.0], [414.0, 2715.0], [408.0, 1986.0], [406.0, 1682.5], [405.0, 2048.5], [404.0, 2207.0], [419.0, 1936.0], [418.0, 2403.0], [416.0, 2154.0], [423.0, 2116.0], [422.0, 3432.0], [424.0, 2063.0], [420.0, 2160.5], [430.0, 2119.0], [431.0, 2116.5], [426.0, 2609.0], [427.0, 1724.0], [429.0, 2364.0], [444.0, 1995.0], [432.0, 2489.5], [445.0, 1998.5], [436.0, 2428.0], [438.0, 1817.0], [433.0, 2337.0], [447.0, 2456.5], [440.0, 2208.5], [446.0, 1801.0], [462.0, 2008.0], [449.0, 2164.0], [453.0, 2090.0], [457.0, 1600.0], [458.0, 2118.0], [454.0, 2216.0], [460.0, 2683.0], [451.0, 2213.5], [450.0, 2165.0], [448.0, 2109.0], [455.0, 2644.0], [456.0, 2422.5], [463.0, 2150.0], [478.0, 2300.0], [468.0, 2523.5], [465.0, 1741.0], [472.0, 1987.0], [469.0, 3830.0], [464.0, 976.0], [470.0, 2099.0], [475.0, 2102.5], [473.0, 2049.5], [474.0, 2412.0], [476.0, 2130.0], [477.0, 2276.5], [479.0, 2250.0], [467.0, 2011.0], [466.0, 2059.0], [482.0, 1769.0], [485.0, 2256.0], [483.0, 2073.0], [481.0, 2443.0], [490.0, 1980.0], [489.0, 2427.0], [488.0, 2078.5], [493.0, 1942.0], [480.0, 1849.0], [491.0, 2103.0], [499.0, 1849.5], [511.0, 1893.0], [502.0, 2064.0], [503.0, 2214.0], [506.0, 1951.5], [504.0, 1543.5], [505.0, 2238.0], [498.0, 1830.5], [497.0, 1941.5], [500.0, 3187.0], [501.0, 1933.0], [508.0, 2159.0], [516.0, 1753.0], [537.0, 1770.0], [517.0, 2260.0], [518.0, 1919.5], [519.0, 2000.0], [530.0, 1736.0], [529.0, 1640.0], [531.0, 2177.0], [533.0, 1704.0], [534.0, 2101.0], [520.0, 2098.0], [543.0, 1800.0], [541.0, 1408.0], [539.0, 1996.0], [540.0, 2058.0], [513.0, 2083.0], [512.0, 1763.0], [515.0, 2025.5], [514.0, 1692.5], [525.0, 2132.0], [526.0, 1877.0], [523.0, 1960.0], [522.0, 2249.0], [524.0, 2048.5], [527.0, 1804.0], [528.0, 1928.0], [521.0, 1997.5], [559.0, 2100.0], [555.0, 1742.0], [562.0, 1762.0], [568.0, 1805.0], [570.0, 1826.5], [547.0, 1751.5], [545.0, 2078.0], [544.0, 1707.0], [551.0, 1772.0], [549.0, 1920.0], [575.0, 2041.0], [572.0, 1704.0], [571.0, 1952.0], [563.0, 1940.0], [567.0, 1720.0], [557.0, 1310.5], [558.0, 1945.5], [553.0, 1884.0], [554.0, 1946.0], [587.0, 1804.5], [584.0, 1923.0], [581.0, 1891.0], [606.0, 1708.5], [601.0, 1944.0], [597.0, 1816.0], [593.0, 1874.5], [607.0, 2061.0], [578.0, 1969.0], [585.0, 1989.0], [577.0, 1932.0], [586.0, 2196.5], [588.0, 2217.0], [591.0, 1774.5], [576.0, 1984.5], [612.0, 1738.5], [610.0, 2604.5], [615.0, 1873.5], [628.0, 2133.0], [637.0, 1931.5], [634.0, 1889.5], [616.0, 2046.0], [632.0, 1638.5], [639.0, 1676.5], [647.0, 1627.0], [657.0, 1956.0], [653.0, 2059.0], [651.0, 1420.5], [681.0, 2167.0], [679.0, 1530.0], [693.0, 1663.0], [684.0, 1471.0], [1.0, 2764.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 693.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.616666666666667, "minX": 1.66173198E12, "maxY": 456.55, "series": [{"data": [[1.66173222E12, 369.46666666666664], [1.66173204E12, 396.2], [1.66173252E12, 218.03333333333333], [1.66173234E12, 395.8333333333333], [1.66173216E12, 456.55], [1.66173198E12, 15.616666666666667], [1.66173246E12, 396.15], [1.66173228E12, 378.03333333333336], [1.6617321E12, 297.43333333333334], [1.6617324E12, 410.01666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173252E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.66173198E12, "maxY": 437.3833333333333, "series": [{"data": [[1.66173222E12, 14.533333333333333], [1.66173204E12, 17.966666666666665], [1.66173252E12, 9.383333333333333], [1.66173234E12, 15.983333333333333], [1.66173216E12, 19.15], [1.66173198E12, 0.2833333333333333], [1.66173246E12, 15.316666666666666], [1.66173228E12, 15.2], [1.6617321E12, 11.716666666666667], [1.6617324E12, 17.15]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.66173222E12, 354.95], [1.66173204E12, 373.9], [1.66173252E12, 225.31666666666666], [1.66173234E12, 379.85], [1.66173216E12, 437.3833333333333], [1.66173198E12, 3.0], [1.66173246E12, 380.8333333333333], [1.66173228E12, 362.81666666666666], [1.6617321E12, 285.73333333333335], [1.6617324E12, 392.8666666666667]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173252E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.66173198E12, "maxY": 437.3833333333333, "series": [{"data": [[1.66173222E12, 354.95], [1.66173204E12, 373.9], [1.66173252E12, 225.31666666666666], [1.66173234E12, 379.85], [1.66173216E12, 437.3833333333333], [1.66173198E12, 3.0], [1.66173246E12, 380.8333333333333], [1.66173228E12, 362.81666666666666], [1.6617321E12, 285.73333333333335], [1.6617324E12, 392.8666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.66173222E12, 14.533333333333333], [1.66173204E12, 17.966666666666665], [1.66173252E12, 9.383333333333333], [1.66173234E12, 15.983333333333333], [1.66173216E12, 19.15], [1.66173198E12, 0.2833333333333333], [1.66173246E12, 15.316666666666666], [1.66173228E12, 15.2], [1.6617321E12, 11.716666666666667], [1.6617324E12, 17.15]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173252E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.66173198E12, "maxY": 437.3833333333333, "series": [{"data": [[1.66173222E12, 14.533333333333333], [1.66173204E12, 17.966666666666665], [1.66173252E12, 9.383333333333333], [1.66173234E12, 15.983333333333333], [1.66173216E12, 19.15], [1.66173198E12, 0.2833333333333333], [1.66173246E12, 15.316666666666666], [1.66173228E12, 15.2], [1.6617321E12, 11.716666666666667], [1.6617324E12, 17.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.66173222E12, 354.95], [1.66173204E12, 373.9], [1.66173252E12, 225.31666666666666], [1.66173234E12, 379.85], [1.66173216E12, 437.3833333333333], [1.66173198E12, 3.0], [1.66173246E12, 380.8333333333333], [1.66173228E12, 362.81666666666666], [1.6617321E12, 285.73333333333335], [1.6617324E12, 392.8666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173252E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

