/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 811.0, "minX": 0.0, "maxY": 135524.0, "series": [{"data": [[0.0, 811.0], [0.1, 4975.0], [0.2, 6656.0], [0.3, 8209.0], [0.4, 8810.0], [0.5, 9042.0], [0.6, 9082.0], [0.7, 9108.0], [0.8, 9125.0], [0.9, 9135.0], [1.0, 9145.0], [1.1, 9154.0], [1.2, 9165.0], [1.3, 9174.0], [1.4, 9184.0], [1.5, 9195.0], [1.6, 9207.0], [1.7, 9218.0], [1.8, 9228.0], [1.9, 9241.0], [2.0, 9263.0], [2.1, 9279.0], [2.2, 9294.0], [2.3, 9305.0], [2.4, 9317.0], [2.5, 9330.0], [2.6, 9342.0], [2.7, 9354.0], [2.8, 9364.0], [2.9, 9373.0], [3.0, 9382.0], [3.1, 9395.0], [3.2, 9403.0], [3.3, 9413.0], [3.4, 9422.0], [3.5, 9432.0], [3.6, 9443.0], [3.7, 9464.0], [3.8, 9480.0], [3.9, 9496.0], [4.0, 9509.0], [4.1, 9528.0], [4.2, 9544.0], [4.3, 9562.0], [4.4, 9583.0], [4.5, 9600.0], [4.6, 9615.0], [4.7, 9625.0], [4.8, 9635.0], [4.9, 9643.0], [5.0, 9650.0], [5.1, 9657.0], [5.2, 9664.0], [5.3, 9671.0], [5.4, 9677.0], [5.5, 9685.0], [5.6, 9692.0], [5.7, 9699.0], [5.8, 9705.0], [5.9, 9713.0], [6.0, 9720.0], [6.1, 9728.0], [6.2, 9736.0], [6.3, 9743.0], [6.4, 9751.0], [6.5, 9758.0], [6.6, 9764.0], [6.7, 9770.0], [6.8, 9777.0], [6.9, 9785.0], [7.0, 9796.0], [7.1, 9805.0], [7.2, 9814.0], [7.3, 9825.0], [7.4, 9835.0], [7.5, 9846.0], [7.6, 9860.0], [7.7, 9878.0], [7.8, 9892.0], [7.9, 9906.0], [8.0, 9920.0], [8.1, 9932.0], [8.2, 9941.0], [8.3, 9952.0], [8.4, 9962.0], [8.5, 9971.0], [8.6, 9979.0], [8.7, 9987.0], [8.8, 9993.0], [8.9, 10000.0], [9.0, 10008.0], [9.1, 10015.0], [9.2, 10024.0], [9.3, 10032.0], [9.4, 10041.0], [9.5, 10050.0], [9.6, 10060.0], [9.7, 10067.0], [9.8, 10075.0], [9.9, 10083.0], [10.0, 10092.0], [10.1, 10099.0], [10.2, 10106.0], [10.3, 10112.0], [10.4, 10119.0], [10.5, 10124.0], [10.6, 10130.0], [10.7, 10137.0], [10.8, 10143.0], [10.9, 10148.0], [11.0, 10155.0], [11.1, 10161.0], [11.2, 10168.0], [11.3, 10179.0], [11.4, 10190.0], [11.5, 10200.0], [11.6, 10211.0], [11.7, 10226.0], [11.8, 10244.0], [11.9, 10258.0], [12.0, 10275.0], [12.1, 10292.0], [12.2, 10305.0], [12.3, 10315.0], [12.4, 10326.0], [12.5, 10338.0], [12.6, 10350.0], [12.7, 10361.0], [12.8, 10374.0], [12.9, 10384.0], [13.0, 10392.0], [13.1, 10401.0], [13.2, 10409.0], [13.3, 10421.0], [13.4, 10430.0], [13.5, 10439.0], [13.6, 10448.0], [13.7, 10457.0], [13.8, 10465.0], [13.9, 10477.0], [14.0, 10486.0], [14.1, 10493.0], [14.2, 10503.0], [14.3, 10513.0], [14.4, 10520.0], [14.5, 10528.0], [14.6, 10534.0], [14.7, 10540.0], [14.8, 10548.0], [14.9, 10555.0], [15.0, 10562.0], [15.1, 10569.0], [15.2, 10575.0], [15.3, 10582.0], [15.4, 10589.0], [15.5, 10596.0], [15.6, 10602.0], [15.7, 10609.0], [15.8, 10614.0], [15.9, 10620.0], [16.0, 10627.0], [16.1, 10635.0], [16.2, 10644.0], [16.3, 10653.0], [16.4, 10663.0], [16.5, 10674.0], [16.6, 10686.0], [16.7, 10701.0], [16.8, 10714.0], [16.9, 10725.0], [17.0, 10736.0], [17.1, 10747.0], [17.2, 10761.0], [17.3, 10773.0], [17.4, 10787.0], [17.5, 10798.0], [17.6, 10809.0], [17.7, 10824.0], [17.8, 10834.0], [17.9, 10845.0], [18.0, 10858.0], [18.1, 10874.0], [18.2, 10892.0], [18.3, 10910.0], [18.4, 10928.0], [18.5, 10941.0], [18.6, 10957.0], [18.7, 10972.0], [18.8, 10987.0], [18.9, 10998.0], [19.0, 11007.0], [19.1, 11016.0], [19.2, 11025.0], [19.3, 11035.0], [19.4, 11043.0], [19.5, 11052.0], [19.6, 11060.0], [19.7, 11068.0], [19.8, 11076.0], [19.9, 11084.0], [20.0, 11091.0], [20.1, 11097.0], [20.2, 11104.0], [20.3, 11111.0], [20.4, 11119.0], [20.5, 11127.0], [20.6, 11135.0], [20.7, 11142.0], [20.8, 11148.0], [20.9, 11155.0], [21.0, 11163.0], [21.1, 11170.0], [21.2, 11176.0], [21.3, 11182.0], [21.4, 11189.0], [21.5, 11195.0], [21.6, 11202.0], [21.7, 11210.0], [21.8, 11218.0], [21.9, 11226.0], [22.0, 11234.0], [22.1, 11243.0], [22.2, 11253.0], [22.3, 11263.0], [22.4, 11273.0], [22.5, 11285.0], [22.6, 11293.0], [22.7, 11304.0], [22.8, 11314.0], [22.9, 11324.0], [23.0, 11333.0], [23.1, 11344.0], [23.2, 11353.0], [23.3, 11363.0], [23.4, 11371.0], [23.5, 11378.0], [23.6, 11384.0], [23.7, 11390.0], [23.8, 11398.0], [23.9, 11405.0], [24.0, 11412.0], [24.1, 11422.0], [24.2, 11430.0], [24.3, 11441.0], [24.4, 11452.0], [24.5, 11464.0], [24.6, 11474.0], [24.7, 11485.0], [24.8, 11496.0], [24.9, 11503.0], [25.0, 11512.0], [25.1, 11519.0], [25.2, 11529.0], [25.3, 11538.0], [25.4, 11545.0], [25.5, 11555.0], [25.6, 11565.0], [25.7, 11577.0], [25.8, 11589.0], [25.9, 11603.0], [26.0, 11615.0], [26.1, 11628.0], [26.2, 11642.0], [26.3, 11660.0], [26.4, 11675.0], [26.5, 11690.0], [26.6, 11702.0], [26.7, 11714.0], [26.8, 11730.0], [26.9, 11741.0], [27.0, 11751.0], [27.1, 11764.0], [27.2, 11778.0], [27.3, 11788.0], [27.4, 11799.0], [27.5, 11811.0], [27.6, 11822.0], [27.7, 11836.0], [27.8, 11853.0], [27.9, 11868.0], [28.0, 11885.0], [28.1, 11902.0], [28.2, 11916.0], [28.3, 11928.0], [28.4, 11941.0], [28.5, 11959.0], [28.6, 11981.0], [28.7, 12002.0], [28.8, 12020.0], [28.9, 12045.0], [29.0, 12078.0], [29.1, 12105.0], [29.2, 12124.0], [29.3, 12155.0], [29.4, 12179.0], [29.5, 12195.0], [29.6, 12207.0], [29.7, 12219.0], [29.8, 12231.0], [29.9, 12241.0], [30.0, 12251.0], [30.1, 12262.0], [30.2, 12273.0], [30.3, 12284.0], [30.4, 12295.0], [30.5, 12306.0], [30.6, 12317.0], [30.7, 12328.0], [30.8, 12339.0], [30.9, 12354.0], [31.0, 12369.0], [31.1, 12385.0], [31.2, 12398.0], [31.3, 12407.0], [31.4, 12418.0], [31.5, 12427.0], [31.6, 12441.0], [31.7, 12452.0], [31.8, 12463.0], [31.9, 12473.0], [32.0, 12483.0], [32.1, 12491.0], [32.2, 12502.0], [32.3, 12516.0], [32.4, 12530.0], [32.5, 12544.0], [32.6, 12559.0], [32.7, 12577.0], [32.8, 12591.0], [32.9, 12606.0], [33.0, 12619.0], [33.1, 12631.0], [33.2, 12643.0], [33.3, 12661.0], [33.4, 12680.0], [33.5, 12699.0], [33.6, 12715.0], [33.7, 12725.0], [33.8, 12734.0], [33.9, 12743.0], [34.0, 12752.0], [34.1, 12759.0], [34.2, 12768.0], [34.3, 12779.0], [34.4, 12792.0], [34.5, 12801.0], [34.6, 12809.0], [34.7, 12818.0], [34.8, 12825.0], [34.9, 12832.0], [35.0, 12839.0], [35.1, 12847.0], [35.2, 12855.0], [35.3, 12863.0], [35.4, 12870.0], [35.5, 12877.0], [35.6, 12884.0], [35.7, 12891.0], [35.8, 12899.0], [35.9, 12906.0], [36.0, 12912.0], [36.1, 12918.0], [36.2, 12923.0], [36.3, 12930.0], [36.4, 12936.0], [36.5, 12944.0], [36.6, 12952.0], [36.7, 12961.0], [36.8, 12970.0], [36.9, 12979.0], [37.0, 12989.0], [37.1, 13001.0], [37.2, 13013.0], [37.3, 13030.0], [37.4, 13046.0], [37.5, 13063.0], [37.6, 13079.0], [37.7, 13095.0], [37.8, 13108.0], [37.9, 13123.0], [38.0, 13142.0], [38.1, 13156.0], [38.2, 13169.0], [38.3, 13184.0], [38.4, 13196.0], [38.5, 13209.0], [38.6, 13225.0], [38.7, 13242.0], [38.8, 13259.0], [38.9, 13277.0], [39.0, 13293.0], [39.1, 13311.0], [39.2, 13336.0], [39.3, 13367.0], [39.4, 13403.0], [39.5, 13436.0], [39.6, 13464.0], [39.7, 13485.0], [39.8, 13500.0], [39.9, 13511.0], [40.0, 13522.0], [40.1, 13532.0], [40.2, 13543.0], [40.3, 13555.0], [40.4, 13562.0], [40.5, 13570.0], [40.6, 13579.0], [40.7, 13591.0], [40.8, 13600.0], [40.9, 13610.0], [41.0, 13619.0], [41.1, 13627.0], [41.2, 13634.0], [41.3, 13640.0], [41.4, 13646.0], [41.5, 13652.0], [41.6, 13658.0], [41.7, 13663.0], [41.8, 13667.0], [41.9, 13673.0], [42.0, 13677.0], [42.1, 13683.0], [42.2, 13688.0], [42.3, 13694.0], [42.4, 13700.0], [42.5, 13708.0], [42.6, 13713.0], [42.7, 13718.0], [42.8, 13723.0], [42.9, 13730.0], [43.0, 13735.0], [43.1, 13742.0], [43.2, 13748.0], [43.3, 13754.0], [43.4, 13762.0], [43.5, 13768.0], [43.6, 13776.0], [43.7, 13782.0], [43.8, 13789.0], [43.9, 13796.0], [44.0, 13804.0], [44.1, 13814.0], [44.2, 13824.0], [44.3, 13834.0], [44.4, 13846.0], [44.5, 13855.0], [44.6, 13864.0], [44.7, 13875.0], [44.8, 13887.0], [44.9, 13901.0], [45.0, 13917.0], [45.1, 13933.0], [45.2, 13947.0], [45.3, 13961.0], [45.4, 13979.0], [45.5, 13997.0], [45.6, 14011.0], [45.7, 14026.0], [45.8, 14042.0], [45.9, 14061.0], [46.0, 14076.0], [46.1, 14092.0], [46.2, 14109.0], [46.3, 14127.0], [46.4, 14146.0], [46.5, 14162.0], [46.6, 14176.0], [46.7, 14190.0], [46.8, 14204.0], [46.9, 14215.0], [47.0, 14227.0], [47.1, 14237.0], [47.2, 14248.0], [47.3, 14262.0], [47.4, 14273.0], [47.5, 14284.0], [47.6, 14294.0], [47.7, 14308.0], [47.8, 14325.0], [47.9, 14336.0], [48.0, 14349.0], [48.1, 14365.0], [48.2, 14376.0], [48.3, 14386.0], [48.4, 14401.0], [48.5, 14415.0], [48.6, 14431.0], [48.7, 14444.0], [48.8, 14456.0], [48.9, 14473.0], [49.0, 14493.0], [49.1, 14512.0], [49.2, 14543.0], [49.3, 14573.0], [49.4, 14603.0], [49.5, 14626.0], [49.6, 14649.0], [49.7, 14669.0], [49.8, 14691.0], [49.9, 14708.0], [50.0, 14726.0], [50.1, 14745.0], [50.2, 14754.0], [50.3, 14765.0], [50.4, 14778.0], [50.5, 14795.0], [50.6, 14814.0], [50.7, 14830.0], [50.8, 14844.0], [50.9, 14862.0], [51.0, 14875.0], [51.1, 14893.0], [51.2, 14909.0], [51.3, 14925.0], [51.4, 14944.0], [51.5, 14960.0], [51.6, 14975.0], [51.7, 14999.0], [51.8, 15021.0], [51.9, 15037.0], [52.0, 15061.0], [52.1, 15084.0], [52.2, 15103.0], [52.3, 15133.0], [52.4, 15161.0], [52.5, 15183.0], [52.6, 15215.0], [52.7, 15243.0], [52.8, 15279.0], [52.9, 15312.0], [53.0, 15342.0], [53.1, 15385.0], [53.2, 15435.0], [53.3, 15464.0], [53.4, 15486.0], [53.5, 15511.0], [53.6, 15530.0], [53.7, 15555.0], [53.8, 15590.0], [53.9, 15613.0], [54.0, 15636.0], [54.1, 15654.0], [54.2, 15677.0], [54.3, 15695.0], [54.4, 15712.0], [54.5, 15732.0], [54.6, 15745.0], [54.7, 15759.0], [54.8, 15771.0], [54.9, 15783.0], [55.0, 15798.0], [55.1, 15811.0], [55.2, 15824.0], [55.3, 15838.0], [55.4, 15856.0], [55.5, 15878.0], [55.6, 15895.0], [55.7, 15920.0], [55.8, 15946.0], [55.9, 15964.0], [56.0, 15986.0], [56.1, 16005.0], [56.2, 16026.0], [56.3, 16045.0], [56.4, 16059.0], [56.5, 16077.0], [56.6, 16099.0], [56.7, 16112.0], [56.8, 16130.0], [56.9, 16153.0], [57.0, 16175.0], [57.1, 16196.0], [57.2, 16231.0], [57.3, 16258.0], [57.4, 16288.0], [57.5, 16310.0], [57.6, 16344.0], [57.7, 16386.0], [57.8, 16408.0], [57.9, 16431.0], [58.0, 16455.0], [58.1, 16475.0], [58.2, 16499.0], [58.3, 16524.0], [58.4, 16553.0], [58.5, 16576.0], [58.6, 16603.0], [58.7, 16619.0], [58.8, 16640.0], [58.9, 16667.0], [59.0, 16700.0], [59.1, 16736.0], [59.2, 16787.0], [59.3, 16821.0], [59.4, 16850.0], [59.5, 16874.0], [59.6, 16899.0], [59.7, 16934.0], [59.8, 16971.0], [59.9, 17000.0], [60.0, 17019.0], [60.1, 17036.0], [60.2, 17064.0], [60.3, 17088.0], [60.4, 17116.0], [60.5, 17156.0], [60.6, 17215.0], [60.7, 17263.0], [60.8, 17300.0], [60.9, 17337.0], [61.0, 17362.0], [61.1, 17388.0], [61.2, 17419.0], [61.3, 17460.0], [61.4, 17496.0], [61.5, 17560.0], [61.6, 17627.0], [61.7, 17704.0], [61.8, 17760.0], [61.9, 17811.0], [62.0, 17840.0], [62.1, 17863.0], [62.2, 17904.0], [62.3, 17957.0], [62.4, 18035.0], [62.5, 18203.0], [62.6, 18237.0], [62.7, 18268.0], [62.8, 18336.0], [62.9, 18502.0], [63.0, 19070.0], [63.1, 19416.0], [63.2, 20013.0], [63.3, 20325.0], [63.4, 20714.0], [63.5, 20768.0], [63.6, 20816.0], [63.7, 20904.0], [63.8, 21106.0], [63.9, 22615.0], [64.0, 23078.0], [64.1, 23415.0], [64.2, 23544.0], [64.3, 23640.0], [64.4, 23711.0], [64.5, 23772.0], [64.6, 24074.0], [64.7, 24590.0], [64.8, 24937.0], [64.9, 25023.0], [65.0, 25110.0], [65.1, 25198.0], [65.2, 25323.0], [65.3, 25986.0], [65.4, 26346.0], [65.5, 26533.0], [65.6, 26594.0], [65.7, 26667.0], [65.8, 26743.0], [65.9, 27322.0], [66.0, 27744.0], [66.1, 27838.0], [66.2, 27899.0], [66.3, 27970.0], [66.4, 28070.0], [66.5, 29210.0], [66.6, 29760.0], [66.7, 30003.0], [66.8, 30146.0], [66.9, 30279.0], [67.0, 30439.0], [67.1, 31100.0], [67.2, 31879.0], [67.3, 32041.0], [67.4, 32127.0], [67.5, 32211.0], [67.6, 32322.0], [67.7, 33159.0], [67.8, 33524.0], [67.9, 33571.0], [68.0, 33614.0], [68.1, 33676.0], [68.2, 33864.0], [68.3, 35008.0], [68.4, 35782.0], [68.5, 35849.0], [68.6, 35982.0], [68.7, 36212.0], [68.8, 36318.0], [68.9, 36515.0], [69.0, 37610.0], [69.1, 37918.0], [69.2, 37964.0], [69.3, 38007.0], [69.4, 38075.0], [69.5, 38327.0], [69.6, 39549.0], [69.7, 39901.0], [69.8, 39989.0], [69.9, 40190.0], [70.0, 40378.0], [70.1, 41251.0], [70.2, 42754.0], [70.3, 42882.0], [70.4, 42975.0], [70.5, 43092.0], [70.6, 43189.0], [70.7, 44667.0], [70.8, 44839.0], [70.9, 44940.0], [71.0, 45102.0], [71.1, 45196.0], [71.2, 45534.0], [71.3, 45645.0], [71.4, 45685.0], [71.5, 45735.0], [71.6, 45792.0], [71.7, 47142.0], [71.8, 49674.0], [71.9, 49753.0], [72.0, 49836.0], [72.1, 49922.0], [72.2, 49992.0], [72.3, 51552.0], [72.4, 52101.0], [72.5, 52157.0], [72.6, 52227.0], [72.7, 52365.0], [72.8, 52440.0], [72.9, 52526.0], [73.0, 52606.0], [73.1, 52770.0], [73.2, 52848.0], [73.3, 53057.0], [73.4, 54250.0], [73.5, 58524.0], [73.6, 58715.0], [73.7, 60002.0], [73.8, 60002.0], [73.9, 60003.0], [74.0, 60003.0], [74.1, 60003.0], [74.2, 60003.0], [74.3, 60003.0], [74.4, 60003.0], [74.5, 60003.0], [74.6, 60003.0], [74.7, 60004.0], [74.8, 60004.0], [74.9, 60004.0], [75.0, 60004.0], [75.1, 60004.0], [75.2, 60004.0], [75.3, 60004.0], [75.4, 60004.0], [75.5, 60004.0], [75.6, 60004.0], [75.7, 60004.0], [75.8, 60004.0], [75.9, 60004.0], [76.0, 60004.0], [76.1, 60004.0], [76.2, 60004.0], [76.3, 60004.0], [76.4, 60004.0], [76.5, 60004.0], [76.6, 60005.0], [76.7, 60005.0], [76.8, 60005.0], [76.9, 60005.0], [77.0, 60005.0], [77.1, 60005.0], [77.2, 60005.0], [77.3, 60005.0], [77.4, 60005.0], [77.5, 60005.0], [77.6, 60005.0], [77.7, 60005.0], [77.8, 60005.0], [77.9, 60005.0], [78.0, 60005.0], [78.1, 60005.0], [78.2, 60005.0], [78.3, 60005.0], [78.4, 60005.0], [78.5, 60005.0], [78.6, 60005.0], [78.7, 60005.0], [78.8, 60005.0], [78.9, 60005.0], [79.0, 60006.0], [79.1, 60006.0], [79.2, 60006.0], [79.3, 60006.0], [79.4, 60006.0], [79.5, 60006.0], [79.6, 60006.0], [79.7, 60006.0], [79.8, 60006.0], [79.9, 60006.0], [80.0, 60006.0], [80.1, 60006.0], [80.2, 60006.0], [80.3, 60006.0], [80.4, 60006.0], [80.5, 60006.0], [80.6, 60006.0], [80.7, 60006.0], [80.8, 60006.0], [80.9, 60006.0], [81.0, 60006.0], [81.1, 60006.0], [81.2, 60007.0], [81.3, 60007.0], [81.4, 60007.0], [81.5, 60007.0], [81.6, 60007.0], [81.7, 60007.0], [81.8, 60007.0], [81.9, 60007.0], [82.0, 60007.0], [82.1, 60007.0], [82.2, 60007.0], [82.3, 60007.0], [82.4, 60007.0], [82.5, 60007.0], [82.6, 60007.0], [82.7, 60007.0], [82.8, 60007.0], [82.9, 60007.0], [83.0, 60007.0], [83.1, 60007.0], [83.2, 60008.0], [83.3, 60008.0], [83.4, 60008.0], [83.5, 60008.0], [83.6, 60008.0], [83.7, 60008.0], [83.8, 60008.0], [83.9, 60008.0], [84.0, 60008.0], [84.1, 60008.0], [84.2, 60008.0], [84.3, 60008.0], [84.4, 60008.0], [84.5, 60008.0], [84.6, 60008.0], [84.7, 60008.0], [84.8, 60008.0], [84.9, 60009.0], [85.0, 60009.0], [85.1, 60009.0], [85.2, 60009.0], [85.3, 60009.0], [85.4, 60009.0], [85.5, 60009.0], [85.6, 60009.0], [85.7, 60009.0], [85.8, 60009.0], [85.9, 60009.0], [86.0, 60009.0], [86.1, 60009.0], [86.2, 60010.0], [86.3, 60010.0], [86.4, 60010.0], [86.5, 60010.0], [86.6, 60010.0], [86.7, 60010.0], [86.8, 60010.0], [86.9, 60010.0], [87.0, 60010.0], [87.1, 60010.0], [87.2, 60011.0], [87.3, 60011.0], [87.4, 60011.0], [87.5, 60011.0], [87.6, 60011.0], [87.7, 60011.0], [87.8, 60011.0], [87.9, 60011.0], [88.0, 60011.0], [88.1, 60012.0], [88.2, 60012.0], [88.3, 60012.0], [88.4, 60012.0], [88.5, 60012.0], [88.6, 60012.0], [88.7, 60012.0], [88.8, 60012.0], [88.9, 60013.0], [89.0, 60013.0], [89.1, 60013.0], [89.2, 60013.0], [89.3, 60013.0], [89.4, 60013.0], [89.5, 60014.0], [89.6, 60014.0], [89.7, 60014.0], [89.8, 60014.0], [89.9, 60014.0], [90.0, 60015.0], [90.1, 60015.0], [90.2, 60015.0], [90.3, 60015.0], [90.4, 60015.0], [90.5, 60016.0], [90.6, 60016.0], [90.7, 60016.0], [90.8, 60016.0], [90.9, 60017.0], [91.0, 60017.0], [91.1, 60017.0], [91.2, 60017.0], [91.3, 60018.0], [91.4, 60018.0], [91.5, 60018.0], [91.6, 60019.0], [91.7, 60019.0], [91.8, 60019.0], [91.9, 60020.0], [92.0, 60020.0], [92.1, 60020.0], [92.2, 60021.0], [92.3, 60021.0], [92.4, 60022.0], [92.5, 60022.0], [92.6, 60022.0], [92.7, 60023.0], [92.8, 60023.0], [92.9, 60024.0], [93.0, 60025.0], [93.1, 60025.0], [93.2, 60026.0], [93.3, 60027.0], [93.4, 60027.0], [93.5, 60028.0], [93.6, 60029.0], [93.7, 60029.0], [93.8, 60030.0], [93.9, 60031.0], [94.0, 60032.0], [94.1, 60033.0], [94.2, 60034.0], [94.3, 60035.0], [94.4, 60037.0], [94.5, 60038.0], [94.6, 60040.0], [94.7, 60042.0], [94.8, 60044.0], [94.9, 60047.0], [95.0, 60051.0], [95.1, 60055.0], [95.2, 60060.0], [95.3, 60066.0], [95.4, 60076.0], [95.5, 60086.0], [95.6, 60099.0], [95.7, 60119.0], [95.8, 60137.0], [95.9, 60157.0], [96.0, 60174.0], [96.1, 60198.0], [96.2, 60238.0], [96.3, 60300.0], [96.4, 60333.0], [96.5, 60369.0], [96.6, 60421.0], [96.7, 60507.0], [96.8, 60627.0], [96.9, 60673.0], [97.0, 60726.0], [97.1, 60940.0], [97.2, 61368.0], [97.3, 61838.0], [97.4, 63770.0], [97.5, 64875.0], [97.6, 65918.0], [97.7, 66641.0], [97.8, 67077.0], [97.9, 67431.0], [98.0, 67686.0], [98.1, 67978.0], [98.2, 68481.0], [98.3, 69843.0], [98.4, 77910.0], [98.5, 82401.0], [98.6, 88911.0], [98.7, 91362.0], [98.8, 93127.0], [98.9, 95361.0], [99.0, 97227.0], [99.1, 99681.0], [99.2, 102470.0], [99.3, 106608.0], [99.4, 111163.0], [99.5, 114918.0], [99.6, 121254.0], [99.7, 125719.0], [99.8, 129389.0], [99.9, 133741.0], [100.0, 135524.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 800.0, "maxY": 43840.0, "series": [{"data": [[135200.0, 47.0], [66700.0, 45.0], [69900.0, 32.0], [73100.0, 5.0], [76300.0, 1.0], [79500.0, 1.0], [82700.0, 2.0], [85900.0, 1.0], [89100.0, 8.0], [92300.0, 13.0], [95500.0, 10.0], [101900.0, 10.0], [98700.0, 1.0], [105100.0, 5.0], [111500.0, 3.0], [117900.0, 1.0], [121100.0, 5.0], [124300.0, 15.0], [127500.0, 3.0], [32900.0, 22.0], [34500.0, 24.0], [134700.0, 6.0], [36100.0, 119.0], [37700.0, 29.0], [40900.0, 16.0], [39300.0, 18.0], [42500.0, 42.0], [44100.0, 3.0], [45700.0, 359.0], [47300.0, 4.0], [48900.0, 3.0], [50500.0, 7.0], [52100.0, 331.0], [53700.0, 3.0], [56900.0, 2.0], [55300.0, 4.0], [58500.0, 61.0], [60100.0, 1006.0], [63300.0, 13.0], [61700.0, 17.0], [64900.0, 8.0], [65800.0, 14.0], [69000.0, 3.0], [72200.0, 4.0], [75400.0, 2.0], [78600.0, 4.0], [81800.0, 4.0], [88200.0, 8.0], [91400.0, 15.0], [97800.0, 5.0], [94600.0, 9.0], [101000.0, 4.0], [104200.0, 6.0], [107400.0, 3.0], [113800.0, 6.0], [110600.0, 1.0], [117000.0, 1.0], [120200.0, 4.0], [126600.0, 9.0], [123400.0, 6.0], [132400.0, 1.0], [800.0, 3.0], [900.0, 5.0], [1000.0, 2.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 1.0], [1400.0, 5.0], [1500.0, 5.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 8.0], [1900.0, 4.0], [2000.0, 6.0], [2100.0, 3.0], [2300.0, 4.0], [2200.0, 1.0], [2400.0, 7.0], [2500.0, 4.0], [2600.0, 3.0], [2700.0, 5.0], [2800.0, 4.0], [2900.0, 6.0], [3000.0, 5.0], [3100.0, 3.0], [3200.0, 6.0], [3300.0, 6.0], [3400.0, 6.0], [3500.0, 5.0], [3600.0, 7.0], [3700.0, 3.0], [3800.0, 5.0], [3900.0, 7.0], [4000.0, 6.0], [4200.0, 6.0], [68100.0, 48.0], [4400.0, 5.0], [4600.0, 10.0], [4800.0, 13.0], [77700.0, 4.0], [74500.0, 1.0], [5000.0, 5.0], [80900.0, 2.0], [5200.0, 9.0], [5400.0, 9.0], [5600.0, 12.0], [87300.0, 4.0], [5800.0, 13.0], [90500.0, 1.0], [93700.0, 6.0], [6000.0, 13.0], [96900.0, 11.0], [6200.0, 15.0], [6400.0, 23.0], [6600.0, 14.0], [103300.0, 10.0], [6800.0, 22.0], [109700.0, 5.0], [106500.0, 9.0], [7000.0, 9.0], [7400.0, 8.0], [7200.0, 2.0], [116100.0, 8.0], [7600.0, 18.0], [122500.0, 2.0], [119300.0, 7.0], [7800.0, 20.0], [125700.0, 5.0], [8000.0, 14.0], [128900.0, 6.0], [8400.0, 21.0], [8800.0, 60.0], [9200.0, 1432.0], [9600.0, 2418.0], [10000.0, 2402.0], [10400.0, 2171.0], [10800.0, 1463.0], [11200.0, 2209.0], [11600.0, 1408.0], [12000.0, 761.0], [12400.0, 1935.0], [12800.0, 2642.0], [13200.0, 1229.0], [13600.0, 3187.0], [14000.0, 1257.0], [14800.0, 1224.0], [14400.0, 1315.0], [15200.0, 616.0], [15600.0, 968.0], [16000.0, 1081.0], [16800.0, 734.0], [17600.0, 286.0], [18400.0, 22.0], [19200.0, 49.0], [20000.0, 46.0], [20800.0, 268.0], [21600.0, 15.0], [22400.0, 9.0], [23200.0, 11.0], [24000.0, 30.0], [24800.0, 52.0], [25600.0, 32.0], [26400.0, 101.0], [27200.0, 26.0], [28000.0, 174.0], [29600.0, 28.0], [28800.0, 13.0], [30400.0, 77.0], [31200.0, 7.0], [32000.0, 196.0], [33600.0, 310.0], [35200.0, 13.0], [36800.0, 15.0], [38400.0, 9.0], [40000.0, 120.0], [41600.0, 2.0], [43200.0, 71.0], [44800.0, 220.0], [46400.0, 9.0], [49600.0, 152.0], [52800.0, 234.0], [51200.0, 13.0], [54400.0, 4.0], [59200.0, 8.0], [57600.0, 3.0], [60800.0, 121.0], [62400.0, 12.0], [64000.0, 2.0], [67200.0, 44.0], [70400.0, 4.0], [76800.0, 1.0], [83200.0, 1.0], [89600.0, 8.0], [92800.0, 6.0], [96000.0, 11.0], [99200.0, 2.0], [105600.0, 5.0], [102400.0, 7.0], [108800.0, 2.0], [112000.0, 5.0], [118400.0, 3.0], [115200.0, 2.0], [124800.0, 8.0], [128000.0, 1.0], [134400.0, 2.0], [132100.0, 1.0], [67100.0, 23.0], [70300.0, 7.0], [73500.0, 1.0], [76700.0, 1.0], [79900.0, 2.0], [89500.0, 13.0], [92700.0, 6.0], [95900.0, 5.0], [102300.0, 12.0], [105500.0, 3.0], [108700.0, 3.0], [111900.0, 9.0], [118300.0, 2.0], [115100.0, 1.0], [121500.0, 1.0], [124700.0, 2.0], [33100.0, 64.0], [34700.0, 19.0], [133900.0, 2.0], [36300.0, 251.0], [37900.0, 428.0], [39500.0, 38.0], [42700.0, 75.0], [41100.0, 20.0], [44300.0, 8.0], [45900.0, 3.0], [47500.0, 6.0], [49100.0, 1.0], [50700.0, 12.0], [52300.0, 207.0], [53900.0, 8.0], [58700.0, 118.0], [60300.0, 519.0], [61900.0, 6.0], [65100.0, 24.0], [63500.0, 6.0], [66200.0, 30.0], [69400.0, 13.0], [79000.0, 1.0], [82200.0, 30.0], [85400.0, 2.0], [88600.0, 13.0], [91800.0, 22.0], [98200.0, 14.0], [95000.0, 11.0], [101400.0, 10.0], [107800.0, 1.0], [111000.0, 54.0], [114200.0, 6.0], [117400.0, 1.0], [120600.0, 4.0], [123800.0, 6.0], [130200.0, 1.0], [127000.0, 4.0], [68500.0, 9.0], [78100.0, 5.0], [81300.0, 2.0], [90900.0, 2.0], [94100.0, 8.0], [97300.0, 26.0], [100500.0, 9.0], [103700.0, 5.0], [110100.0, 3.0], [106900.0, 1.0], [113300.0, 1.0], [116500.0, 5.0], [126100.0, 14.0], [122900.0, 2.0], [129300.0, 46.0], [133400.0, 2.0], [16900.0, 591.0], [17700.0, 360.0], [18500.0, 27.0], [19300.0, 32.0], [20100.0, 72.0], [20900.0, 128.0], [21700.0, 12.0], [22500.0, 17.0], [23300.0, 109.0], [24100.0, 19.0], [24900.0, 209.0], [25700.0, 26.0], [26500.0, 260.0], [27300.0, 44.0], [28100.0, 24.0], [28900.0, 12.0], [29700.0, 22.0], [30500.0, 59.0], [31300.0, 16.0], [32100.0, 258.0], [33800.0, 85.0], [35400.0, 13.0], [37000.0, 24.0], [38600.0, 7.0], [40200.0, 89.0], [43400.0, 5.0], [45000.0, 104.0], [46600.0, 9.0], [48200.0, 9.0], [49800.0, 250.0], [53000.0, 75.0], [51400.0, 6.0], [54600.0, 20.0], [56200.0, 4.0], [57800.0, 10.0], [59400.0, 8.0], [61000.0, 61.0], [62600.0, 13.0], [67600.0, 110.0], [70800.0, 1.0], [77200.0, 2.0], [74000.0, 2.0], [90000.0, 5.0], [86800.0, 1.0], [93200.0, 6.0], [96400.0, 11.0], [99600.0, 8.0], [106000.0, 3.0], [102800.0, 6.0], [109200.0, 4.0], [112400.0, 10.0], [115600.0, 9.0], [122000.0, 2.0], [118800.0, 1.0], [125200.0, 4.0], [128400.0, 2.0], [134500.0, 6.0], [67500.0, 57.0], [70700.0, 4.0], [77100.0, 3.0], [89900.0, 18.0], [86700.0, 1.0], [93100.0, 6.0], [96300.0, 7.0], [99500.0, 2.0], [105900.0, 1.0], [102700.0, 3.0], [109100.0, 5.0], [112300.0, 4.0], [118700.0, 5.0], [115500.0, 1.0], [125100.0, 8.0], [132200.0, 5.0], [33300.0, 22.0], [34900.0, 8.0], [36500.0, 30.0], [38100.0, 105.0], [39700.0, 39.0], [41300.0, 2.0], [42900.0, 185.0], [44500.0, 26.0], [46100.0, 3.0], [47700.0, 2.0], [50900.0, 20.0], [49300.0, 1.0], [52500.0, 235.0], [54100.0, 13.0], [57300.0, 2.0], [55700.0, 4.0], [60500.0, 173.0], [62100.0, 3.0], [65300.0, 32.0], [63700.0, 12.0], [66600.0, 36.0], [69800.0, 21.0], [73000.0, 3.0], [82600.0, 1.0], [89000.0, 19.0], [92200.0, 19.0], [95400.0, 5.0], [101800.0, 3.0], [105000.0, 3.0], [111400.0, 10.0], [114600.0, 4.0], [117800.0, 3.0], [121000.0, 5.0], [124200.0, 11.0], [130600.0, 2.0], [134000.0, 2.0], [131700.0, 4.0], [68900.0, 10.0], [65700.0, 1.0], [72100.0, 1.0], [81700.0, 9.0], [78500.0, 1.0], [84900.0, 1.0], [88100.0, 10.0], [91300.0, 8.0], [97700.0, 11.0], [94500.0, 6.0], [100900.0, 3.0], [104100.0, 5.0], [107300.0, 4.0], [113700.0, 1.0], [120100.0, 3.0], [126500.0, 3.0], [123300.0, 1.0], [8500.0, 25.0], [8900.0, 51.0], [9300.0, 1807.0], [9700.0, 2656.0], [10100.0, 2798.0], [10500.0, 2754.0], [10900.0, 1337.0], [11300.0, 2318.0], [11700.0, 1644.0], [12100.0, 920.0], [12500.0, 1349.0], [12900.0, 2570.0], [13300.0, 699.0], [13700.0, 3121.0], [14100.0, 1248.0], [14500.0, 692.0], [14900.0, 1134.0], [15300.0, 539.0], [15700.0, 1378.0], [16100.0, 998.0], [17000.0, 885.0], [17800.0, 642.0], [18600.0, 19.0], [19400.0, 17.0], [20200.0, 69.0], [21000.0, 72.0], [21800.0, 20.0], [22600.0, 11.0], [23400.0, 162.0], [24200.0, 34.0], [25000.0, 203.0], [25800.0, 34.0], [26600.0, 261.0], [27400.0, 51.0], [28200.0, 5.0], [29000.0, 9.0], [29800.0, 58.0], [30600.0, 13.0], [31400.0, 41.0], [32200.0, 204.0], [34000.0, 16.0], [133500.0, 1.0], [35600.0, 30.0], [37200.0, 25.0], [38800.0, 9.0], [40400.0, 80.0], [42000.0, 5.0], [43600.0, 5.0], [46800.0, 6.0], [45200.0, 122.0], [48400.0, 8.0], [50000.0, 56.0], [53200.0, 36.0], [51600.0, 22.0], [54800.0, 8.0], [56400.0, 5.0], [59600.0, 12.0], [61200.0, 13.0], [62800.0, 13.0], [64400.0, 18.0], [68000.0, 62.0], [77600.0, 5.0], [87200.0, 1.0], [93600.0, 17.0], [90400.0, 3.0], [96800.0, 15.0], [100000.0, 7.0], [106400.0, 4.0], [103200.0, 3.0], [112800.0, 1.0], [116000.0, 2.0], [122400.0, 1.0], [119200.0, 5.0], [125600.0, 1.0], [133700.0, 3.0], [67900.0, 19.0], [71100.0, 2.0], [80700.0, 1.0], [87100.0, 4.0], [93500.0, 8.0], [90300.0, 5.0], [96700.0, 23.0], [99900.0, 2.0], [106300.0, 13.0], [103100.0, 2.0], [109500.0, 1.0], [112700.0, 1.0], [122300.0, 2.0], [125500.0, 3.0], [128700.0, 4.0], [33500.0, 361.0], [135500.0, 1.0], [35100.0, 23.0], [36700.0, 17.0], [38300.0, 62.0], [39900.0, 232.0], [41500.0, 4.0], [43100.0, 214.0], [44700.0, 78.0], [46300.0, 6.0], [47900.0, 7.0], [51100.0, 5.0], [49500.0, 12.0], [52700.0, 178.0], [54300.0, 6.0], [55900.0, 2.0], [59100.0, 3.0], [57500.0, 4.0], [60700.0, 79.0], [62300.0, 12.0], [65500.0, 21.0], [63900.0, 22.0], [67000.0, 84.0], [70200.0, 8.0], [79800.0, 2.0], [89400.0, 11.0], [86200.0, 1.0], [92600.0, 7.0], [95800.0, 9.0], [102200.0, 5.0], [99000.0, 11.0], [105400.0, 2.0], [111800.0, 10.0], [121400.0, 2.0], [124600.0, 4.0], [127800.0, 2.0], [133200.0, 2.0], [66100.0, 22.0], [69300.0, 26.0], [72500.0, 5.0], [75700.0, 1.0], [82100.0, 2.0], [85300.0, 1.0], [88500.0, 23.0], [91700.0, 17.0], [94900.0, 10.0], [98100.0, 6.0], [101300.0, 5.0], [104500.0, 3.0], [107700.0, 6.0], [110900.0, 4.0], [117300.0, 2.0], [120500.0, 7.0], [123700.0, 9.0], [126900.0, 9.0], [130100.0, 2.0], [135000.0, 21.0], [17100.0, 464.0], [17900.0, 325.0], [18700.0, 22.0], [19500.0, 49.0], [20300.0, 74.0], [21100.0, 32.0], [21900.0, 12.0], [22700.0, 28.0], [23500.0, 136.0], [24300.0, 48.0], [25100.0, 244.0], [25900.0, 46.0], [26700.0, 212.0], [27500.0, 42.0], [28300.0, 16.0], [29100.0, 26.0], [29900.0, 127.0], [30700.0, 16.0], [31500.0, 36.0], [32300.0, 84.0], [34200.0, 14.0], [132700.0, 4.0], [35800.0, 273.0], [37400.0, 15.0], [39000.0, 14.0], [40600.0, 2.0], [42200.0, 11.0], [43800.0, 2.0], [45400.0, 23.0], [47000.0, 1.0], [48600.0, 1.0], [50200.0, 4.0], [51800.0, 17.0], [53400.0, 13.0], [55000.0, 3.0], [58200.0, 7.0], [61400.0, 59.0], [59800.0, 5.0], [63000.0, 5.0], [64600.0, 19.0], [68400.0, 15.0], [84400.0, 1.0], [90800.0, 3.0], [94000.0, 6.0], [97200.0, 17.0], [100400.0, 16.0], [103600.0, 1.0], [110000.0, 3.0], [106800.0, 3.0], [113200.0, 4.0], [116400.0, 15.0], [119600.0, 3.0], [126000.0, 4.0], [129200.0, 29.0], [132000.0, 1.0], [68300.0, 30.0], [71500.0, 1.0], [77900.0, 4.0], [81100.0, 3.0], [84300.0, 1.0], [87500.0, 1.0], [90700.0, 5.0], [93900.0, 6.0], [97100.0, 5.0], [100300.0, 7.0], [103500.0, 10.0], [116300.0, 12.0], [122700.0, 6.0], [119500.0, 3.0], [125900.0, 3.0], [129100.0, 20.0], [133800.0, 1.0], [33700.0, 104.0], [131500.0, 2.0], [35300.0, 11.0], [36900.0, 11.0], [38500.0, 1.0], [40100.0, 62.0], [41700.0, 4.0], [43300.0, 9.0], [44900.0, 179.0], [46500.0, 3.0], [49700.0, 268.0], [52900.0, 62.0], [51300.0, 23.0], [54500.0, 10.0], [56100.0, 1.0], [59300.0, 1.0], [60900.0, 79.0], [62500.0, 16.0], [64100.0, 10.0], [67400.0, 62.0], [70600.0, 3.0], [80200.0, 1.0], [86600.0, 1.0], [89800.0, 7.0], [93000.0, 6.0], [96200.0, 2.0], [102600.0, 12.0], [109000.0, 1.0], [112200.0, 10.0], [115400.0, 3.0], [121800.0, 7.0], [125000.0, 9.0], [128200.0, 2.0], [4100.0, 2.0], [4300.0, 3.0], [66500.0, 21.0], [4500.0, 7.0], [69700.0, 27.0], [72900.0, 4.0], [4700.0, 2.0], [76100.0, 1.0], [4900.0, 5.0], [5100.0, 5.0], [79300.0, 1.0], [5300.0, 10.0], [82500.0, 5.0], [85700.0, 1.0], [5500.0, 23.0], [88900.0, 14.0], [5700.0, 13.0], [92100.0, 16.0], [5900.0, 5.0], [6100.0, 13.0], [95300.0, 18.0], [6300.0, 8.0], [101700.0, 7.0], [98500.0, 4.0], [6500.0, 14.0], [104900.0, 6.0], [6700.0, 15.0], [6900.0, 9.0], [108100.0, 2.0], [7100.0, 9.0], [111300.0, 7.0], [7300.0, 8.0], [117700.0, 2.0], [7500.0, 16.0], [120900.0, 9.0], [7700.0, 14.0], [7900.0, 21.0], [124100.0, 4.0], [8100.0, 9.0], [127300.0, 6.0], [8200.0, 9.0], [8600.0, 58.0], [9000.0, 412.0], [9400.0, 1547.0], [9800.0, 1642.0], [10200.0, 1312.0], [10600.0, 2292.0], [11000.0, 2428.0], [11400.0, 2045.0], [11800.0, 1361.0], [12200.0, 1807.0], [12600.0, 1295.0], [13000.0, 1294.0], [13400.0, 814.0], [13800.0, 1893.0], [14200.0, 1734.0], [14600.0, 947.0], [15000.0, 967.0], [15400.0, 645.0], [15800.0, 1229.0], [16200.0, 688.0], [17200.0, 453.0], [16400.0, 888.0], [18000.0, 206.0], [18800.0, 52.0], [19600.0, 50.0], [20400.0, 55.0], [21200.0, 7.0], [22000.0, 8.0], [22800.0, 79.0], [24400.0, 50.0], [23600.0, 287.0], [25200.0, 157.0], [26000.0, 33.0], [27600.0, 26.0], [26800.0, 16.0], [28400.0, 19.0], [29200.0, 18.0], [30000.0, 117.0], [30800.0, 40.0], [31600.0, 19.0], [32400.0, 18.0], [32800.0, 11.0], [34400.0, 25.0], [135100.0, 27.0], [36000.0, 58.0], [37600.0, 15.0], [40800.0, 1.0], [39200.0, 11.0], [42400.0, 12.0], [44000.0, 7.0], [45600.0, 444.0], [47200.0, 2.0], [50400.0, 6.0], [52000.0, 100.0], [55200.0, 5.0], [53600.0, 11.0], [56800.0, 5.0], [58400.0, 30.0], [60000.0, 43840.0], [61600.0, 13.0], [63200.0, 11.0], [64800.0, 26.0], [68800.0, 18.0], [65600.0, 25.0], [72000.0, 1.0], [75200.0, 2.0], [81600.0, 6.0], [88000.0, 6.0], [91200.0, 6.0], [97600.0, 4.0], [94400.0, 6.0], [100800.0, 8.0], [104000.0, 5.0], [107200.0, 4.0], [123200.0, 5.0], [131200.0, 6.0], [135300.0, 3.0], [68700.0, 9.0], [71900.0, 1.0], [78300.0, 1.0], [81500.0, 5.0], [87900.0, 2.0], [91100.0, 3.0], [97500.0, 12.0], [94300.0, 9.0], [100700.0, 3.0], [103900.0, 1.0], [110300.0, 1.0], [107100.0, 4.0], [113500.0, 1.0], [116700.0, 3.0], [126300.0, 5.0], [123100.0, 1.0], [129500.0, 88.0], [33900.0, 15.0], [35500.0, 25.0], [37100.0, 16.0], [38700.0, 10.0], [40300.0, 135.0], [41900.0, 11.0], [43500.0, 2.0], [46700.0, 1.0], [45100.0, 213.0], [48300.0, 1.0], [49900.0, 244.0], [53100.0, 50.0], [51500.0, 12.0], [54700.0, 8.0], [56300.0, 1.0], [57900.0, 4.0], [61100.0, 50.0], [59500.0, 4.0], [62700.0, 17.0], [64300.0, 7.0], [67800.0, 80.0], [74200.0, 3.0], [77400.0, 1.0], [87000.0, 2.0], [90200.0, 15.0], [93400.0, 6.0], [96600.0, 5.0], [99800.0, 10.0], [106200.0, 9.0], [103000.0, 9.0], [112600.0, 2.0], [115800.0, 10.0], [125400.0, 2.0], [128600.0, 2.0], [134800.0, 12.0], [132500.0, 1.0], [66900.0, 48.0], [70100.0, 27.0], [73300.0, 1.0], [89300.0, 7.0], [92500.0, 13.0], [95700.0, 12.0], [102100.0, 9.0], [98900.0, 3.0], [111700.0, 9.0], [114900.0, 4.0], [118100.0, 2.0], [121300.0, 10.0], [124500.0, 2.0], [127700.0, 2.0], [16500.0, 773.0], [17300.0, 688.0], [18100.0, 76.0], [18900.0, 18.0], [19700.0, 20.0], [20500.0, 52.0], [21300.0, 17.0], [22100.0, 10.0], [22900.0, 42.0], [23700.0, 292.0], [24500.0, 41.0], [25300.0, 57.0], [26100.0, 35.0], [26900.0, 14.0], [27700.0, 167.0], [28500.0, 16.0], [29300.0, 27.0], [30100.0, 188.0], [30900.0, 10.0], [31700.0, 44.0], [32500.0, 7.0], [33000.0, 12.0], [34600.0, 18.0], [134300.0, 4.0], [36200.0, 127.0], [37800.0, 99.0], [39400.0, 18.0], [41000.0, 32.0], [42600.0, 38.0], [44200.0, 10.0], [45800.0, 104.0], [49000.0, 4.0], [50600.0, 4.0], [52200.0, 149.0], [53800.0, 12.0], [55400.0, 1.0], [58600.0, 107.0], [60200.0, 392.0], [61800.0, 7.0], [63400.0, 9.0], [65000.0, 23.0], [66000.0, 39.0], [69200.0, 11.0], [72400.0, 3.0], [78800.0, 4.0], [82000.0, 6.0], [85200.0, 1.0], [88400.0, 9.0], [91600.0, 8.0], [94800.0, 3.0], [98000.0, 16.0], [101200.0, 14.0], [104400.0, 9.0], [114000.0, 6.0], [117200.0, 1.0], [120400.0, 5.0], [126800.0, 7.0], [123600.0, 5.0], [133600.0, 9.0], [131300.0, 1.0], [69100.0, 14.0], [65900.0, 25.0], [72300.0, 2.0], [75500.0, 2.0], [78700.0, 2.0], [81900.0, 1.0], [85100.0, 1.0], [88300.0, 17.0], [91500.0, 4.0], [97900.0, 15.0], [94700.0, 9.0], [101100.0, 4.0], [104300.0, 6.0], [110700.0, 5.0], [120300.0, 2.0], [123500.0, 7.0], [126700.0, 1.0], [34100.0, 14.0], [133100.0, 4.0], [35700.0, 114.0], [37300.0, 18.0], [38900.0, 5.0], [40500.0, 5.0], [42100.0, 12.0], [43700.0, 5.0], [45300.0, 38.0], [46900.0, 8.0], [48500.0, 2.0], [50100.0, 2.0], [51700.0, 10.0], [54900.0, 6.0], [53300.0, 11.0], [58100.0, 3.0], [61300.0, 84.0], [59700.0, 4.0], [62900.0, 12.0], [64500.0, 8.0], [68200.0, 38.0], [71400.0, 1.0], [81000.0, 5.0], [84200.0, 2.0], [90600.0, 4.0], [93800.0, 15.0], [97000.0, 21.0], [100200.0, 4.0], [109800.0, 3.0], [106600.0, 4.0], [116200.0, 13.0], [122600.0, 2.0], [119400.0, 1.0], [125800.0, 5.0], [129000.0, 1.0], [134900.0, 53.0], [67300.0, 97.0], [73700.0, 4.0], [76900.0, 3.0], [83300.0, 1.0], [89700.0, 21.0], [92900.0, 9.0], [96100.0, 12.0], [99300.0, 8.0], [102500.0, 2.0], [108900.0, 2.0], [112100.0, 1.0], [118500.0, 4.0], [115300.0, 5.0], [121700.0, 5.0], [124900.0, 9.0], [128100.0, 3.0], [8300.0, 7.0], [8700.0, 79.0], [9100.0, 1742.0], [9500.0, 1147.0], [9900.0, 2088.0], [10300.0, 1859.0], [10700.0, 1646.0], [11100.0, 2866.0], [11500.0, 2051.0], [11900.0, 1219.0], [12300.0, 1555.0], [12700.0, 1968.0], [13100.0, 1379.0], [13500.0, 1984.0], [13900.0, 1248.0], [14300.0, 1492.0], [14700.0, 1331.0], [15100.0, 726.0], [15500.0, 773.0], [15900.0, 894.0], [16300.0, 605.0], [16600.0, 825.0], [17400.0, 533.0], [18200.0, 487.0], [19000.0, 145.0], [19800.0, 32.0], [21400.0, 18.0], [20600.0, 22.0], [22200.0, 2.0], [23000.0, 47.0], [23800.0, 75.0], [24600.0, 31.0], [25400.0, 24.0], [26200.0, 70.0], [27000.0, 20.0], [28600.0, 13.0], [27800.0, 283.0], [29400.0, 36.0], [30200.0, 127.0], [31000.0, 14.0], [31800.0, 36.0], [32600.0, 19.0], [33200.0, 27.0], [34800.0, 11.0], [36400.0, 29.0], [38000.0, 295.0], [39600.0, 68.0], [41200.0, 15.0], [42800.0, 197.0], [44400.0, 9.0], [46000.0, 1.0], [47600.0, 12.0], [50800.0, 3.0], [49200.0, 3.0], [52400.0, 256.0], [54000.0, 3.0], [55600.0, 3.0], [57200.0, 1.0], [58800.0, 32.0], [60400.0, 261.0], [62000.0, 6.0], [65200.0, 21.0], [63600.0, 12.0], [66400.0, 23.0], [69600.0, 18.0], [79200.0, 1.0], [82400.0, 37.0], [85600.0, 1.0], [88800.0, 12.0], [92000.0, 14.0], [95200.0, 13.0], [101600.0, 13.0], [98400.0, 9.0], [104800.0, 4.0], [108000.0, 2.0], [111200.0, 30.0], [120800.0, 6.0], [124000.0, 2.0], [66300.0, 31.0], [69500.0, 22.0], [72700.0, 3.0], [79100.0, 1.0], [82300.0, 92.0], [85500.0, 1.0], [88700.0, 16.0], [91900.0, 12.0], [98300.0, 10.0], [95100.0, 13.0], [101500.0, 8.0], [104700.0, 8.0], [107900.0, 3.0], [114300.0, 2.0], [111100.0, 86.0], [117500.0, 1.0], [123900.0, 5.0], [127100.0, 6.0], [134600.0, 3.0], [34300.0, 15.0], [132300.0, 1.0], [35900.0, 94.0], [37500.0, 19.0], [39100.0, 18.0], [40700.0, 4.0], [42300.0, 11.0], [43900.0, 3.0], [47100.0, 13.0], [45500.0, 40.0], [48700.0, 2.0], [50300.0, 2.0], [51900.0, 39.0], [53500.0, 1.0], [55100.0, 7.0], [56700.0, 3.0], [58300.0, 8.0], [59900.0, 1.0], [63100.0, 11.0], [61500.0, 54.0], [64700.0, 64.0], [68600.0, 7.0], [75000.0, 1.0], [78200.0, 1.0], [91000.0, 8.0], [94200.0, 10.0], [97400.0, 18.0], [100600.0, 13.0], [103800.0, 3.0], [110200.0, 3.0], [107000.0, 5.0], [113400.0, 5.0], [116600.0, 4.0], [119800.0, 1.0], [123000.0, 4.0], [126200.0, 2.0], [129400.0, 53.0], [134100.0, 8.0], [67700.0, 94.0], [86900.0, 2.0], [90100.0, 12.0], [93300.0, 9.0], [96500.0, 13.0], [99700.0, 2.0], [106100.0, 7.0], [102900.0, 5.0], [109300.0, 3.0], [112500.0, 1.0], [115700.0, 1.0], [122100.0, 4.0], [118900.0, 1.0], [125300.0, 6.0], [128500.0, 3.0], [131800.0, 1.0], [16700.0, 471.0], [17500.0, 282.0], [18300.0, 295.0], [19100.0, 34.0], [19900.0, 22.0], [20700.0, 351.0], [21500.0, 11.0], [22300.0, 10.0], [23100.0, 52.0], [23900.0, 52.0], [24700.0, 63.0], [25500.0, 27.0], [26300.0, 112.0], [27100.0, 22.0], [27900.0, 249.0], [28700.0, 18.0], [29500.0, 84.0], [30300.0, 143.0], [31100.0, 7.0], [31900.0, 111.0], [32700.0, 18.0], [33400.0, 80.0], [35000.0, 17.0], [36600.0, 14.0], [38200.0, 16.0], [39800.0, 80.0], [41400.0, 7.0], [43000.0, 185.0], [44600.0, 27.0], [46200.0, 9.0], [47800.0, 5.0], [51000.0, 17.0], [49400.0, 4.0], [52600.0, 116.0], [54200.0, 6.0], [55800.0, 2.0], [59000.0, 8.0], [60600.0, 414.0], [62200.0, 13.0], [65400.0, 23.0], [63800.0, 24.0], [66800.0, 20.0], [70000.0, 24.0], [76400.0, 1.0], [79600.0, 2.0], [82800.0, 2.0], [89200.0, 4.0], [92400.0, 6.0], [95600.0, 12.0], [102000.0, 6.0], [98800.0, 2.0], [105200.0, 6.0], [111600.0, 18.0], [114800.0, 3.0], [118000.0, 2.0], [121200.0, 7.0], [124400.0, 8.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 135500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 22.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 151876.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 22.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 151876.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 48102.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.66172562E12, "maxY": 1000.0, "series": [{"data": [[1.6617285E12, 1000.0], [1.66173012E12, 1000.0], [1.66172688E12, 1000.0], [1.66172628E12, 1000.0], [1.6617279E12, 1000.0], [1.66173072E12, 1000.0], [1.6617273E12, 1000.0], [1.66172892E12, 1000.0], [1.66172568E12, 1000.0], [1.66173054E12, 1000.0], [1.6617267E12, 1000.0], [1.66172952E12, 1000.0], [1.66173114E12, 1000.0], [1.66172706E12, 1000.0], [1.6617303E12, 1000.0], [1.66172928E12, 1000.0], [1.6617309E12, 1000.0], [1.66172646E12, 1000.0], [1.66172868E12, 1000.0], [1.6617291E12, 1000.0], [1.66173132E12, 272.54428044280456], [1.66172586E12, 1000.0], [1.66172808E12, 1000.0], [1.66172748E12, 1000.0], [1.6617297E12, 1000.0], [1.66172754E12, 1000.0], [1.66172916E12, 1000.0], [1.66172592E12, 1000.0], [1.66173078E12, 1000.0], [1.66172694E12, 1000.0], [1.66172976E12, 1000.0], [1.66173138E12, 1.0], [1.66172958E12, 1000.0], [1.66172634E12, 1000.0], [1.66172856E12, 1000.0], [1.66172574E12, 1000.0], [1.66172796E12, 1000.0], [1.66173018E12, 1000.0], [1.66172934E12, 1000.0], [1.6617261E12, 1000.0], [1.66172832E12, 1000.0], [1.66172772E12, 1000.0], [1.66172994E12, 1000.0], [1.66173036E12, 1000.0], [1.66172712E12, 1000.0], [1.66172652E12, 1000.0], [1.66172814E12, 1000.0], [1.66172874E12, 1000.0], [1.66173096E12, 1000.0], [1.66172658E12, 1000.0], [1.66172982E12, 1000.0], [1.6617288E12, 1000.0], [1.66172598E12, 1000.0], [1.66173042E12, 1000.0], [1.6617276E12, 1000.0], [1.66173084E12, 1000.0], [1.66172862E12, 1000.0], [1.661727E12, 1000.0], [1.66172922E12, 1000.0], [1.6617306E12, 1000.0], [1.66172736E12, 1000.0], [1.66172838E12, 1000.0], [1.66172676E12, 1000.0], [1.66172898E12, 1000.0], [1.6617312E12, 991.8179999999988], [1.6617294E12, 1000.0], [1.66173102E12, 1000.0], [1.66172616E12, 1000.0], [1.66172778E12, 1000.0], [1.66172718E12, 1000.0], [1.66173E12, 1000.0], [1.66172886E12, 1000.0], [1.66173108E12, 1000.0], [1.66172562E12, 990.1016189290152], [1.66172784E12, 1000.0], [1.66172724E12, 1000.0], [1.66172946E12, 1000.0], [1.66172826E12, 1000.0], [1.66172988E12, 1000.0], [1.66172664E12, 1000.0], [1.66172766E12, 1000.0], [1.66172604E12, 1000.0], [1.66173048E12, 1000.0], [1.66172964E12, 1000.0], [1.66173126E12, 847.6919087136934], [1.6617264E12, 1000.0], [1.66172802E12, 1000.0], [1.66172742E12, 1000.0], [1.6617258E12, 1000.0], [1.66173024E12, 1000.0], [1.66172682E12, 1000.0], [1.66173006E12, 1000.0], [1.66172904E12, 1000.0], [1.66172622E12, 1000.0], [1.66172844E12, 1000.0], [1.66173066E12, 1000.0]], "isOverall": false, "label": "Thread Group Create Type", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173138E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1958.0, "minX": 1.0, "maxY": 60058.0, "series": [{"data": [[2.0, 60015.0], [3.0, 60003.0], [4.0, 60009.0], [5.0, 60008.0], [6.0, 60006.0], [7.0, 60014.0], [8.0, 60019.0], [9.0, 60005.0], [10.0, 60005.0], [11.0, 60005.0], [12.0, 60014.0], [13.0, 60006.0], [14.0, 60008.0], [15.0, 60010.0], [16.0, 60006.0], [17.0, 60008.0], [18.0, 60009.0], [19.0, 60005.0], [20.0, 60004.0], [21.0, 60002.0], [22.0, 60002.0], [23.0, 60015.0], [24.0, 60009.0], [25.0, 60016.0], [26.0, 60028.0], [27.0, 60028.0], [28.0, 60008.0], [29.0, 60005.0], [30.0, 60007.0], [31.0, 60010.0], [32.0, 60006.0], [35.0, 60008.0], [34.0, 60008.0], [37.0, 60004.0], [36.0, 60008.0], [39.0, 60023.0], [38.0, 60005.0], [41.0, 60003.0], [40.0, 60025.0], [43.0, 60011.0], [42.0, 60004.0], [45.0, 60010.0], [44.0, 60010.0], [47.0, 60023.0], [46.0, 60024.0], [49.0, 60025.5], [51.0, 60025.0], [50.0, 60025.0], [53.0, 60027.0], [52.0, 60026.0], [55.0, 60036.0], [54.0, 60035.0], [57.0, 60038.0], [56.0, 60037.0], [59.0, 60014.0], [58.0, 60011.0], [61.0, 60019.0], [60.0, 60019.0], [63.0, 60021.0], [62.0, 60019.0], [67.0, 60030.0], [66.0, 60029.0], [65.0, 60021.0], [64.0, 60021.0], [71.0, 60007.0], [70.0, 60006.0], [69.0, 60043.0], [68.0, 60030.0], [75.0, 60004.0], [74.0, 60004.0], [73.0, 60006.0], [72.0, 60007.0], [79.0, 60007.0], [78.0, 60006.0], [77.0, 60005.0], [76.0, 60006.0], [83.0, 60005.0], [82.0, 60004.0], [81.0, 60004.0], [80.0, 60005.0], [87.0, 60011.0], [86.0, 60007.0], [85.0, 60013.0], [84.0, 60005.0], [91.0, 60007.0], [90.0, 60006.0], [89.0, 60007.0], [88.0, 60005.0], [95.0, 60008.0], [94.0, 60008.0], [93.0, 60007.0], [92.0, 60006.0], [99.0, 60005.0], [98.0, 60005.0], [97.0, 60005.0], [96.0, 60005.0], [103.0, 60007.0], [102.0, 60013.0], [101.0, 60002.0], [100.0, 60004.0], [107.0, 60006.0], [106.0, 60006.0], [105.0, 60005.0], [104.0, 60008.0], [111.0, 60005.0], [110.0, 60006.0], [109.0, 60005.0], [108.0, 60008.0], [115.0, 60005.0], [114.0, 60005.0], [113.0, 60005.0], [112.0, 60005.0], [119.0, 60010.0], [118.0, 60007.0], [117.0, 60006.0], [116.0, 60004.0], [123.0, 60018.0], [122.0, 60009.0], [121.0, 60009.0], [120.0, 60009.0], [127.0, 60004.0], [126.0, 60003.0], [125.0, 60004.0], [124.0, 60019.0], [135.0, 60003.0], [134.0, 60005.0], [133.0, 60006.0], [132.0, 60004.0], [131.0, 60004.0], [130.0, 60005.0], [129.0, 60005.0], [128.0, 60004.0], [143.0, 60005.0], [142.0, 60005.0], [141.0, 60007.0], [140.0, 60007.0], [139.0, 60008.0], [138.0, 60005.0], [137.0, 60004.0], [136.0, 60003.0], [151.0, 60007.0], [150.0, 60007.0], [149.0, 60008.0], [148.0, 60007.0], [147.0, 60007.0], [146.0, 60006.0], [145.0, 60006.5], [159.0, 60004.0], [158.0, 60009.0], [157.0, 60008.0], [156.0, 60010.0], [155.0, 60010.0], [154.0, 60009.0], [153.0, 60009.0], [152.0, 60009.0], [167.0, 60009.0], [166.0, 60009.0], [164.0, 60005.0], [163.0, 60004.0], [162.0, 60006.0], [161.0, 60005.0], [160.0, 60004.0], [175.0, 60002.0], [174.0, 60001.0], [173.0, 60004.0], [172.0, 60004.0], [171.0, 60005.0], [170.0, 60004.0], [169.0, 60004.0], [168.0, 60006.0], [183.0, 60020.0], [182.0, 60018.0], [180.0, 60020.0], [179.0, 60005.0], [178.0, 60004.0], [177.0, 60004.0], [176.0, 60009.0], [191.0, 60006.0], [190.0, 60006.0], [189.0, 60008.0], [188.0, 60007.0], [187.0, 60007.0], [186.0, 60007.0], [185.0, 60006.0], [184.0, 60020.5], [199.0, 60008.0], [198.0, 60007.0], [197.0, 60007.0], [196.0, 60007.0], [195.0, 60007.0], [194.0, 60006.0], [193.0, 60002.0], [192.0, 60003.0], [207.0, 60007.5], [205.0, 60011.0], [204.0, 60004.0], [203.0, 60004.0], [202.0, 60008.0], [201.0, 60008.0], [200.0, 60008.0], [215.0, 60008.0], [214.0, 60010.0], [213.0, 60012.0], [212.0, 60008.0], [211.0, 60004.0], [210.0, 60003.0], [209.0, 60004.0], [208.0, 60005.0], [223.0, 60006.0], [219.0, 60007.0], [218.0, 60006.0], [217.0, 60008.0], [216.0, 60010.0], [231.0, 60039.0], [230.0, 60039.5], [228.0, 60009.0], [227.0, 60010.0], [226.0, 60005.0], [225.0, 60005.0], [224.0, 60007.0], [239.0, 60039.0], [238.0, 60039.0], [237.0, 60040.0], [236.0, 60039.0], [235.0, 60041.0], [234.0, 60040.0], [233.0, 60040.0], [232.0, 60040.0], [247.0, 60036.0], [246.0, 60037.0], [245.0, 60039.0], [244.0, 60040.0], [243.0, 60039.0], [242.0, 60037.0], [241.0, 60038.75], [240.0, 60040.0], [254.0, 60018.0], [253.0, 60015.0], [252.0, 60011.0], [251.0, 60011.0], [250.0, 60009.0], [249.0, 60010.0], [248.0, 60037.0], [270.0, 60010.0], [271.0, 60010.0], [269.0, 60009.0], [268.0, 60013.0], [267.0, 60006.0], [266.0, 60006.0], [265.0, 60007.0], [264.0, 60031.0], [263.0, 60030.0], [257.0, 60027.0], [256.0, 60021.0], [259.0, 60025.0], [258.0, 60024.0], [262.0, 60027.0], [261.0, 60027.0], [286.0, 60006.0], [287.0, 60016.0], [285.0, 60008.0], [284.0, 60007.0], [283.0, 60009.0], [282.0, 60010.0], [281.0, 60012.0], [280.0, 60010.0], [279.0, 60014.0], [273.0, 60010.0], [272.0, 60010.0], [275.0, 60058.0], [274.0, 60008.0], [278.0, 60009.0], [277.0, 60010.0], [276.0, 60010.0], [302.0, 60008.0], [303.0, 60008.0], [301.0, 60009.0], [300.0, 60003.0], [299.0, 60003.0], [298.0, 60008.0], [297.0, 60009.0], [296.0, 60007.0], [295.0, 60009.0], [289.0, 60004.0], [288.0, 60015.0], [291.0, 60006.0], [290.0, 60005.0], [294.0, 60008.0], [293.0, 60011.0], [292.0, 60006.0], [318.0, 60007.0], [319.0, 60009.0], [317.0, 60008.0], [316.0, 60008.0], [315.0, 60008.0], [314.0, 60004.0], [313.0, 60004.0], [312.0, 60004.0], [311.0, 60004.0], [305.0, 60009.0], [304.0, 60009.0], [307.0, 60008.0], [306.0, 60009.0], [310.0, 60008.0], [309.0, 60009.0], [308.0, 60009.0], [334.0, 60017.0], [321.0, 30409.0], [320.0, 60005.0], [323.0, 60006.0], [322.0, 60006.0], [327.0, 60014.0], [326.0, 60009.0], [325.0, 60003.0], [324.0, 60003.0], [335.0, 60004.0], [333.0, 60019.0], [332.0, 60017.0], [331.0, 60016.0], [330.0, 60013.0], [329.0, 60013.0], [328.0, 60015.0], [349.0, 30482.0], [338.0, 30442.0], [337.0, 60009.0], [336.0, 60009.0], [342.0, 12722.0], [341.0, 60007.0], [340.0, 60006.0], [343.0, 30461.5], [351.0, 60006.0], [350.0, 60007.0], [348.0, 60009.0], [339.0, 60010.0], [347.0, 60007.0], [346.0, 60006.0], [345.0, 60007.0], [344.0, 60007.0], [366.0, 60009.0], [355.0, 30502.0], [357.0, 30517.0], [356.0, 60015.0], [359.0, 60021.0], [352.0, 60006.0], [354.0, 60004.0], [353.0, 60004.0], [358.0, 60014.0], [365.0, 15849.75], [367.0, 60006.0], [364.0, 60010.0], [363.0, 60009.0], [362.0, 60023.0], [361.0, 60023.0], [360.0, 60022.0], [382.0, 30610.0], [383.0, 60018.0], [381.0, 60019.0], [380.0, 60018.0], [379.0, 60018.0], [378.0, 60017.0], [377.0, 60014.0], [376.0, 60013.0], [375.0, 60013.0], [369.0, 60010.0], [368.0, 60011.0], [371.0, 60009.0], [370.0, 60012.0], [374.0, 60011.0], [373.0, 60010.0], [372.0, 60011.0], [398.0, 60004.0], [399.0, 60009.0], [397.0, 60004.0], [396.0, 60004.0], [395.0, 60004.0], [394.0, 60004.0], [393.0, 60016.0], [392.0, 60017.0], [391.0, 60011.0], [385.0, 60018.0], [384.0, 60017.0], [387.0, 60009.0], [386.0, 60009.0], [390.0, 60009.0], [389.0, 60011.0], [388.0, 60011.0], [415.0, 60023.0], [405.0, 30638.5], [404.0, 60009.0], [408.0, 40435.666666666664], [414.0, 60018.0], [413.0, 60018.0], [412.0, 60006.0], [403.0, 60009.0], [402.0, 60009.0], [401.0, 60009.0], [400.0, 60009.0], [406.0, 60009.0], [411.0, 60006.0], [410.0, 60007.0], [409.0, 60010.0], [430.0, 60021.0], [423.0, 30681.5], [417.0, 60017.0], [416.0, 60021.0], [419.0, 60021.0], [418.0, 60020.0], [422.0, 60012.0], [421.0, 60011.0], [420.0, 60014.0], [431.0, 60022.0], [429.0, 60018.0], [428.0, 60020.0], [427.0, 60026.0], [426.0, 60019.0], [425.0, 60022.0], [424.0, 60019.0], [446.0, 60007.0], [435.0, 16062.0], [434.0, 60006.0], [433.0, 60005.0], [432.0, 60005.0], [439.0, 60003.0], [438.0, 60015.0], [437.0, 60012.0], [436.0, 60012.0], [447.0, 60007.0], [445.0, 60003.0], [444.0, 60007.0], [443.0, 60006.0], [442.0, 60005.0], [441.0, 60007.0], [440.0, 60005.0], [463.0, 60008.0], [451.0, 13196.0], [455.0, 60015.0], [448.0, 60009.0], [450.0, 60008.0], [449.0, 60007.0], [454.0, 60015.0], [453.0, 60008.0], [452.0, 60009.0], [459.0, 30770.5], [462.0, 60009.0], [461.0, 60009.0], [460.0, 60004.0], [458.0, 60016.0], [457.0, 60018.0], [456.0, 60016.0], [479.0, 60007.0], [466.0, 21053.666666666668], [471.0, 60003.0], [465.0, 60009.0], [464.0, 60009.0], [470.0, 60004.0], [469.0, 60008.0], [468.0, 60007.0], [473.0, 16226.75], [478.0, 60003.0], [477.0, 60005.0], [476.0, 60034.0], [467.0, 60014.0], [475.0, 60033.0], [474.0, 60018.0], [472.0, 60004.0], [493.0, 60006.0], [494.0, 60007.0], [492.0, 60006.5], [483.0, 60009.0], [482.0, 60009.0], [481.0, 60007.0], [480.0, 60007.0], [491.0, 60008.0], [490.0, 60007.0], [489.0, 60007.0], [488.0, 60007.0], [487.0, 60007.0], [486.0, 60007.0], [485.0, 60004.0], [484.0, 60008.0], [510.0, 60027.0], [511.0, 60017.0], [509.0, 60027.0], [508.0, 60027.0], [507.0, 60012.0], [506.0, 60008.0], [505.0, 60045.0], [504.0, 60044.0], [503.0, 60026.0], [497.0, 60024.0], [496.0, 60005.5], [499.0, 60012.0], [498.0, 60025.0], [502.0, 60027.0], [501.0, 60011.0], [500.0, 60012.0], [538.0, 60029.0], [542.0, 60010.0], [513.0, 30868.0], [524.0, 11497.000000000002], [523.0, 60015.0], [522.0, 60015.0], [521.0, 60012.0], [520.0, 60012.0], [525.0, 60015.0], [527.0, 60025.0], [512.0, 60017.0], [526.0, 60015.0], [534.0, 30926.0], [535.0, 16416.75], [543.0, 60004.0], [528.0, 60023.0], [531.0, 60025.0], [529.0, 60025.0], [533.0, 60024.0], [532.0, 60026.0], [541.0, 60005.0], [540.0, 60007.0], [539.0, 60006.0], [537.0, 60026.0], [536.0, 60025.0], [519.0, 60012.0], [518.0, 60005.5], [516.0, 60004.0], [515.0, 60005.0], [514.0, 60005.0], [569.0, 60048.0], [573.0, 60048.0], [556.0, 1958.0], [555.0, 60005.0], [554.0, 60010.0], [553.0, 60010.0], [552.0, 60005.0], [558.0, 60005.0], [557.0, 60005.0], [568.0, 60048.0], [551.0, 60004.0], [550.0, 60003.0], [549.0, 60004.0], [548.0, 60004.0], [547.0, 60003.0], [546.0, 60005.0], [545.0, 60005.0], [544.0, 60003.0], [559.0, 60005.0], [562.0, 1969.5], [566.0, 30999.0], [565.0, 60043.0], [564.0, 60010.0], [563.0, 60009.0], [567.0, 60048.0], [574.0, 60049.0], [561.0, 60010.0], [572.0, 60049.0], [571.0, 60049.0], [570.0, 60049.0], [602.0, 60004.0], [606.0, 60009.0], [576.0, 40715.666666666664], [577.0, 21390.333333333332], [581.0, 60007.0], [580.0, 60053.0], [601.0, 60010.25], [582.0, 60008.0], [603.0, 60004.0], [590.0, 31047.5], [588.0, 60010.0], [587.0, 60009.333333333336], [586.0, 60010.0], [585.0, 60010.0], [591.0, 60015.0], [595.0, 31073.0], [598.0, 2094.5], [597.0, 60015.0], [596.0, 60014.0], [607.0, 31037.0], [592.0, 60012.0], [594.0, 60013.0], [593.0, 60012.0], [605.0, 60003.0], [604.0, 60003.0], [633.0, 31075.0], [638.0, 60004.0], [639.0, 60004.5], [627.0, 60009.5], [625.0, 60007.5], [629.0, 60011.0], [628.0, 60008.0], [636.0, 60007.0], [635.0, 60007.0], [634.0, 60007.0], [632.0, 60007.0], [615.0, 60010.0], [614.0, 60010.0], [613.0, 60010.5], [612.0, 60009.0], [611.0, 60010.0], [609.0, 60008.0], [608.0, 60009.0], [623.0, 60011.0], [622.0, 60009.0], [621.0, 60016.0], [620.0, 60019.0], [619.0, 60011.0], [617.0, 60011.0], [616.0, 60009.0], [631.0, 60007.0], [630.0, 60008.0], [667.0, 60006.0], [640.0, 2328.6666666666665], [643.0, 31193.0], [642.0, 60005.0], [641.0, 60004.5], [646.0, 60007.5], [644.0, 60006.0], [664.0, 60009.0], [647.0, 60008.0], [651.0, 13922.0], [650.0, 60006.0], [649.0, 60009.0], [648.0, 60008.0], [652.0, 60007.0], [653.0, 31218.0], [654.0, 60007.0], [661.0, 31228.5], [660.0, 60007.0], [659.0, 60007.0], [658.0, 60004.0], [656.0, 60006.5], [663.0, 60008.0], [662.0, 60008.0], [670.0, 60004.0], [668.0, 60009.0], [666.0, 60006.0], [665.0, 60006.0], [700.0, 60004.0], [673.0, 31250.0], [679.0, 16888.75], [678.0, 60007.0], [677.0, 60007.0], [675.0, 60005.0], [674.0, 60008.0], [696.0, 60016.0], [685.0, 31284.0], [684.0, 60010.0], [682.0, 60009.0], [681.0, 60007.0], [680.0, 60008.0], [687.0, 60009.0], [672.0, 60007.5], [686.0, 60009.0], [703.0, 30927.0], [688.0, 60010.0], [691.0, 60011.0], [690.0, 60010.5], [693.0, 60012.0], [692.0, 60012.0], [695.0, 60017.0], [694.0, 60016.0], [702.0, 60006.0], [701.0, 60004.0], [699.0, 60015.0], [698.0, 60016.0], [732.0, 60004.0], [707.0, 2663.0], [706.0, 60010.0], [705.0, 60008.0], [704.0, 60006.0], [709.0, 60007.0], [708.0, 60008.5], [711.0, 60006.0], [710.0, 60007.0], [719.0, 60008.0], [718.0, 60009.0], [717.0, 60008.0], [729.0, 60016.0], [728.0, 60015.0], [714.0, 31355.0], [713.0, 60006.0], [715.0, 60007.0], [716.0, 31360.0], [735.0, 60006.0], [720.0, 60006.5], [722.0, 60005.0], [721.0, 60005.0], [724.0, 60014.0], [723.0, 60004.0], [727.0, 60015.5], [726.0, 60012.0], [734.0, 60007.0], [733.0, 60005.0], [731.0, 60016.0], [730.0, 60016.0], [762.0, 60013.0], [766.0, 60026.0], [746.0, 31401.0], [745.0, 60020.5], [749.0, 60020.0], [747.0, 60020.0], [751.0, 60019.0], [737.0, 60020.0], [736.0, 60019.0], [739.0, 60020.0], [738.0, 60020.0], [741.0, 60020.0], [740.0, 60014.0], [743.0, 60020.0], [742.0, 60020.0], [750.0, 60020.0], [761.0, 60013.0], [760.0, 60005.0], [754.0, 2761.0], [755.0, 48574.6], [758.0, 60003.0], [756.0, 60004.0], [767.0, 60026.0], [753.0, 60019.0], [752.0, 60018.333333333336], [765.0, 60014.0], [764.0, 60013.0], [763.0, 60016.0], [768.0, 31441.5], [778.0, 40933.333333333336], [777.0, 60006.5], [776.0, 60005.0], [779.0, 31456.0], [783.0, 2910.0], [782.0, 60006.0], [781.0, 60006.0], [780.0, 60006.0], [784.0, 45733.25], [791.0, 31438.0], [790.0, 60015.0], [789.0, 60018.0], [788.0, 60020.0], [787.0, 60017.0], [785.0, 60022.0], [793.0, 31489.5], [792.0, 60009.5], [774.0, 60006.5], [773.0, 60006.0], [771.0, 60005.0], [770.0, 60003.5], [794.0, 60008.0], [796.0, 60014.0], [795.0, 60007.0], [799.0, 60018.0], [797.0, 60017.0], [824.0, 60006.0], [828.0, 60004.0], [826.0, 22039.333333333332], [813.0, 41006.666666666664], [811.0, 60008.0], [810.0, 60007.5], [808.0, 60013.0], [814.0, 60010.0], [800.0, 60014.0], [802.0, 60009.0], [801.0, 60015.5], [805.0, 60013.0], [803.0, 60012.0], [807.0, 60015.5], [806.0, 60014.0], [830.0, 60004.5], [816.0, 60010.0], [820.0, 60009.0], [817.0, 60007.0], [827.0, 60003.0], [825.0, 60005.0], [823.0, 60009.0], [822.0, 60005.0], [837.0, 40978.666666666664], [861.0, 60006.0], [841.0, 31572.5], [840.0, 60006.5], [843.0, 60004.0], [842.0, 60003.0], [846.0, 60005.5], [832.0, 60004.25], [834.0, 60007.0], [833.0, 60008.0], [836.0, 60003.0], [835.0, 60008.0], [844.0, 60006.0], [849.0, 48620.0], [851.0, 31505.0], [850.0, 60009.0], [853.0, 60006.0], [852.0, 60006.0], [855.0, 60024.0], [854.0, 60016.0], [859.0, 31609.0], [862.0, 31501.0], [848.0, 60005.0], [860.0, 60005.0], [858.0, 60006.0], [857.0, 60006.0], [838.0, 60004.0], [889.0, 60009.333333333336], [894.0, 60026.333333333336], [881.0, 3173.0], [882.0, 53709.33333333334], [883.0, 60006.0], [885.0, 60007.333333333336], [884.0, 60005.71428571429], [887.0, 60007.0], [886.0, 60008.0], [890.0, 3280.0], [895.0, 60016.0], [880.0, 60015.0], [893.0, 60018.5625], [891.0, 60010.0], [888.0, 60004.71428571429], [871.0, 60005.0], [870.0, 60004.0], [869.0, 60004.0], [868.0, 60006.4], [867.0, 60007.666666666664], [866.0, 60005.666666666664], [865.0, 60007.5], [864.0, 60005.6], [879.0, 60010.5], [878.0, 60006.0], [877.0, 60012.0], [876.0, 60010.0], [875.0, 60009.0], [874.0, 60008.0], [873.0, 60006.0], [925.0, 60013.976190476176], [900.0, 31256.0], [899.0, 31624.75], [898.0, 60014.28571428571], [897.0, 60016.555555555555], [896.0, 60017.5], [903.0, 41149.666666666664], [902.0, 60008.6], [901.0, 60006.28571428571], [920.0, 60004.5], [922.0, 60004.4], [921.0, 60004.5], [924.0, 60005.454545454544], [923.0, 60005.5], [909.0, 3326.0], [908.0, 60005.5], [907.0, 60005.5], [906.0, 60005.0], [905.0, 60007.0], [904.0, 60006.75], [910.0, 60006.0], [911.0, 45857.75], [915.0, 51958.42857142857], [914.0, 60006.42857142857], [913.0, 60008.666666666664], [912.0, 60009.0], [917.0, 60012.0], [916.0, 60027.28571428572], [919.0, 60008.0], [918.0, 60012.5], [927.0, 60007.5], [926.0, 60005.142857142855], [953.0, 60008.04347826088], [957.0, 60004.5], [934.0, 31772.0], [935.0, 48665.4], [952.0, 60009.857142857145], [954.0, 60004.75], [936.0, 52835.875], [938.0, 60004.8], [937.0, 60005.2], [940.0, 60013.23076923077], [939.0, 60007.625], [941.0, 45851.5], [943.0, 60011.75], [933.0, 60004.99999999999], [932.0, 60008.8], [931.0, 60013.41666666667], [930.0, 60012.75], [929.0, 60012.0], [928.0, 60007.50000000001], [942.0, 60012.625], [947.0, 54364.5], [945.0, 60008.05882352941], [944.0, 60014.62499999999], [949.0, 60009.0], [948.0, 60004.625], [951.0, 60011.85714285713], [950.0, 60006.0], [959.0, 60006.68], [958.0, 60008.0], [956.0, 60005.61538461539], [955.0, 60006.5], [985.0, 60006.88461538461], [989.0, 60005.46153846154], [961.0, 41134.333333333336], [965.0, 41192.83333333333], [964.0, 60012.583333333336], [963.0, 60010.38461538461], [962.0, 60007.16666666667], [966.0, 60008.875], [984.0, 60006.91891891891], [967.0, 60007.142857142855], [986.0, 60006.833333333336], [988.0, 60009.121212121216], [987.0, 60011.07142857143], [969.0, 56241.73333333334], [968.0, 60016.0], [970.0, 40906.666666666664], [972.0, 41207.33333333333], [973.0, 60007.833333333336], [975.0, 60007.0], [960.0, 60005.42857142857], [974.0, 60009.149999999994], [982.0, 54349.50000000001], [981.0, 60005.83333333333], [980.0, 60008.666666666664], [979.0, 60010.0], [978.0, 60008.83928571428], [976.0, 60013.0], [983.0, 60005.91428571429], [991.0, 60003.333333333336], [990.0, 60006.583333333336], [996.0, 51945.28571428571], [992.0, 2875.0], [1000.0, 28083.20571249275], [999.0, 60007.40000000001], [998.0, 60009.91397849464], [997.0, 60007.45263157895], [995.0, 60003.8695652174], [994.0, 60007.791666666664], [993.0, 60008.851851851854], [1.0, 60007.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[997.0498549999795, 28437.84146999977]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4.233333333333333, "minX": 1.66172562E12, "maxY": 568380.2666666667, "series": [{"data": [[1.6617285E12, 4233.333333333333], [1.66173012E12, 4233.333333333333], [1.66172688E12, 174361.85], [1.66172628E12, 165044.16666666666], [1.6617279E12, 120593.0], [1.66173072E12, 4233.333333333333], [1.6617273E12, 9321.4], [1.66172892E12, 4233.333333333333], [1.66172568E12, 253942.93333333332], [1.66173054E12, 4233.333333333333], [1.6617267E12, 148414.4], [1.66172952E12, 4233.333333333333], [1.66173114E12, 4233.333333333333], [1.66172706E12, 149058.8], [1.6617303E12, 4233.333333333333], [1.66172928E12, 4233.333333333333], [1.6617309E12, 4233.333333333333], [1.66172646E12, 178080.56666666668], [1.66172868E12, 4233.333333333333], [1.6617291E12, 4233.333333333333], [1.66173132E12, 2294.4666666666667], [1.66172586E12, 234864.11666666667], [1.66172808E12, 28131.4], [1.66172748E12, 89493.8], [1.6617297E12, 4233.333333333333], [1.66172754E12, 158923.6], [1.66172916E12, 4233.333333333333], [1.66172592E12, 227969.86666666667], [1.66173078E12, 4233.333333333333], [1.66172694E12, 126317.48333333334], [1.66172976E12, 4233.333333333333], [1.66173138E12, 4.233333333333333], [1.66172958E12, 4233.333333333333], [1.66172634E12, 73872.93333333333], [1.66172856E12, 4233.333333333333], [1.66172574E12, 252956.3], [1.66172796E12, 37661.8], [1.66173018E12, 4233.333333333333], [1.66172934E12, 4233.333333333333], [1.6617261E12, 207328.9], [1.66172832E12, 58520.0], [1.66172772E12, 157460.6], [1.66172994E12, 4233.333333333333], [1.66173036E12, 4233.333333333333], [1.66172712E12, 143624.8], [1.66172652E12, 165963.4], [1.66172814E12, 31182.8], [1.66172874E12, 4233.333333333333], [1.66173096E12, 4233.333333333333], [1.66172658E12, 189278.5], [1.66172982E12, 4233.333333333333], [1.6617288E12, 4233.333333333333], [1.66172598E12, 231730.36666666667], [1.66173042E12, 4233.333333333333], [1.6617276E12, 90538.8], [1.66173084E12, 4233.333333333333], [1.66172862E12, 4233.333333333333], [1.661727E12, 121470.8], [1.66172922E12, 4233.333333333333], [1.6617306E12, 4233.333333333333], [1.66172736E12, 173971.6], [1.66172838E12, 45771.0], [1.66172676E12, 145531.35], [1.66172898E12, 4233.333333333333], [1.6617312E12, 4233.333333333333], [1.6617294E12, 4233.333333333333], [1.66173102E12, 4233.333333333333], [1.66172616E12, 197969.43333333332], [1.66172778E12, 67548.8], [1.66172718E12, 84310.6], [1.66173E12, 4233.333333333333], [1.66172886E12, 4233.333333333333], [1.66173108E12, 4233.333333333333], [1.66172562E12, 167674.71666666667], [1.66172784E12, 95847.4], [1.66172724E12, 26501.2], [1.66172946E12, 4233.333333333333], [1.66172826E12, 138608.8], [1.66172988E12, 4233.333333333333], [1.66172664E12, 169640.33333333334], [1.66172766E12, 81802.6], [1.66172604E12, 214014.23333333334], [1.66173048E12, 4233.333333333333], [1.66172964E12, 4233.333333333333], [1.66173126E12, 4080.9333333333334], [1.6617264E12, 83692.01666666666], [1.66172802E12, 131084.8], [1.66172742E12, 103998.4], [1.6617258E12, 239084.23333333334], [1.66173024E12, 4233.333333333333], [1.66172682E12, 149375.41666666666], [1.66173006E12, 4233.333333333333], [1.66172904E12, 4233.333333333333], [1.66172622E12, 197217.33333333334], [1.66172844E12, 10251.833333333334], [1.66173066E12, 4233.333333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6617285E12, 93516.66666666667], [1.66173012E12, 93516.66666666667], [1.66172688E12, 390175.5], [1.66172628E12, 369325.0], [1.6617279E12, 269795.5833333333], [1.66173072E12, 93516.66666666667], [1.6617273E12, 20854.216666666667], [1.66172892E12, 93516.66666666667], [1.66172568E12, 568380.2666666667], [1.66173054E12, 93516.66666666667], [1.6617267E12, 332112.0], [1.66172952E12, 93516.66666666667], [1.66173114E12, 93516.66666666667], [1.66172706E12, 333480.43333333335], [1.6617303E12, 93516.66666666667], [1.66172928E12, 93516.66666666667], [1.6617309E12, 93516.66666666667], [1.66172646E12, 398497.0], [1.66172868E12, 93516.66666666667], [1.6617291E12, 93516.66666666667], [1.66173132E12, 50686.03333333333], [1.66172586E12, 525563.5], [1.66172808E12, 62936.71666666667], [1.66172748E12, 200219.18333333332], [1.6617297E12, 93516.66666666667], [1.66172754E12, 355550.36666666664], [1.66172916E12, 93516.66666666667], [1.66172592E12, 510136.0], [1.66173078E12, 93516.66666666667], [1.66172694E12, 282656.9666666667], [1.66172976E12, 93516.66666666667], [1.66173138E12, 93.51666666666667], [1.66172958E12, 93516.66666666667], [1.66172634E12, 165308.0], [1.66172856E12, 93516.66666666667], [1.66172574E12, 566049.0], [1.66172796E12, 84258.51666666666], [1.66173018E12, 93516.66666666667], [1.66172934E12, 93516.66666666667], [1.6617261E12, 463947.0], [1.66172832E12, 130923.33333333333], [1.66172772E12, 352277.2833333333], [1.66172994E12, 93516.66666666667], [1.66173036E12, 93516.66666666667], [1.66172712E12, 321323.26666666666], [1.66172652E12, 371382.0], [1.66172814E12, 69763.43333333333], [1.66172874E12, 93516.66666666667], [1.66173096E12, 93516.66666666667], [1.66172658E12, 423555.0], [1.66172982E12, 93516.66666666667], [1.6617288E12, 93516.66666666667], [1.66172598E12, 518551.0], [1.66173042E12, 93516.66666666667], [1.6617276E12, 202557.1], [1.66173084E12, 93516.66666666667], [1.66172862E12, 93516.66666666667], [1.661727E12, 271759.43333333335], [1.66172922E12, 93516.66666666667], [1.6617306E12, 93516.66666666667], [1.66172736E12, 389216.36666666664], [1.66172838E12, 102400.75], [1.66172676E12, 325660.5], [1.66172898E12, 93516.66666666667], [1.6617312E12, 93516.66666666667], [1.6617294E12, 93516.66666666667], [1.66173102E12, 93516.66666666667], [1.66172616E12, 443003.0], [1.66172778E12, 151122.93333333332], [1.66172718E12, 188623.11666666667], [1.66173E12, 93516.66666666667], [1.66172886E12, 93516.66666666667], [1.66173108E12, 93516.66666666667], [1.66172562E12, 375317.13333333336], [1.66172784E12, 214433.71666666667], [1.66172724E12, 59289.566666666666], [1.66172946E12, 93516.66666666667], [1.66172826E12, 310101.26666666666], [1.66172988E12, 93516.66666666667], [1.66172664E12, 379610.0], [1.66172766E12, 183012.11666666667], [1.66172604E12, 478907.0], [1.66173048E12, 93516.66666666667], [1.66172964E12, 93516.66666666667], [1.66173126E12, 90150.06666666667], [1.6617264E12, 187280.5], [1.66172802E12, 293268.26666666666], [1.66172742E12, 232669.46666666667], [1.6617258E12, 535007.0], [1.66173024E12, 93516.66666666667], [1.66172682E12, 334262.5], [1.66173006E12, 93516.66666666667], [1.66172904E12, 93516.66666666667], [1.66172622E12, 441320.0], [1.66172844E12, 72943.0], [1.66173066E12, 93516.66666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173138E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 9487.440597758417, "minX": 1.66172562E12, "maxY": 129435.08071748883, "series": [{"data": [[1.6617285E12, 69592.27699999986], [1.66173012E12, 60010.197000000044], [1.66172688E12, 17572.111190989723], [1.66172628E12, 12573.877215189876], [1.6617279E12, 28795.03847487008], [1.66173072E12, 60012.49100000001], [1.6617273E12, 129435.08071748883], [1.66172892E12, 60011.49299999996], [1.66172568E12, 9935.388815789463], [1.66173054E12, 60010.61200000004], [1.6617267E12, 16820.23817567572], [1.66172952E12, 60012.05300000006], [1.66173114E12, 60010.38599999998], [1.66172706E12, 14200.353337072327], [1.6617303E12, 60011.17699999998], [1.66172928E12, 60008.985999999975], [1.6617309E12, 60045.25399999997], [1.66172646E12, 13974.16166119191], [1.66172868E12, 60011.84300000005], [1.6617291E12, 60134.93299999998], [1.66173132E12, 60012.15867158672], [1.66172586E12, 10550.848959259918], [1.66172808E12, 44720.06835066868], [1.66172748E12, 19577.214385800995], [1.6617297E12, 60018.426000000014], [1.66172754E12, 19586.758285113046], [1.66172916E12, 60012.755999999936], [1.66172592E12, 10445.577346041042], [1.66173078E12, 60014.86199999995], [1.66172694E12, 19824.1008931525], [1.66172976E12, 60015.90599999998], [1.66173138E12, 60007.0], [1.66172958E12, 60010.20000000002], [1.66172634E12, 30264.592194570167], [1.66172856E12, 60038.66800000004], [1.66172574E12, 9904.27766765776], [1.66172796E12, 16885.2375138735], [1.66173018E12, 60009.11599999997], [1.66172934E12, 60008.676], [1.6617261E12, 12018.336154776287], [1.66172832E12, 42583.91071428579], [1.66172772E12, 22803.49402707722], [1.66172994E12, 60503.77999999999], [1.66173036E12, 60008.824000000015], [1.66172712E12, 20544.93247962744], [1.66172652E12, 13708.060926485363], [1.66172814E12, 73766.76675603227], [1.66172874E12, 60011.61599999995], [1.66173096E12, 60011.403000000006], [1.66172658E12, 13638.667770419463], [1.66172982E12, 60012.98000000007], [1.6617288E12, 60014.1120000001], [1.66172598E12, 11383.009736747208], [1.66173042E12, 60011.52000000003], [1.6617276E12, 29168.386888273286], [1.66173084E12, 60059.279999999984], [1.66172862E12, 60013.981999999996], [1.661727E12, 20093.44975911911], [1.66172922E12, 60009.86400000002], [1.6617306E12, 60018.53899999997], [1.66172736E12, 31701.019942335417], [1.66172838E12, 20550.357990867607], [1.66172676E12, 17226.52052828016], [1.66172898E12, 60009.78499999999], [1.6617312E12, 60008.38200000002], [1.6617294E12, 60007.71900000005], [1.66173102E12, 60008.804000000004], [1.66172616E12, 12641.739763613286], [1.66172778E12, 37106.39975247521], [1.66172718E12, 26369.18244918194], [1.66173E12, 60337.01599999998], [1.66172886E12, 60010.45799999997], [1.66173108E12, 60011.97099999995], [1.66172562E12, 9487.440597758417], [1.66172784E12, 15990.085477540335], [1.66172724E12, 38430.9905362776], [1.66172946E12, 60009.658999999934], [1.66172826E12, 46700.99698431845], [1.66172988E12, 60012.142000000014], [1.66172664E12, 15672.36083743841], [1.66172766E12, 17176.391926417982], [1.66172604E12, 11749.737016790306], [1.66173048E12, 60011.82500000007], [1.66172964E12, 60013.777000000024], [1.66173126E12, 60010.14315352692], [1.6617264E12, 38353.25711432852], [1.66172802E12, 33342.77359693864], [1.66172742E12, 24757.604099678458], [1.6617258E12, 10447.615693813324], [1.66173024E12, 60012.47200000005], [1.66172682E12, 13002.605034965041], [1.66173006E12, 60009.12900000001], [1.66172904E12, 60420.427000000025], [1.66172622E12, 12734.574576271176], [1.66172844E12, 88371.70769230758], [1.66173066E12, 60011.96599999998]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173138E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 9487.418430884169, "minX": 1.66172562E12, "maxY": 129435.05829596419, "series": [{"data": [[1.6617285E12, 69592.27100000021], [1.66173012E12, 60010.194000000054], [1.66172688E12, 17572.102324466803], [1.66172628E12, 12573.868101265834], [1.6617279E12, 28795.029116117916], [1.66173072E12, 60012.485000000066], [1.6617273E12, 129435.05829596419], [1.66172892E12, 60011.490999999995], [1.66172568E12, 9935.38273026317], [1.66173054E12, 60010.609999999964], [1.6617267E12, 16820.229448198217], [1.66172952E12, 60012.05000000002], [1.66173114E12, 60010.37800000001], [1.66172706E12, 14200.34548513741], [1.6617303E12, 60011.175999999985], [1.66172928E12, 60008.98100000005], [1.6617309E12, 60045.24799999995], [1.66172646E12, 13974.15180666353], [1.66172868E12, 60011.840000000026], [1.6617291E12, 60134.92699999993], [1.66173132E12, 60012.149446494455], [1.66172586E12, 10550.843444227048], [1.66172808E12, 44720.044576522996], [1.66172748E12, 19577.204110228857], [1.6617297E12, 60018.426000000014], [1.66172754E12, 19586.749079431884], [1.66172916E12, 60012.75099999992], [1.66172592E12, 10445.572397360691], [1.66173078E12, 60014.86099999994], [1.66172694E12, 19824.091300033113], [1.66172976E12, 60015.90499999996], [1.66173138E12, 60007.0], [1.66172958E12, 60010.19500000005], [1.66172634E12, 30264.56617647057], [1.66172856E12, 60038.664000000004], [1.66172574E12, 9904.270399735686], [1.66172796E12, 16885.230854605976], [1.66173018E12, 60009.11399999999], [1.66172934E12, 60008.67400000001], [1.6617261E12, 12018.329101168903], [1.66172832E12, 42583.89857142853], [1.66172772E12, 22803.48739049644], [1.66172994E12, 60503.763999999945], [1.66173036E12, 60008.82099999998], [1.66172712E12, 20544.924330616977], [1.66172652E12, 13708.050855991942], [1.66172814E12, 73766.73458445034], [1.66172874E12, 60011.612000000016], [1.66173096E12, 60011.40100000002], [1.66172658E12, 13638.659602649053], [1.66172982E12, 60012.97900000006], [1.6617288E12, 60014.11000000001], [1.66172598E12, 11383.002704651988], [1.66173042E12, 60011.51799999996], [1.6617276E12, 29168.375346260396], [1.66173084E12, 60059.26599999999], [1.66172862E12, 60013.97999999999], [1.661727E12, 20093.437715072287], [1.66172922E12, 60009.860000000044], [1.6617306E12, 60018.534000000036], [1.66172736E12, 31701.008649687774], [1.66172838E12, 20546.284931506845], [1.66172676E12, 17226.513637668653], [1.66172898E12, 60009.78400000002], [1.6617312E12, 60008.378999999986], [1.6617294E12, 60007.71399999997], [1.66173102E12, 60008.79799999999], [1.66172616E12, 12641.731110173085], [1.66172778E12, 37106.39108910887], [1.66172718E12, 26369.168071393186], [1.66173E12, 60337.014999999985], [1.66172886E12, 60010.45799999997], [1.66173108E12, 60011.967000000004], [1.66172562E12, 9487.418430884169], [1.66172784E12, 15990.076319232456], [1.66172724E12, 38430.96687697165], [1.66172946E12, 60009.65499999996], [1.66172826E12, 46700.98642943314], [1.66172988E12, 60012.13999999995], [1.66172664E12, 15672.351970443377], [1.66172766E12, 17176.3817066939], [1.66172604E12, 11749.730378758277], [1.66173048E12, 60011.82100000004], [1.66172964E12, 60013.776000000056], [1.66173126E12, 60010.137966804985], [1.6617264E12, 38353.24613080381], [1.66172802E12, 33342.760841836774], [1.66172742E12, 24757.596463022594], [1.6617258E12, 10447.608703250611], [1.66173024E12, 60012.465999999986], [1.66172682E12, 13002.594965034958], [1.66173006E12, 60009.1229999999], [1.66172904E12, 60420.41399999994], [1.66172622E12, 12734.56694915257], [1.66172844E12, 88369.71282051275], [1.66173066E12, 60011.96300000006]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173138E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.66172562E12, "maxY": 26.816999999999993, "series": [{"data": [[1.6617285E12, 26.816999999999993], [1.66173012E12, 0.15200000000000005], [1.66172688E12, 0.06422238197939156], [1.66172628E12, 0.05139240506329122], [1.6617279E12, 0.07036395147313695], [1.66173072E12, 0.17299999999999993], [1.6617273E12, 0.24215246636771293], [1.66172892E12, 0.1849999999999998], [1.66172568E12, 0.06233552631578928], [1.66173054E12, 0.18599999999999997], [1.6617267E12, 0.0689752252252254], [1.66172952E12, 0.16199999999999995], [1.66173114E12, 0.17400000000000013], [1.66172706E12, 0.06561974200785209], [1.6617303E12, 0.1939999999999998], [1.66172928E12, 0.14300000000000027], [1.6617309E12, 0.6139999999999995], [1.66172646E12, 0.016658845612388545], [1.66172868E12, 0.17299999999999993], [1.6617291E12, 0.6500000000000009], [1.66173132E12, 0.2066420664206641], [1.66172586E12, 0.030777441736345876], [1.66172808E12, 0.0], [1.66172748E12, 0.0], [1.6617297E12, 0.1670000000000001], [1.66172754E12, 0.057075223566543744], [1.66172916E12, 0.23299999999999998], [1.66172592E12, 0.057734604105571775], [1.66173078E12, 0.18400000000000033], [1.66172694E12, 0.07310618590803854], [1.66172976E12, 0.15300000000000014], [1.66173138E12, 0.0], [1.66172958E12, 0.16299999999999978], [1.66172634E12, 0.1855203619909501], [1.66172856E12, 0.21000000000000024], [1.66172574E12, 0.05979517674264939], [1.66172796E12, 0.0], [1.66173018E12, 0.16499999999999979], [1.66172934E12, 0.1689999999999999], [1.6617261E12, 0.046150745667069705], [1.66172832E12, 0.027857142857142858], [1.66172772E12, 0.058136448101937806], [1.66172994E12, 0.18900000000000028], [1.66173036E12, 0.1549999999999998], [1.66172712E12, 0.06635622817229332], [1.66172652E12, 0.04707955689828802], [1.66172814E12, 0.05898123324396779], [1.66172874E12, 0.1810000000000001], [1.66173096E12, 0.36300000000000043], [1.66172658E12, 0.05540838852097147], [1.66172982E12, 0.15100000000000005], [1.6617288E12, 0.19299999999999967], [1.66172598E12, 0.04345474215650927], [1.66173042E12, 0.17199999999999982], [1.6617276E12, 0.09926131117266854], [1.66173084E12, 0.22199999999999978], [1.66172862E12, 0.15300000000000008], [1.661727E12, 0.0], [1.66172922E12, 0.1740000000000001], [1.6617306E12, 0.17199999999999996], [1.66172736E12, 0.0600672753483902], [1.66172838E12, 0.17899543378995428], [1.66172676E12, 0.021820269882285397], [1.66172898E12, 0.168], [1.6617312E12, 0.18600000000000005], [1.6617294E12, 0.1549999999999999], [1.66173102E12, 0.1739999999999999], [1.66172616E12, 0.044744617982271084], [1.66172778E12, 0.09777227722772291], [1.66172718E12, 0.004957858205255329], [1.66173E12, 0.8450000000000005], [1.66172886E12, 0.15999999999999998], [1.66173108E12, 0.153], [1.66172562E12, 1.2777085927770868], [1.66172784E12, 0.04753597906672482], [1.66172724E12, 0.21766561514195573], [1.66172946E12, 0.1560000000000001], [1.66172826E12, 0.17882991556091649], [1.66172988E12, 0.1549999999999999], [1.66172664E12, 0.06502463054187192], [1.66172766E12, 0.0010219724067450228], [1.66172604E12, 0.021671222178836356], [1.66173048E12, 0.15000000000000005], [1.66172964E12, 0.1740000000000002], [1.66173126E12, 0.18153526970954362], [1.6617264E12, 0.2306540189715427], [1.66172802E12, 0.09151785714285683], [1.66172742E12, 0.08239549839228305], [1.6617258E12, 0.04875917511359665], [1.66173024E12, 0.16699999999999993], [1.66172682E12, 0.055384615384615414], [1.66173006E12, 0.15500000000000003], [1.66172904E12, 0.15999999999999998], [1.66172622E12, 0.05021186440677977], [1.66172844E12, 0.0], [1.66173066E12, 0.19100000000000036]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173138E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 811.0, "minX": 1.66172562E12, "maxY": 135524.0, "series": [{"data": [[1.66172688E12, 31196.0], [1.66172658E12, 24814.0], [1.66172628E12, 26010.0], [1.6617279E12, 53314.0], [1.66172598E12, 16566.0], [1.6617273E12, 130179.0], [1.66172568E12, 12991.0], [1.6617276E12, 46561.0], [1.6617267E12, 27445.0], [1.661727E12, 35045.0], [1.66172706E12, 34539.0], [1.66172736E12, 129276.0], [1.66172838E12, 41164.0], [1.66172676E12, 28717.0], [1.66172646E12, 21730.0], [1.66172616E12, 18958.0], [1.66172778E12, 51041.0], [1.66172586E12, 14967.0], [1.66172808E12, 65653.0], [1.66172718E12, 44071.0], [1.66172748E12, 43629.0], [1.66172754E12, 43940.0], [1.66172592E12, 15055.0], [1.66172562E12, 12254.0], [1.66172784E12, 17405.0], [1.66172694E12, 33380.0], [1.66172724E12, 55361.0], [1.66172826E12, 135524.0], [1.66172664E12, 25902.0], [1.66172634E12, 39407.0], [1.66172766E12, 45620.0], [1.66172604E12, 16959.0], [1.66172574E12, 13432.0], [1.66172796E12, 61552.0], [1.6617264E12, 72555.0], [1.66172802E12, 68627.0], [1.6617261E12, 17139.0], [1.66172832E12, 54164.0], [1.66172742E12, 41113.0], [1.6617258E12, 14245.0], [1.66172772E12, 46102.0], [1.66172682E12, 14008.0], [1.66172712E12, 37726.0], [1.66172652E12, 24169.0], [1.66172814E12, 91847.0], [1.66172622E12, 19202.0], [1.66172844E12, 94368.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.66172688E12, 30176.6], [1.66172658E12, 23580.8], [1.66172628E12, 12100.0], [1.6617279E12, 52390.4], [1.66172598E12, 15295.3], [1.6617273E12, 129563.2], [1.66172568E12, 11537.900000000001], [1.6617276E12, 45767.0], [1.6617267E12, 26636.7], [1.661727E12, 33622.0], [1.66172706E12, 14464.0], [1.66172736E12, 106329.7], [1.66172838E12, 30134.39999999997], [1.66172676E12, 27923.0], [1.66172646E12, 20807.7], [1.66172616E12, 17758.0], [1.66172778E12, 49963.0], [1.66172586E12, 14281.8], [1.66172808E12, 59617.2], [1.66172718E12, 38090.2], [1.66172748E12, 42804.0], [1.66172754E12, 43055.0], [1.66172592E12, 10800.900000000001], [1.66172562E12, 10870.0], [1.66172784E12, 16474.0], [1.66172694E12, 32200.6], [1.66172724E12, 49929.5], [1.66172826E12, 125199.3], [1.66172664E12, 25104.0], [1.66172634E12, 37118.700000000004], [1.66172766E12, 15936.0], [1.66172604E12, 15621.0], [1.66172574E12, 12719.5], [1.66172796E12, 17035.8], [1.6617264E12, 68159.8], [1.66172802E12, 67418.0], [1.6617261E12, 16290.0], [1.66172832E12, 52973.9], [1.66172742E12, 40257.2], [1.6617258E12, 13026.7], [1.66172772E12, 45052.4], [1.66172682E12, 13293.0], [1.66172712E12, 36251.0], [1.66172652E12, 22937.100000000002], [1.66172814E12, 89751.0], [1.66172622E12, 18245.0], [1.66172844E12, 77276.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.66172688E12, 30505.260000000002], [1.66172658E12, 23784.0], [1.66172628E12, 25127.57999999999], [1.6617279E12, 52618.7], [1.66172598E12, 15512.529999999999], [1.6617273E12, 130000.72], [1.66172568E12, 11958.189999999999], [1.6617276E12, 45842.33], [1.6617267E12, 26792.41], [1.661727E12, 33855.93], [1.66172706E12, 33830.0], [1.66172736E12, 126703.50999999998], [1.66172838E12, 41112.44], [1.66172676E12, 28098.0], [1.66172646E12, 21089.0], [1.66172616E12, 17871.61], [1.66172778E12, 50081.81], [1.66172586E12, 14469.779999999999], [1.66172808E12, 63157.2], [1.66172718E12, 42198.079999999994], [1.66172748E12, 42962.0], [1.66172754E12, 43253.0], [1.66172592E12, 14358.86], [1.66172562E12, 11605.2], [1.66172784E12, 16687.06], [1.66172694E12, 32403.28], [1.66172724E12, 55182.3], [1.66172826E12, 135223.0], [1.66172664E12, 25308.0], [1.66172634E12, 38366.0], [1.66172766E12, 44803.42], [1.66172604E12, 15888.0], [1.66172574E12, 12959.45], [1.66172796E12, 17616.56], [1.6617264E12, 69954.76], [1.66172802E12, 67868.63], [1.6617261E12, 16604.0], [1.66172832E12, 53258.97], [1.66172742E12, 40452.0], [1.6617258E12, 13299.0], [1.66172772E12, 45263.32], [1.66172682E12, 13568.48], [1.66172712E12, 36416.26], [1.66172652E12, 23545.0], [1.66172814E12, 91466.6], [1.66172622E12, 18361.0], [1.66172844E12, 92611.87999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.66172688E12, 30326.0], [1.66172658E12, 23696.45], [1.66172628E12, 23061.449999999997], [1.6617279E12, 52475.7], [1.66172598E12, 15363.949999999999], [1.6617273E12, 129573.0], [1.66172568E12, 11721.95], [1.6617276E12, 45801.65], [1.6617267E12, 26727.0], [1.661727E12, 33676.0], [1.66172706E12, 14597.0], [1.66172736E12, 120192.0], [1.66172838E12, 40964.0], [1.66172676E12, 28011.0], [1.66172646E12, 20897.0], [1.66172616E12, 17828.0], [1.66172778E12, 49995.0], [1.66172586E12, 14377.0], [1.66172808E12, 61019.1], [1.66172718E12, 38129.0], [1.66172748E12, 42868.9], [1.66172754E12, 43160.0], [1.66172592E12, 11518.899999999998], [1.66172562E12, 11047.2], [1.66172784E12, 16599.3], [1.66172694E12, 32273.8], [1.66172724E12, 54240.5], [1.66172826E12, 134785.15], [1.66172664E12, 25195.0], [1.66172634E12, 38102.65], [1.66172766E12, 44271.0], [1.66172604E12, 15807.849999999999], [1.66172574E12, 12831.25], [1.66172796E12, 17085.8], [1.6617264E12, 68607.2], [1.66172802E12, 67677.3], [1.6617261E12, 16479.85], [1.66172832E12, 53123.95], [1.66172742E12, 40376.55], [1.6617258E12, 13191.0], [1.66172772E12, 45184.0], [1.66172682E12, 13330.2], [1.66172712E12, 36327.15], [1.66172652E12, 23411.35], [1.66172814E12, 90672.1], [1.66172622E12, 18313.0], [1.66172844E12, 82258.79999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.66172688E12, 12719.0], [1.66172658E12, 11444.0], [1.66172628E12, 10531.0], [1.6617279E12, 15153.0], [1.66172598E12, 9761.0], [1.6617273E12, 128720.0], [1.66172568E12, 8592.0], [1.6617276E12, 14181.0], [1.6617267E12, 11830.0], [1.661727E12, 12854.0], [1.66172706E12, 12779.0], [1.66172736E12, 12961.0], [1.66172838E12, 16898.0], [1.66172676E12, 12065.0], [1.66172646E12, 10912.0], [1.66172616E12, 10490.0], [1.66172778E12, 15470.0], [1.66172586E12, 9029.0], [1.66172808E12, 17248.0], [1.66172718E12, 13544.0], [1.66172748E12, 13842.0], [1.66172754E12, 13715.0], [1.66172592E12, 9329.0], [1.66172562E12, 811.0], [1.66172784E12, 14851.0], [1.66172694E12, 12793.0], [1.66172724E12, 21747.0], [1.66172826E12, 15759.0], [1.66172664E12, 11739.0], [1.66172634E12, 22584.0], [1.66172766E12, 14369.0], [1.66172604E12, 9833.0], [1.66172574E12, 8453.0], [1.66172796E12, 15786.0], [1.6617264E12, 10736.0], [1.66172802E12, 16361.0], [1.6617261E12, 9997.0], [1.66172832E12, 16349.0], [1.66172742E12, 13500.0], [1.6617258E12, 9015.0], [1.66172772E12, 14649.0], [1.66172682E12, 12106.0], [1.66172712E12, 13218.0], [1.66172652E12, 11129.0], [1.66172814E12, 50880.0], [1.66172622E12, 10305.0], [1.66172844E12, 67613.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.66172688E12, 13673.0], [1.66172658E12, 12332.0], [1.66172628E12, 11703.5], [1.6617279E12, 16545.0], [1.66172598E12, 10639.0], [1.6617273E12, 129441.0], [1.66172568E12, 9721.5], [1.6617276E12, 15176.5], [1.6617267E12, 13107.0], [1.661727E12, 13789.0], [1.66172706E12, 13766.0], [1.66172736E12, 14033.0], [1.66172838E12, 17985.0], [1.66172676E12, 12981.0], [1.66172646E12, 11990.5], [1.66172616E12, 11326.0], [1.66172778E12, 49707.5], [1.66172586E12, 9818.0], [1.66172808E12, 58604.0], [1.66172718E12, 21186.0], [1.66172748E12, 14779.0], [1.66172754E12, 14965.5], [1.66172592E12, 10265.0], [1.66172562E12, 10071.0], [1.66172784E12, 15960.0], [1.66172694E12, 13878.0], [1.66172724E12, 39680.0], [1.66172826E12, 17022.0], [1.66172664E12, 12633.0], [1.66172634E12, 29475.0], [1.66172766E12, 15671.0], [1.66172604E12, 10856.5], [1.66172574E12, 9379.0], [1.66172796E12, 16851.0], [1.6617264E12, 20715.0], [1.66172802E12, 17734.5], [1.6617261E12, 11093.0], [1.66172832E12, 52572.0], [1.66172742E12, 14770.5], [1.6617258E12, 9971.0], [1.66172772E12, 16037.0], [1.66172682E12, 12947.0], [1.66172712E12, 14240.0], [1.66172652E12, 12409.0], [1.66172814E12, 77728.5], [1.66172622E12, 11415.0], [1.66172844E12, 70020.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66172844E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9184.0, "minX": 1.0, "maxY": 114293.0, "series": [{"data": [[2.0, 63644.0], [3.0, 69424.5], [4.0, 42251.0], [5.0, 49936.0], [6.0, 42717.0], [7.0, 28827.0], [8.0, 39106.5], [9.0, 39653.0], [10.0, 27233.5], [11.0, 39855.0], [12.0, 30405.0], [13.0, 34263.0], [14.0, 34388.0], [15.0, 31114.0], [16.0, 29988.0], [17.0, 38444.0], [18.0, 22074.0], [19.0, 52413.0], [20.0, 23785.0], [21.0, 52097.0], [22.0, 43203.0], [23.0, 51796.0], [24.0, 67862.0], [25.0, 43282.5], [26.0, 47936.0], [27.0, 22928.5], [28.0, 34960.5], [29.0, 21544.5], [30.0, 67321.0], [31.0, 35065.5], [32.0, 58165.5], [33.0, 37281.0], [35.0, 23844.0], [34.0, 63798.0], [36.0, 21243.0], [37.0, 36345.0], [39.0, 16049.0], [38.0, 58432.0], [40.0, 45664.5], [41.0, 27573.0], [42.0, 25417.0], [43.0, 28160.0], [45.0, 20462.5], [44.0, 35600.5], [46.0, 24395.5], [47.0, 42036.0], [49.0, 45647.5], [48.0, 45035.0], [50.0, 17021.5], [51.0, 18061.0], [53.0, 17613.5], [52.0, 17359.0], [55.0, 17047.0], [54.0, 52488.5], [56.0, 17233.5], [57.0, 17076.0], [59.0, 17698.0], [58.0, 17847.0], [60.0, 16864.0], [61.0, 16011.5], [62.0, 16771.0], [63.0, 16129.0], [65.0, 15605.0], [66.0, 15548.5], [64.0, 16347.0], [67.0, 15869.0], [71.0, 14287.0], [68.0, 15976.5], [70.0, 14662.0], [69.0, 15787.0], [72.0, 14272.0], [74.0, 14037.0], [73.0, 14427.0], [75.0, 13679.0], [76.0, 13768.0], [79.0, 12971.0], [78.0, 12992.5], [77.0, 13669.0], [82.0, 12531.0], [81.0, 12908.0], [80.0, 13007.5], [83.0, 12314.0], [87.0, 11817.0], [86.0, 12265.5], [84.0, 12156.5], [85.0, 12418.0], [88.0, 11168.0], [90.0, 11083.5], [89.0, 11403.5], [91.0, 11212.0], [95.0, 10619.0], [93.0, 11303.0], [94.0, 10691.0], [92.0, 11223.0], [96.0, 10987.0], [99.0, 10596.0], [97.0, 10579.5], [98.0, 10546.0], [101.0, 10035.5], [103.0, 9745.0], [100.0, 10192.0], [102.0, 10053.0], [106.0, 9704.5], [105.0, 9780.0], [104.0, 9859.5], [107.0, 9647.0], [111.0, 9996.0], [110.0, 9797.5], [109.0, 9387.5], [108.0, 9643.0], [113.0, 9691.5], [115.0, 9394.0], [112.0, 9235.0], [114.0, 9184.0], [118.0, 9314.0], [116.0, 9218.0], [1.0, 67613.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 60052.5], [4.0, 60016.0], [6.0, 60014.5], [11.0, 60016.0], [14.0, 60016.0], [17.0, 60114.5], [19.0, 60017.0], [21.0, 60023.0], [27.0, 60062.0], [30.0, 60015.0], [31.0, 60010.0], [33.0, 60011.0], [32.0, 60019.5], [34.0, 60009.0], [37.0, 60014.0], [38.0, 60016.0], [43.0, 60025.0], [46.0, 60016.0], [53.0, 60133.0], [52.0, 60014.0], [54.0, 60007.0], [67.0, 60008.0], [66.0, 60007.5], [70.0, 60030.0], [69.0, 60009.0], [75.0, 60008.0], [77.0, 61545.0], [78.0, 60010.0], [80.0, 60005.0], [81.0, 60007.0], [83.0, 60007.0], [87.0, 60005.0], [90.0, 60014.0], [91.0, 60040.0], [88.0, 60011.0], [92.0, 60008.0], [98.0, 114293.0], [97.0, 60006.0], [99.0, 60009.0], [96.0, 60007.0], [103.0, 60008.0], [102.0, 60009.0], [101.0, 60009.0], [100.0, 60010.0], [104.0, 60042.5], [108.0, 60031.0], [111.0, 60011.0], [109.0, 60031.0], [114.0, 60011.0], [115.0, 60012.0], [116.0, 60018.5], [122.0, 60024.0], [123.0, 60007.0], [120.0, 60014.0], [127.0, 60009.0], [126.0, 60007.0], [124.0, 60009.0], [128.0, 60160.0], [135.0, 60011.0], [134.0, 60008.0], [131.0, 60009.0], [140.0, 60012.0], [141.0, 60020.5], [138.0, 60011.0], [136.0, 60009.0], [143.0, 60007.0], [150.0, 60010.5], [145.0, 60013.0], [144.0, 60009.0], [148.0, 60014.5], [146.0, 60006.0], [154.0, 60008.0], [155.0, 60024.0], [152.0, 60006.0], [157.0, 60007.0], [162.0, 60008.0], [164.0, 60072.5], [161.0, 60007.0], [166.0, 60008.0], [167.0, 60008.0], [160.0, 60007.0], [165.0, 60007.0], [163.0, 60006.0], [170.0, 60083.0], [168.0, 60008.0], [171.0, 60008.0], [173.0, 60009.0], [177.0, 60082.0], [179.0, 60008.0], [176.0, 60008.0], [185.0, 60007.0], [197.0, 60135.0], [220.0, 60308.0], [223.0, 60624.0], [218.0, 60007.0], [225.0, 60007.0], [230.0, 60006.0], [224.0, 60011.0], [231.0, 60009.0], [228.0, 60008.0], [234.0, 60009.0], [238.0, 60010.5], [233.0, 60006.0], [239.0, 60008.0], [232.0, 60013.0], [237.0, 60067.0], [241.0, 60006.0], [244.0, 60006.0], [247.0, 60006.0], [246.0, 60006.0], [250.0, 60282.5], [249.0, 60007.0], [254.0, 60007.0], [256.0, 60008.0], [261.0, 60008.0], [282.0, 96058.0], [272.0, 60008.0], [283.0, 60007.0], [285.0, 60009.0], [293.0, 60175.0], [313.0, 91670.0], [307.0, 62507.0], [312.0, 60012.0], [310.0, 60008.0], [323.0, 60019.0], [351.0, 60009.0], [348.0, 60007.0], [346.0, 60015.0], [341.0, 60011.0], [352.0, 60007.0], [353.0, 60007.0], [359.0, 60006.0], [362.0, 60009.0], [358.0, 60457.0], [357.0, 60011.0], [354.0, 60009.0], [368.0, 60007.0], [398.0, 60016.0], [425.0, 60008.0], [433.0, 60007.0], [445.0, 60007.0], [473.0, 60008.0], [487.0, 60009.0], [492.0, 60008.0], [505.0, 60009.0], [508.0, 60008.0], [1.0, 60007.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 508.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9184.0, "minX": 1.0, "maxY": 114293.0, "series": [{"data": [[2.0, 63644.0], [3.0, 69409.0], [4.0, 42251.0], [5.0, 49936.0], [6.0, 42717.0], [7.0, 28799.0], [8.0, 39106.0], [9.0, 39653.0], [10.0, 27226.0], [11.0, 39855.0], [12.0, 30404.5], [13.0, 34263.0], [14.0, 34388.0], [15.0, 31114.0], [16.0, 29988.0], [17.0, 38444.0], [18.0, 22074.0], [19.0, 52413.0], [20.0, 23785.0], [21.0, 52097.0], [22.0, 43203.0], [23.0, 51796.0], [24.0, 67862.0], [25.0, 43282.5], [26.0, 47936.0], [27.0, 22928.5], [28.0, 34960.5], [29.0, 21544.5], [30.0, 67321.0], [31.0, 35065.5], [32.0, 58165.0], [33.0, 37281.0], [35.0, 23844.0], [34.0, 63798.0], [36.0, 21237.5], [37.0, 36345.0], [39.0, 16049.0], [38.0, 58432.0], [40.0, 45664.5], [41.0, 27573.0], [42.0, 25417.0], [43.0, 28160.0], [45.0, 20462.5], [44.0, 35600.5], [46.0, 24395.5], [47.0, 42036.0], [49.0, 45647.5], [48.0, 45035.0], [50.0, 17021.5], [51.0, 18061.0], [53.0, 17613.5], [52.0, 17359.0], [55.0, 17047.0], [54.0, 52488.5], [56.0, 17233.5], [57.0, 17076.0], [59.0, 17698.0], [58.0, 17847.0], [60.0, 16864.0], [61.0, 16011.5], [62.0, 16771.0], [63.0, 16129.0], [65.0, 15605.0], [66.0, 15548.5], [64.0, 16347.0], [67.0, 15869.0], [71.0, 14287.0], [68.0, 15976.5], [70.0, 14662.0], [69.0, 15787.0], [72.0, 14272.0], [74.0, 14037.0], [73.0, 14427.0], [75.0, 13679.0], [76.0, 13767.5], [79.0, 12971.0], [78.0, 12992.5], [77.0, 13669.0], [82.0, 12531.0], [81.0, 12908.0], [80.0, 13007.5], [83.0, 12314.0], [87.0, 11817.0], [86.0, 12265.5], [84.0, 12156.5], [85.0, 12418.0], [88.0, 11168.0], [90.0, 11083.5], [89.0, 11403.5], [91.0, 11212.0], [95.0, 10619.0], [93.0, 11303.0], [94.0, 10691.0], [92.0, 11223.0], [96.0, 10987.0], [99.0, 10596.0], [97.0, 10579.0], [98.0, 10546.0], [101.0, 10035.5], [103.0, 9745.0], [100.0, 10192.0], [102.0, 10053.0], [106.0, 9704.5], [105.0, 9780.0], [104.0, 9859.5], [107.0, 9647.0], [111.0, 9996.0], [110.0, 9797.5], [109.0, 9387.5], [108.0, 9643.0], [113.0, 9691.5], [115.0, 9394.0], [112.0, 9235.0], [114.0, 9184.0], [118.0, 9314.0], [116.0, 9218.0], [1.0, 67597.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[3.0, 60052.5], [4.0, 60016.0], [6.0, 60014.5], [11.0, 60016.0], [14.0, 60016.0], [17.0, 60114.5], [19.0, 60017.0], [21.0, 60023.0], [27.0, 60062.0], [30.0, 60015.0], [31.0, 60010.0], [33.0, 60011.0], [32.0, 60019.5], [34.0, 60009.0], [37.0, 60014.0], [38.0, 60016.0], [43.0, 60025.0], [46.0, 60016.0], [53.0, 60133.0], [52.0, 60014.0], [54.0, 60006.5], [67.0, 60008.0], [66.0, 60007.5], [70.0, 60030.0], [69.0, 60009.0], [75.0, 60008.0], [77.0, 61545.0], [78.0, 60010.0], [80.0, 60005.0], [81.0, 60007.0], [83.0, 60007.0], [87.0, 60005.0], [90.0, 60014.0], [91.0, 60040.0], [88.0, 60011.0], [92.0, 60008.0], [98.0, 114293.0], [97.0, 60006.0], [99.0, 60009.0], [96.0, 60007.0], [103.0, 60008.0], [102.0, 60009.0], [101.0, 60009.0], [100.0, 60010.0], [104.0, 60042.5], [108.0, 60031.0], [111.0, 60011.0], [109.0, 60031.0], [114.0, 60011.0], [115.0, 60012.0], [116.0, 60018.5], [122.0, 60024.0], [123.0, 60007.0], [120.0, 60014.0], [127.0, 60009.0], [126.0, 60007.0], [124.0, 60009.0], [128.0, 60160.0], [135.0, 60011.0], [134.0, 60008.0], [131.0, 60009.0], [140.0, 60012.0], [141.0, 60020.5], [138.0, 60011.0], [136.0, 60009.0], [143.0, 60007.0], [150.0, 60010.5], [145.0, 60013.0], [144.0, 60009.0], [148.0, 60014.5], [146.0, 60006.0], [154.0, 60008.0], [155.0, 60024.0], [152.0, 60006.0], [157.0, 60007.0], [162.0, 60008.0], [164.0, 60072.5], [161.0, 60007.0], [166.0, 60008.0], [167.0, 60008.0], [160.0, 60007.0], [165.0, 60007.0], [163.0, 60006.0], [170.0, 60083.0], [168.0, 60008.0], [171.0, 60008.0], [173.0, 60009.0], [177.0, 60082.0], [179.0, 60008.0], [176.0, 60008.0], [185.0, 60006.0], [197.0, 60135.0], [220.0, 60308.0], [223.0, 60624.0], [218.0, 60007.0], [225.0, 60007.0], [230.0, 60006.0], [224.0, 60011.0], [231.0, 60009.0], [228.0, 60008.0], [234.0, 60009.0], [238.0, 60010.5], [233.0, 60006.0], [239.0, 60008.0], [232.0, 60013.0], [237.0, 60067.0], [241.0, 60006.0], [244.0, 60006.0], [247.0, 60006.0], [246.0, 60006.0], [250.0, 60282.5], [249.0, 60007.0], [254.0, 60007.0], [256.0, 60008.0], [261.0, 60008.0], [282.0, 96058.0], [272.0, 60008.0], [283.0, 60007.0], [285.0, 60009.0], [293.0, 60175.0], [313.0, 91670.0], [307.0, 62507.0], [312.0, 60012.0], [310.0, 60008.0], [323.0, 60019.0], [351.0, 60009.0], [348.0, 60007.0], [346.0, 60015.0], [341.0, 60011.0], [352.0, 60007.0], [353.0, 60007.0], [359.0, 60006.0], [362.0, 60009.0], [358.0, 60457.0], [357.0, 60011.0], [354.0, 60009.0], [368.0, 60007.0], [398.0, 60016.0], [425.0, 60008.0], [433.0, 60007.0], [445.0, 60007.0], [473.0, 60008.0], [487.0, 60009.0], [492.0, 60008.0], [505.0, 60009.0], [508.0, 60008.0], [1.0, 60007.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 508.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66172562E12, "maxY": 101.33333333333333, "series": [{"data": [[1.6617285E12, 16.666666666666668], [1.66173012E12, 16.666666666666668], [1.66172688E12, 69.55], [1.66172628E12, 65.83333333333333], [1.6617279E12, 48.083333333333336], [1.66173072E12, 16.666666666666668], [1.6617273E12, 3.716666666666667], [1.66172892E12, 16.666666666666668], [1.66172568E12, 101.33333333333333], [1.66173054E12, 16.666666666666668], [1.6617267E12, 59.2], [1.66172952E12, 16.666666666666668], [1.66173114E12, 16.666666666666668], [1.66172706E12, 59.43333333333333], [1.6617303E12, 16.666666666666668], [1.66172928E12, 16.666666666666668], [1.6617309E12, 16.666666666666668], [1.66172646E12, 71.03333333333333], [1.66172868E12, 16.666666666666668], [1.6617291E12, 16.666666666666668], [1.66173132E12, 0.016666666666666666], [1.66172586E12, 93.68333333333334], [1.66172808E12, 11.216666666666667], [1.66172748E12, 35.68333333333333], [1.6617297E12, 16.666666666666668], [1.66172754E12, 63.36666666666667], [1.66172916E12, 16.666666666666668], [1.66172592E12, 90.93333333333334], [1.66173078E12, 16.666666666666668], [1.66172694E12, 50.38333333333333], [1.66172976E12, 16.666666666666668], [1.66172958E12, 16.666666666666668], [1.66172634E12, 29.466666666666665], [1.66172856E12, 16.666666666666668], [1.66172574E12, 100.9], [1.66172796E12, 15.016666666666667], [1.66173018E12, 16.666666666666668], [1.66172934E12, 16.666666666666668], [1.6617261E12, 82.7], [1.66172832E12, 23.333333333333332], [1.66172772E12, 62.78333333333333], [1.66172994E12, 16.666666666666668], [1.66173036E12, 16.666666666666668], [1.66172712E12, 57.266666666666666], [1.66172652E12, 66.2], [1.66172814E12, 12.433333333333334], [1.66172874E12, 16.666666666666668], [1.66173096E12, 16.666666666666668], [1.66172658E12, 75.5], [1.66172982E12, 16.666666666666668], [1.6617288E12, 16.666666666666668], [1.66172598E12, 92.45], [1.66173042E12, 16.666666666666668], [1.6617276E12, 36.1], [1.66173084E12, 16.666666666666668], [1.66172862E12, 16.666666666666668], [1.661727E12, 48.43333333333333], [1.66172922E12, 16.666666666666668], [1.6617306E12, 16.666666666666668], [1.66172736E12, 69.36666666666666], [1.66172838E12, 18.25], [1.66172676E12, 58.05], [1.66172898E12, 16.666666666666668], [1.6617312E12, 16.066666666666666], [1.6617294E12, 16.666666666666668], [1.66173102E12, 16.666666666666668], [1.66172616E12, 78.96666666666667], [1.66172778E12, 26.933333333333334], [1.66172718E12, 33.61666666666667], [1.66173E12, 16.666666666666668], [1.66172886E12, 16.666666666666668], [1.66173108E12, 16.666666666666668], [1.66172562E12, 83.58333333333333], [1.66172784E12, 38.21666666666667], [1.66172724E12, 10.566666666666666], [1.66172946E12, 16.666666666666668], [1.66172826E12, 55.266666666666666], [1.66172988E12, 16.666666666666668], [1.66172664E12, 67.66666666666667], [1.66172766E12, 32.61666666666667], [1.66172604E12, 85.35], [1.66173048E12, 16.666666666666668], [1.66172964E12, 16.666666666666668], [1.66173126E12, 9.033333333333333], [1.6617264E12, 33.38333333333333], [1.66172802E12, 52.266666666666666], [1.66172742E12, 41.46666666666667], [1.6617258E12, 95.36666666666666], [1.66173024E12, 16.666666666666668], [1.66172682E12, 59.583333333333336], [1.66173006E12, 16.666666666666668], [1.66172904E12, 16.666666666666668], [1.66172622E12, 78.66666666666667], [1.66172844E12, 13.0], [1.66173066E12, 16.666666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173132E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66172562E12, "maxY": 101.33333333333333, "series": [{"data": [[1.66172688E12, 69.55], [1.66172658E12, 75.5], [1.66172628E12, 65.83333333333333], [1.6617279E12, 48.083333333333336], [1.66172598E12, 92.43333333333334], [1.6617273E12, 3.716666666666667], [1.66172568E12, 101.33333333333333], [1.6617276E12, 36.1], [1.6617267E12, 59.2], [1.661727E12, 48.43333333333333], [1.66172706E12, 59.43333333333333], [1.66172736E12, 69.36666666666666], [1.66172838E12, 18.25], [1.66172676E12, 58.05], [1.66172646E12, 71.03333333333333], [1.66172616E12, 78.96666666666667], [1.66172778E12, 26.933333333333334], [1.66172586E12, 93.68333333333334], [1.66172808E12, 11.216666666666667], [1.66172718E12, 33.61666666666667], [1.66172748E12, 35.68333333333333], [1.66172754E12, 63.36666666666667], [1.66172592E12, 90.93333333333334], [1.66172562E12, 66.91666666666667], [1.66172784E12, 38.21666666666667], [1.66172694E12, 50.38333333333333], [1.66172724E12, 10.566666666666666], [1.66172826E12, 55.266666666666666], [1.66172664E12, 67.66666666666667], [1.66172634E12, 29.466666666666665], [1.66172766E12, 32.61666666666667], [1.66172604E12, 85.36666666666666], [1.66172574E12, 100.9], [1.66172796E12, 15.016666666666667], [1.6617264E12, 33.38333333333333], [1.66172802E12, 52.266666666666666], [1.6617261E12, 82.7], [1.66172832E12, 23.333333333333332], [1.66172742E12, 41.46666666666667], [1.6617258E12, 95.36666666666666], [1.66172772E12, 62.78333333333333], [1.66172682E12, 59.583333333333336], [1.66172712E12, 57.266666666666666], [1.66172652E12, 66.2], [1.66172814E12, 12.433333333333334], [1.66172622E12, 78.66666666666667], [1.66172844E12, 3.0833333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6617285E12, 16.666666666666668], [1.66173012E12, 16.666666666666668], [1.66173072E12, 16.666666666666668], [1.66172892E12, 16.666666666666668], [1.66173054E12, 16.666666666666668], [1.66172952E12, 16.666666666666668], [1.66173114E12, 16.666666666666668], [1.6617303E12, 16.666666666666668], [1.66172928E12, 16.666666666666668], [1.6617309E12, 16.666666666666668], [1.66172868E12, 16.666666666666668], [1.6617291E12, 16.666666666666668], [1.66173132E12, 9.033333333333333], [1.6617297E12, 16.666666666666668], [1.66172916E12, 16.666666666666668], [1.66173078E12, 16.666666666666668], [1.66172976E12, 16.666666666666668], [1.66173138E12, 0.016666666666666666], [1.66172958E12, 16.666666666666668], [1.66172856E12, 16.666666666666668], [1.66173018E12, 16.666666666666668], [1.66172934E12, 16.666666666666668], [1.66172994E12, 16.666666666666668], [1.66173036E12, 16.666666666666668], [1.66172874E12, 16.666666666666668], [1.66173096E12, 16.666666666666668], [1.66172982E12, 16.666666666666668], [1.6617288E12, 16.666666666666668], [1.66173042E12, 16.666666666666668], [1.66173084E12, 16.666666666666668], [1.66172862E12, 16.666666666666668], [1.66172922E12, 16.666666666666668], [1.6617306E12, 16.666666666666668], [1.66172898E12, 16.666666666666668], [1.6617312E12, 16.666666666666668], [1.6617294E12, 16.666666666666668], [1.66173102E12, 16.666666666666668], [1.66173E12, 16.666666666666668], [1.66172886E12, 16.666666666666668], [1.66173108E12, 16.666666666666668], [1.66172946E12, 16.666666666666668], [1.66172988E12, 16.666666666666668], [1.66173048E12, 16.666666666666668], [1.66172964E12, 16.666666666666668], [1.66173126E12, 16.066666666666666], [1.66173024E12, 16.666666666666668], [1.66173006E12, 16.666666666666668], [1.66172904E12, 16.666666666666668], [1.66172844E12, 9.916666666666666], [1.66173066E12, 16.666666666666668]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.66173138E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66172562E12, "maxY": 101.33333333333333, "series": [{"data": [[1.66172688E12, 69.55], [1.66172658E12, 75.5], [1.66172628E12, 65.83333333333333], [1.6617279E12, 48.083333333333336], [1.66172598E12, 92.43333333333334], [1.6617273E12, 3.716666666666667], [1.66172568E12, 101.33333333333333], [1.6617276E12, 36.1], [1.6617267E12, 59.2], [1.661727E12, 48.43333333333333], [1.66172706E12, 59.43333333333333], [1.66172736E12, 69.36666666666666], [1.66172838E12, 18.25], [1.66172676E12, 58.05], [1.66172646E12, 71.03333333333333], [1.66172616E12, 78.96666666666667], [1.66172778E12, 26.933333333333334], [1.66172586E12, 93.68333333333334], [1.66172808E12, 11.216666666666667], [1.66172718E12, 33.61666666666667], [1.66172748E12, 35.68333333333333], [1.66172754E12, 63.36666666666667], [1.66172592E12, 90.93333333333334], [1.66172562E12, 66.91666666666667], [1.66172784E12, 38.21666666666667], [1.66172694E12, 50.38333333333333], [1.66172724E12, 10.566666666666666], [1.66172826E12, 55.266666666666666], [1.66172664E12, 67.66666666666667], [1.66172634E12, 29.466666666666665], [1.66172766E12, 32.61666666666667], [1.66172604E12, 85.36666666666666], [1.66172574E12, 100.9], [1.66172796E12, 15.016666666666667], [1.6617264E12, 33.38333333333333], [1.66172802E12, 52.266666666666666], [1.6617261E12, 82.7], [1.66172832E12, 23.333333333333332], [1.66172742E12, 41.46666666666667], [1.6617258E12, 95.36666666666666], [1.66172772E12, 62.78333333333333], [1.66172682E12, 59.583333333333336], [1.66172712E12, 57.266666666666666], [1.66172652E12, 66.2], [1.66172814E12, 12.433333333333334], [1.66172622E12, 78.66666666666667], [1.66172844E12, 3.0833333333333335]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6617285E12, 16.666666666666668], [1.66173012E12, 16.666666666666668], [1.66173072E12, 16.666666666666668], [1.66172892E12, 16.666666666666668], [1.66173054E12, 16.666666666666668], [1.66172952E12, 16.666666666666668], [1.66173114E12, 16.666666666666668], [1.6617303E12, 16.666666666666668], [1.66172928E12, 16.666666666666668], [1.6617309E12, 16.666666666666668], [1.66172868E12, 16.666666666666668], [1.6617291E12, 16.666666666666668], [1.66173132E12, 9.033333333333333], [1.6617297E12, 16.666666666666668], [1.66172916E12, 16.666666666666668], [1.66173078E12, 16.666666666666668], [1.66172976E12, 16.666666666666668], [1.66173138E12, 0.016666666666666666], [1.66172958E12, 16.666666666666668], [1.66172856E12, 16.666666666666668], [1.66173018E12, 16.666666666666668], [1.66172934E12, 16.666666666666668], [1.66172994E12, 16.666666666666668], [1.66173036E12, 16.666666666666668], [1.66172874E12, 16.666666666666668], [1.66173096E12, 16.666666666666668], [1.66172982E12, 16.666666666666668], [1.6617288E12, 16.666666666666668], [1.66173042E12, 16.666666666666668], [1.66173084E12, 16.666666666666668], [1.66172862E12, 16.666666666666668], [1.66172922E12, 16.666666666666668], [1.6617306E12, 16.666666666666668], [1.66172898E12, 16.666666666666668], [1.6617312E12, 16.666666666666668], [1.6617294E12, 16.666666666666668], [1.66173102E12, 16.666666666666668], [1.66173E12, 16.666666666666668], [1.66172886E12, 16.666666666666668], [1.66173108E12, 16.666666666666668], [1.66172946E12, 16.666666666666668], [1.66172988E12, 16.666666666666668], [1.66173048E12, 16.666666666666668], [1.66172964E12, 16.666666666666668], [1.66173126E12, 16.066666666666666], [1.66173024E12, 16.666666666666668], [1.66173006E12, 16.666666666666668], [1.66172904E12, 16.666666666666668], [1.66172844E12, 9.916666666666666], [1.66173066E12, 16.666666666666668]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173138E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.66172562E12, "maxY": 101.33333333333333, "series": [{"data": [[1.66172688E12, 69.55], [1.66172658E12, 75.5], [1.66172628E12, 65.83333333333333], [1.6617279E12, 48.083333333333336], [1.66172598E12, 92.43333333333334], [1.6617273E12, 3.716666666666667], [1.66172568E12, 101.33333333333333], [1.6617276E12, 36.1], [1.6617267E12, 59.2], [1.661727E12, 48.43333333333333], [1.66172706E12, 59.43333333333333], [1.66172736E12, 69.36666666666666], [1.66172838E12, 18.25], [1.66172676E12, 58.05], [1.66172646E12, 71.03333333333333], [1.66172616E12, 78.96666666666667], [1.66172778E12, 26.933333333333334], [1.66172586E12, 93.68333333333334], [1.66172808E12, 11.216666666666667], [1.66172718E12, 33.61666666666667], [1.66172748E12, 35.68333333333333], [1.66172754E12, 63.36666666666667], [1.66172592E12, 90.93333333333334], [1.66172562E12, 66.91666666666667], [1.66172784E12, 38.21666666666667], [1.66172694E12, 50.38333333333333], [1.66172724E12, 10.566666666666666], [1.66172826E12, 55.266666666666666], [1.66172664E12, 67.66666666666667], [1.66172634E12, 29.466666666666665], [1.66172766E12, 32.61666666666667], [1.66172604E12, 85.36666666666666], [1.66172574E12, 100.9], [1.66172796E12, 15.016666666666667], [1.6617264E12, 33.38333333333333], [1.66172802E12, 52.266666666666666], [1.6617261E12, 82.7], [1.66172832E12, 23.333333333333332], [1.66172742E12, 41.46666666666667], [1.6617258E12, 95.36666666666666], [1.66172772E12, 62.78333333333333], [1.66172682E12, 59.583333333333336], [1.66172712E12, 57.266666666666666], [1.66172652E12, 66.2], [1.66172814E12, 12.433333333333334], [1.66172622E12, 78.66666666666667], [1.66172844E12, 3.0833333333333335]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6617285E12, 16.666666666666668], [1.66173012E12, 16.666666666666668], [1.66173072E12, 16.666666666666668], [1.66172892E12, 16.666666666666668], [1.66173054E12, 16.666666666666668], [1.66172952E12, 16.666666666666668], [1.66173114E12, 16.666666666666668], [1.6617303E12, 16.666666666666668], [1.66172928E12, 16.666666666666668], [1.6617309E12, 16.666666666666668], [1.66172868E12, 16.666666666666668], [1.6617291E12, 16.666666666666668], [1.66173132E12, 9.033333333333333], [1.6617297E12, 16.666666666666668], [1.66172916E12, 16.666666666666668], [1.66173078E12, 16.666666666666668], [1.66172976E12, 16.666666666666668], [1.66173138E12, 0.016666666666666666], [1.66172958E12, 16.666666666666668], [1.66172856E12, 16.666666666666668], [1.66173018E12, 16.666666666666668], [1.66172934E12, 16.666666666666668], [1.66172994E12, 16.666666666666668], [1.66173036E12, 16.666666666666668], [1.66172874E12, 16.666666666666668], [1.66173096E12, 16.666666666666668], [1.66172982E12, 16.666666666666668], [1.6617288E12, 16.666666666666668], [1.66173042E12, 16.666666666666668], [1.66173084E12, 16.666666666666668], [1.66172862E12, 16.666666666666668], [1.66172922E12, 16.666666666666668], [1.6617306E12, 16.666666666666668], [1.66172898E12, 16.666666666666668], [1.6617312E12, 16.666666666666668], [1.6617294E12, 16.666666666666668], [1.66173102E12, 16.666666666666668], [1.66173E12, 16.666666666666668], [1.66172886E12, 16.666666666666668], [1.66173108E12, 16.666666666666668], [1.66172946E12, 16.666666666666668], [1.66172988E12, 16.666666666666668], [1.66173048E12, 16.666666666666668], [1.66172964E12, 16.666666666666668], [1.66173126E12, 16.066666666666666], [1.66173024E12, 16.666666666666668], [1.66173006E12, 16.666666666666668], [1.66172904E12, 16.666666666666668], [1.66172844E12, 9.916666666666666], [1.66173066E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.66173138E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

